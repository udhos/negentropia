// Generated by dart2js, the Dart to JavaScript compiler version: 0.6.3.3_r24898.
// The code supports the following hooks:
// dartPrint(message)   - if this function is defined it is called
//                        instead of the Dart [print] method.
// dartMainRunner(main) - if this function is defined, the Dart [main]
//                        method will not be invoked directly.
//                        Instead, a closure that will invoke [main] is
//                        passed to [dartMainRunner].
function Isolate() {}
init();

var $ = Isolate.$isolateProperties;
var $$ = {};

// Native classes
$$._HTMLElement = {"": "Element;"};

$$.AbstractWorker = {"": "EventTarget;",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  }
};

$$.AnchorElement = {"": "_HTMLElement;href},name=,type%",
  toString$0: function(receiver) {
    return receiver.toString();
  }
};

$$.AnimationEvent = {"": "Event;"};

$$.ApplicationCache = {"": "EventTarget;",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  }
};

$$.AreaElement = {"": "_HTMLElement;href}"};

$$.AudioElement = {"": "MediaElement;"};

$$.AutocompleteErrorEvent = {"": "Event;"};

$$.BRElement = {"": "_HTMLElement;"};

$$.BarProp = {"": "Interceptor;"};

$$.BaseElement = {"": "_HTMLElement;href}"};

$$.BeforeLoadEvent = {"": "Event;"};

$$.Blob = {"": "Interceptor;type=", $isBlob: true, $asBlob: null};

$$.BodyElement = {"": "_HTMLElement;",
  get$onError: function(receiver) {
    return $.EventStreamProvider_error.forTarget$1(receiver);
  },
  get$onLoad: function(receiver) {
    return $.EventStreamProvider_load0.forTarget$1(receiver);
  }
};

$$.ButtonElement = {"": "_HTMLElement;name=,type%,value}"};

$$.CDataSection = {"": "Text;"};

$$.Canvas2DContextAttributes = {"": "Interceptor;"};

$$.CanvasElement = {"": "_HTMLElement;height%,width%",
  getContext$2: function(receiver, contextId, attrs) {
    return receiver.getContext(contextId, $.convertDartToNative_Dictionary(attrs));
    return receiver.getContext(contextId);
  },
  get$onWebGlContextLost: function(receiver) {
    return $.EventStreamProvider_webglcontextlost.forTarget$1(receiver);
  },
  get$onWebGlContextRestored: function(receiver) {
    return $.EventStreamProvider_webglcontextrestored.forTarget$1(receiver);
  },
  getContext3d$6$alpha$antialias$depth$premultipliedAlpha$preserveDrawingBuffer$stencil: function(receiver, alpha, antialias, depth, premultipliedAlpha, preserveDrawingBuffer, stencil) {
    var options, context;
    options = $.makeLiteralMap(["alpha", alpha, "depth", depth, "stencil", stencil, "antialias", antialias, "premultipliedAlpha", premultipliedAlpha, "preserveDrawingBuffer", preserveDrawingBuffer]);
    context = this.getContext$2(receiver, "webgl", options);
    return context == null ? this.getContext$2(receiver, "experimental-webgl", options) : context;
  },
  getContext3d$1$preserveDrawingBuffer: function($receiver, preserveDrawingBuffer) {
    return this.getContext3d$6$alpha$antialias$depth$premultipliedAlpha$preserveDrawingBuffer$stencil($receiver, true, true, true, true, preserveDrawingBuffer, false);
  }
};

$$.CanvasGradient = {"": "Interceptor;"};

$$.CanvasPattern = {"": "Interceptor;"};

$$.CanvasRenderingContext = {"": "Interceptor;"};

$$.CanvasRenderingContext2D = {"": "CanvasRenderingContext;",
  scale$2: function(receiver, sx, sy) {
    return receiver.scale(sx, sy);
  },
  get$scale: function(_receiver) {
    return new $.BoundClosure$i2(this, "scale$2", _receiver);
  }
};

$$.CharacterData = {"": "Node;data=,length="};

$$.CloseEvent = {"": "Event;"};

$$.Comment = {"": "CharacterData;"};

$$.Composition = {"": "Interceptor;"};

$$.CompositionEvent = {"": "UIEvent;data="};

$$.ContentElement = {"": "_HTMLElement;"};

$$.Coordinates = {"": "Interceptor;"};

$$.Crypto = {"": "Interceptor;"};

$$.Css = {"": "Interceptor;"};

$$.CssCharsetRule = {"": "CssRule;"};

$$.CssFilterRule = {"": "CssRule;style="};

$$.CssFilterValue = {"": "_CssValueList;"};

$$.CssFontFaceLoadEvent = {"": "Event;"};

$$.CssFontFaceRule = {"": "CssRule;style="};

$$.CssHostRule = {"": "CssRule;"};

$$.CssImportRule = {"": "CssRule;"};

$$.CssKeyframeRule = {"": "CssRule;style="};

$$.CssKeyframesRule = {"": "CssRule;name="};

$$.CssMatrix = {"": "Interceptor;",
  scale$3: function(receiver, scaleX, scaleY, scaleZ) {
    return receiver.scale(scaleX, scaleY, scaleZ);
  },
  get$scale: function(_receiver) {
    return new $.BoundClosure$i3(this, "scale$3", _receiver);
  },
  toString$0: function(receiver) {
    return receiver.toString();
  }
};

$$.CssMediaRule = {"": "CssRule;"};

$$.CssMixFunctionValue = {"": "_CssValueList;"};

$$.CssPageRule = {"": "CssRule;style="};

$$.CssRegionRule = {"": "CssRule;"};

$$.CssRule = {"": "Interceptor;type="};

$$.CssStyleDeclaration = {"": "Interceptor;length=",
  getPropertyValue$1: function(receiver, propertyName) {
    var propValue = receiver.getPropertyValue(propertyName);
    return propValue != null ? propValue : "";
  },
  setProperty$3: function(receiver, propertyName, value, priority) {
    var exception;
    try {
      if (priority == null)
        priority = "";
      receiver.setProperty(propertyName, value, priority);
      if (!!receiver.setAttribute)
        receiver.setAttribute(propertyName, value);
    } catch (exception) {
      $.unwrapException(exception);
    }

  },
  set$backgroundColor: function(receiver, value) {
    this.setProperty$3(receiver, "background-color", value, "");
  },
  get$clear: function(receiver) {
    return this.getPropertyValue$1(receiver, "clear");
  },
  clear$1: function($receiver, arg0) {
    return this.get$clear($receiver).call$1(arg0);
  },
  set$display: function(receiver, value) {
    this.setProperty$3(receiver, "display", value, "");
  },
  set$height: function(receiver, value) {
    this.setProperty$3(receiver, "height", value, "");
  },
  get$page: function(receiver) {
    var propValue = receiver.getPropertyValue("page");
    return propValue != null ? propValue : "";
  }
};

$$.CssStyleRule = {"": "CssRule;style="};

$$.CssStyleSheet = {"": "StyleSheet;"};

$$.CssSupportsRule = {"": "CssRule;"};

$$.CssTransformValue = {"": "_CssValueList;"};

$$.CssUnknownRule = {"": "CssRule;"};

$$.CustomElementConstructor = {"": "Interceptor;"};

$$.CustomEvent = {"": "Event;"};

$$.DListElement = {"": "_HTMLElement;"};

$$.DataListElement = {"": "_HTMLElement;"};

$$.DataTransfer = {"": "Interceptor;"};

$$.DataTransferItem = {"": "Interceptor;type="};

$$.DataTransferItemList = {"": "Interceptor;length=",
  add$2: function(receiver, data_OR_file, type) {
    return receiver.add(data_OR_file, type);
  },
  add$1: function($receiver, data_OR_file) {
    return $receiver.add(data_OR_file);
  }
};

$$.DetailsElement = {"": "_HTMLElement;"};

$$.DeviceAcceleration = {"": "Interceptor;x=,y=,z="};

$$.DeviceMotionEvent = {"": "Event;"};

$$.DeviceOrientationEvent = {"": "Event;"};

$$.DeviceRotationRate = {"": "Interceptor;"};

$$.DialogElement = {"": "_HTMLElement;"};

$$.DirectoryEntry = {"": "Entry;"};

$$.DirectoryReader = {"": "Interceptor;"};

$$.DivElement = {"": "_HTMLElement;"};

$$.Document = {"": "Node;children=",
  get$onFullscreenChange: function(receiver) {
    return $.EventStreamProvider_webkitfullscreenchange.forTarget$1(receiver);
  },
  get$onFullscreenError: function(receiver) {
    return $.EventStreamProvider_webkitfullscreenerror.forTarget$1(receiver);
  },
  get$onPointerLockChange: function(receiver) {
    return $.EventStreamProvider_webkitpointerlockchange.forTarget$1(receiver);
  }
};

$$.DocumentFragment = {"": "Node;",
  get$children: function(receiver) {
    var t1;
    if (receiver._children == null) {
      t1 = new $.FilteredElementList(receiver, this.get$nodes(receiver));
      $.setRuntimeTypeInfo(t1, [null]);
      receiver._children = t1;
    }
    return receiver._children;
  }
};

$$.DocumentType = {"": "Node;"};

$$.DomError = {"": "Interceptor;name="};

$$.DomException = {"": "Interceptor;",
  get$name: function(receiver) {
    var errorName = receiver.name;
    if ($.Device_isWebKit() === true && errorName === "SECURITY_ERR")
      return "SecurityError";
    if ($.Device_isWebKit() === true && errorName === "SYNTAX_ERR")
      return "SyntaxError";
    return errorName;
  },
  toString$0: function(receiver) {
    return receiver.toString();
  }
};

$$.DomImplementation = {"": "Interceptor;"};

$$.DomParser = {"": "Interceptor;"};

$$.DomSettableTokenList = {"": "DomTokenList;"};

$$.DomStringList = {"": "Interceptor_ListMixin_ImmutableListMixin;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw $.wrapException(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot assign element of immutable List."));
  },
  set$length: function(receiver, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw $.wrapException(new $.StateError("No elements"));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  $isList: true,
  $asList: function () { return [$.JSString]; },
  $isIterable: true,
  $asIterable: function () { return [$.JSString]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.DomTokenList = {"": "Interceptor;length=",
  toString$0: function(receiver) {
    return receiver.toString();
  }
};

$$.Element = {"": "Node;id%,$$dom_children:children=,style=",
  get$children: function(receiver) {
    return new $._ChildrenElementList(receiver, this.get$$$dom_children(receiver));
  },
  get$client: function(receiver) {
    return new $.Rect(receiver.clientLeft, receiver.clientTop, receiver.clientWidth, receiver.clientHeight);
  },
  appendText$1: function(receiver, text) {
    this.insertAdjacentText$2(receiver, "beforeend", text);
  },
  get$localName: function(receiver) {
    return receiver.localName;
  },
  toString$0: function(receiver) {
    return this.get$localName(receiver);
  },
  insertAdjacentText$2: function(receiver, where, text) {
    if (!!receiver.insertAdjacentText)
      receiver.insertAdjacentText(where, text);
    else
      this._insertAdjacentNode$2(receiver, where, $.Text_Text(text));
  },
  _insertAdjacentNode$2: function(receiver, where, node) {
    var t1, first;
    switch ($.JSString_methods.toLowerCase$0(where)) {
      case "beforebegin":
        receiver.parentNode.insertBefore(node, receiver);
        break;
      case "afterbegin":
        t1 = this.get$nodes(receiver);
        if ($.$gt$n(t1.get$length(t1), 0)) {
          t1 = this.get$nodes(receiver);
          first = t1.$index(t1, 0);
        } else
          first = null;
        receiver.insertBefore(node, first);
        break;
      case "beforeend":
        receiver.appendChild(node);
        break;
      case "afterend":
        receiver.parentNode.insertBefore(node, receiver.nextSibling);
        break;
      default:
        throw $.wrapException($.ArgumentError$("Invalid position " + where));
    }
  },
  get$model: function(receiver) {
    return $.get$model$x($.get$TemplateElement_mdvPackage().call$1(receiver));
  },
  get$onClick: function(receiver) {
    return $.EventStreamProvider_click.forTarget$1(receiver);
  },
  get$onError: function(receiver) {
    return $.EventStreamProvider_error.forTarget$1(receiver);
  },
  get$onLoad: function(receiver) {
    return $.EventStreamProvider_load0.forTarget$1(receiver);
  },
  get$onMouseDown: function(receiver) {
    return $.EventStreamProvider_mousedown.forTarget$1(receiver);
  },
  get$onMouseMove: function(receiver) {
    return $.EventStreamProvider_mousemove.forTarget$1(receiver);
  },
  get$onMouseUp: function(receiver) {
    return $.EventStreamProvider_mouseup.forTarget$1(receiver);
  },
  get$onMouseWheel: function(receiver) {
    return $._CustomEventStreamProvider__determineMouseWheelEventType.forTarget$1(receiver);
  },
  get$onTouchCancel: function(receiver) {
    return $.EventStreamProvider_touchcancel.forTarget$1(receiver);
  },
  get$onTouchEnd: function(receiver) {
    return $.EventStreamProvider_touchend.forTarget$1(receiver);
  },
  get$onTouchMove: function(receiver) {
    return $.EventStreamProvider_touchmove.forTarget$1(receiver);
  },
  get$onTouchStart: function(receiver) {
    return $.EventStreamProvider_touchstart.forTarget$1(receiver);
  },
  $isElement: true,
  $asElement: null
};

$$.EmbedElement = {"": "_HTMLElement;height%,name=,src},type%,width%"};

$$.Entry = {"": "Interceptor;name=",
  _remove$2: function(receiver, successCallback, errorCallback) {
    return receiver.remove($.convertDartClosureToJS(successCallback, 0), $.convertDartClosureToJS(errorCallback, 1));
  },
  remove$0: function(receiver) {
    var completer = $.Completer_Completer();
    this._remove$2(receiver, new $.Entry_remove_closure(completer), new $.Entry_remove_closure0(completer));
    return completer.future;
  }
};

$$.ErrorEvent = {"": "Event;"};

$$.Event = {"": "Interceptor;timeStamp=,type=",
  preventDefault$0: function(receiver) {
    return receiver.preventDefault();
  }
};

$$.EventException = {"": "Interceptor;name=",
  toString$0: function(receiver) {
    return receiver.toString();
  }
};

$$.EventSource = {"": "EventTarget;",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  }
};

$$.EventTarget = {"": "Interceptor;",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  }
};

$$.FieldSetElement = {"": "_HTMLElement;name=,type="};

$$.File = {"": "Blob;name=", $isFile: true, $asFile: null};

$$.FileEntry = {"": "Entry;"};

$$.FileError = {"": "Interceptor;"};

$$.FileException = {"": "Interceptor;name=",
  toString$0: function(receiver) {
    return receiver.toString();
  }
};

$$.FileList = {"": "Interceptor_ListMixin_ImmutableListMixin0;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw $.wrapException(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot assign element of immutable List."));
  },
  set$length: function(receiver, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw $.wrapException(new $.StateError("No elements"));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  $isFileList: true,
  $asFileList: null,
  $isList: true,
  $asList: function () { return [$.File]; },
  $isIterable: true,
  $asIterable: function () { return [$.File]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.FileReader = {"": "EventTarget;",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  }
};

$$.FileSystem = {"": "Interceptor;name="};

$$.FileWriter = {"": "EventTarget;length=",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  write$1: function(receiver, data) {
    return receiver.write(data);
  }
};

$$.FocusEvent = {"": "UIEvent;"};

$$.FontLoader = {"": "EventTarget;",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  }
};

$$.FormData = {"": "Interceptor;"};

$$.FormElement = {"": "_HTMLElement;length=,name="};

$$.Gamepad = {"": "Interceptor;"};

$$.Geolocation = {"": "Interceptor;"};

$$.Geoposition = {"": "Interceptor;"};

$$.HRElement = {"": "_HTMLElement;"};

$$.HashChangeEvent = {"": "Event;"};

$$.HeadElement = {"": "_HTMLElement;"};

$$.HeadingElement = {"": "_HTMLElement;"};

$$.History = {"": "Interceptor;length="};

$$.HtmlAllCollection = {"": "Interceptor_ListMixin_ImmutableListMixin1;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw $.wrapException(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
    return receiver.item(index);
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot assign element of immutable List."));
  },
  set$length: function(receiver, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw $.wrapException(new $.StateError("No elements"));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  $isList: true,
  $asList: function () { return [$.Node]; },
  $isIterable: true,
  $asIterable: function () { return [$.Node]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.HtmlCollection = {"": "Interceptor_ListMixin_ImmutableListMixin2;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw $.wrapException(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot assign element of immutable List."));
  },
  set$length: function(receiver, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw $.wrapException(new $.StateError("No elements"));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  $isList: true,
  $asList: function () { return [$.Node]; },
  $isIterable: true,
  $asIterable: function () { return [$.Node]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.HtmlDocument = {"": "Document;"};

$$.HtmlElement = {"": "_HTMLElement;"};

$$.HtmlFormControlsCollection = {"": "HtmlCollection;"};

$$.HtmlOptionsCollection = {"": "HtmlCollection;"};

$$.HttpRequest = {"": "EventTarget;responseText=",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  open$5$async$password$user: function(receiver, method, url, async, password, user) {
    return receiver.open(method, url, async, user, password);
  },
  open$3$async: function($receiver, method, url, async) {
    return $receiver.open(method, url, async);
  },
  open$2: function($receiver, method, url) {
    return $receiver.open(method, url);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  get$onError: function(receiver) {
    return $.EventStreamProvider_error0.forTarget$1(receiver);
  },
  get$onLoad: function(receiver) {
    return $.EventStreamProvider_load.forTarget$1(receiver);
  }
};

$$.HttpRequestProgressEvent = {"": "ProgressEvent;"};

$$.HttpRequestUpload = {"": "EventTarget;",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  }
};

$$.IFrameElement = {"": "_HTMLElement;height%,name=,src},width%"};

$$.ImageData = {"": "Interceptor;data=", $isImageData: true, $asImageData: null};

$$.ImageElement = {"": "_HTMLElement;height%,src},width%,x=,y="};

$$.InputElement = {"": "_HTMLElement;checked%,height%,name=,src},type%,value},width%", $isElement: true, $asElement: null};

$$.InputMethodContext = {"": "Interceptor;"};

$$.KeyboardEvent = {"": "UIEvent;",
  get$keyCode: function(receiver) {
    return receiver.keyCode;
  }
};

$$.KeygenElement = {"": "_HTMLElement;name=,type="};

$$.LIElement = {"": "_HTMLElement;type%,value}"};

$$.LabelElement = {"": "_HTMLElement;htmlFor}"};

$$.LegendElement = {"": "_HTMLElement;"};

$$.LinkElement = {"": "_HTMLElement;href},type%"};

$$.Location = {"": "Interceptor;",
  toString$0: function(receiver) {
    return receiver.toString();
  }
};

$$.MapElement = {"": "_HTMLElement;name="};

$$.MediaController = {"": "EventTarget;",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  }
};

$$.MediaElement = {"": "_HTMLElement;src}"};

$$.MediaError = {"": "Interceptor;"};

$$.MediaKeyError = {"": "Interceptor;"};

$$.MediaKeyEvent = {"": "Event;"};

$$.MediaKeyMessageEvent = {"": "Event;"};

$$.MediaKeyNeededEvent = {"": "Event;"};

$$.MediaKeySession = {"": "EventTarget;",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  update$1: function(receiver, key) {
    return receiver.update(key);
  }
};

$$.MediaKeys = {"": "Interceptor;"};

$$.MediaList = {"": "Interceptor;length="};

$$.MediaQueryList = {"": "Interceptor;"};

$$.MediaSource = {"": "EventTarget;",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  }
};

$$.MediaStream = {"": "EventTarget;",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  }
};

$$.MediaStreamEvent = {"": "Event;"};

$$.MediaStreamTrack = {"": "EventTarget;",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  }
};

$$.MediaStreamTrackEvent = {"": "Event;"};

$$.MemoryInfo = {"": "Interceptor;"};

$$.MenuElement = {"": "_HTMLElement;"};

$$.MessageChannel = {"": "Interceptor;"};

$$.MessageEvent = {"": "Event;",
  get$data: function(receiver) {
    return $.convertNativeToDart_SerializedScriptValue(receiver.data);
  }
};

$$.MessagePort = {"": "EventTarget;",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  start$0: function(receiver) {
    return receiver.start();
  }
};

$$.MetaElement = {"": "_HTMLElement;name="};

$$.Metadata = {"": "Interceptor;"};

$$.MeterElement = {"": "_HTMLElement;value}"};

$$.MidiAccess = {"": "EventTarget;",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  }
};

$$.MidiConnectionEvent = {"": "Event;"};

$$.MidiInput = {"": "MidiPort;"};

$$.MidiMessageEvent = {"": "Event;data="};

$$.MidiOutput = {"": "MidiPort;",
  send$2: function(receiver, data, timestamp) {
    return receiver.send(data, timestamp);
  }
};

$$.MidiPort = {"": "EventTarget;name=,type=",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  }
};

$$.MimeType = {"": "Interceptor;type="};

$$.MimeTypeArray = {"": "Interceptor_ListMixin_ImmutableListMixin3;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw $.wrapException(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot assign element of immutable List."));
  },
  set$length: function(receiver, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw $.wrapException(new $.StateError("No elements"));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  $isList: true,
  $asList: function () { return [$.MimeType]; },
  $isIterable: true,
  $asIterable: function () { return [$.MimeType]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.ModElement = {"": "_HTMLElement;"};

$$.MouseEvent = {"": "UIEvent;button=",
  get$client: function(receiver) {
    return new $.Point(receiver.clientX, receiver.clientY);
  }
};

$$.MutationEvent = {"": "Event;"};

$$.MutationObserver = {"": "Interceptor;"};

$$.MutationRecord = {"": "Interceptor;type="};

$$.NamedFlow = {"": "EventTarget;name=",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  }
};

$$.NamedFlowCollection = {"": "Interceptor;length="};

$$.Navigator = {"": "Interceptor;"};

$$.NavigatorUserMediaError = {"": "Interceptor;name="};

$$.Node = {"": "EventTarget;text:textContent}",
  get$nodes: function(receiver) {
    return $._ChildNodeListLazy$(receiver);
  },
  remove$0: function(receiver) {
    var t1 = receiver.parentNode;
    if (t1 != null)
      t1.removeChild(receiver);
  },
  replaceWith$1: function(receiver, otherNode) {
    var $parent, exception;
    try {
      $parent = receiver.parentNode;
      $.$$dom_replaceChild$2$x($parent, otherNode, receiver);
    } catch (exception) {
      $.unwrapException(exception);
    }

    return receiver;
  },
  toString$0: function(receiver) {
    var t1 = receiver.nodeValue;
    return t1 == null ? $.Interceptor.prototype.toString$0.call(this, receiver) : t1;
  },
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  append$1: function(receiver, newChild) {
    return receiver.appendChild(newChild);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  $$dom_replaceChild$2: function(receiver, newChild, oldChild) {
    return receiver.replaceChild(newChild, oldChild);
  }
};

$$.NodeFilter = {"": "Interceptor;"};

$$.NodeIterator = {"": "Interceptor;"};

$$.NodeList = {"": "Interceptor_ListMixin_ImmutableListMixin4;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw $.wrapException(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot assign element of immutable List."));
  },
  set$length: function(receiver, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw $.wrapException(new $.StateError("No elements"));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  $isList: true,
  $asList: function () { return [$.Node]; },
  $isIterable: true,
  $asIterable: function () { return [$.Node]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.Notation = {"": "Node;"};

$$.Notification = {"": "EventTarget;",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  }
};

$$.NotificationCenter = {"": "Interceptor;"};

$$.OListElement = {"": "_HTMLElement;type%",
  start$0: function($receiver) {
    return this.start.call$0();
  }
};

$$.ObjectElement = {"": "_HTMLElement;data=,height%,name=,type%,width%"};

$$.OptGroupElement = {"": "_HTMLElement;"};

$$.OptionElement = {"": "_HTMLElement;value}"};

$$.OutputElement = {"": "_HTMLElement;name=,type=,value}"};

$$.OverflowEvent = {"": "Event;"};

$$.PageTransitionEvent = {"": "Event;"};

$$.ParagraphElement = {"": "_HTMLElement;"};

$$.ParamElement = {"": "_HTMLElement;name=,value}"};

$$.Path = {"": "Interceptor;"};

$$.Performance = {"": "EventTarget;"};

$$.PerformanceEntry = {"": "Interceptor;name="};

$$.PerformanceMark = {"": "PerformanceEntry;"};

$$.PerformanceMeasure = {"": "PerformanceEntry;"};

$$.PerformanceNavigation = {"": "Interceptor;type="};

$$.PerformanceResourceTiming = {"": "PerformanceEntry;"};

$$.PerformanceTiming = {"": "Interceptor;"};

$$.Plugin = {"": "Interceptor;length=,name="};

$$.PluginArray = {"": "Interceptor_ListMixin_ImmutableListMixin5;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw $.wrapException(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot assign element of immutable List."));
  },
  set$length: function(receiver, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw $.wrapException(new $.StateError("No elements"));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  $isList: true,
  $asList: function () { return [$.Plugin]; },
  $isIterable: true,
  $asIterable: function () { return [$.Plugin]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.PopStateEvent = {"": "Event;"};

$$.PositionError = {"": "Interceptor;"};

$$.PreElement = {"": "_HTMLElement;"};

$$.ProcessingInstruction = {"": "Node;data="};

$$.ProgressElement = {"": "_HTMLElement;value}"};

$$.ProgressEvent = {"": "Event;"};

$$.QuoteElement = {"": "_HTMLElement;"};

$$.Range = {"": "Interceptor;",
  toString$0: function(receiver) {
    return receiver.toString();
  }
};

$$.ResourceProgressEvent = {"": "ProgressEvent;"};

$$.RtcDataChannel = {"": "EventTarget;",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  }
};

$$.RtcDataChannelEvent = {"": "Event;"};

$$.RtcDtmfSender = {"": "EventTarget;",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  }
};

$$.RtcDtmfToneChangeEvent = {"": "Event;"};

$$.RtcIceCandidate = {"": "Interceptor;"};

$$.RtcIceCandidateEvent = {"": "Event;"};

$$.RtcPeerConnection = {"": "EventTarget;",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  }
};

$$.RtcSessionDescription = {"": "Interceptor;type%"};

$$.RtcStatsReport = {"": "Interceptor;type="};

$$.RtcStatsResponse = {"": "Interceptor;"};

$$.Screen = {"": "Interceptor;"};

$$.ScriptElement = {"": "_HTMLElement;event=,htmlFor},src},type%"};

$$.SecurityPolicy = {"": "Interceptor;"};

$$.SecurityPolicyViolationEvent = {"": "Event;"};

$$.SelectElement = {"": "_HTMLElement;length=,name=,type=,value}"};

$$.Selection = {"": "Interceptor;type=",
  toString$0: function(receiver) {
    return receiver.toString();
  }
};

$$.ShadowElement = {"": "_HTMLElement;"};

$$.ShadowRoot = {"": "DocumentFragment;"};

$$.SourceBuffer = {"": "Interceptor;",
  append$1: function(receiver, data) {
    return receiver.append(data);
  }
};

$$.SourceBufferList = {"": "EventTarget_ListMixin_ImmutableListMixin;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw $.wrapException(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot assign element of immutable List."));
  },
  set$length: function(receiver, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw $.wrapException(new $.StateError("No elements"));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  $isList: true,
  $asList: function () { return [$.SourceBuffer]; },
  $isIterable: true,
  $asIterable: function () { return [$.SourceBuffer]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.SourceElement = {"": "_HTMLElement;src},type%"};

$$.SpanElement = {"": "_HTMLElement;"};

$$.SpeechGrammar = {"": "Interceptor;"};

$$.SpeechGrammarList = {"": "Interceptor_ListMixin_ImmutableListMixin6;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw $.wrapException(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot assign element of immutable List."));
  },
  set$length: function(receiver, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw $.wrapException(new $.StateError("No elements"));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  $isList: true,
  $asList: function () { return [$.SpeechGrammar]; },
  $isIterable: true,
  $asIterable: function () { return [$.SpeechGrammar]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.SpeechInputEvent = {"": "Event;"};

$$.SpeechInputResult = {"": "Interceptor;"};

$$.SpeechRecognition = {"": "EventTarget;",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  start$0: function(receiver) {
    return receiver.start();
  }
};

$$.SpeechRecognitionAlternative = {"": "Interceptor;"};

$$.SpeechRecognitionError = {"": "Event;"};

$$.SpeechRecognitionEvent = {"": "Event;"};

$$.SpeechRecognitionResult = {"": "Interceptor;length="};

$$.SpeechSynthesis = {"": "Interceptor;"};

$$.SpeechSynthesisEvent = {"": "Event;name="};

$$.SpeechSynthesisUtterance = {"": "EventTarget;text}"};

$$.SpeechSynthesisVoice = {"": "Interceptor;name="};

$$.Storage = {"": "Interceptor;",
  $index: function(receiver, key) {
    return receiver.getItem(key);
  },
  $indexSet: function(receiver, key, value) {
    receiver.setItem(key, value);
  },
  forEach$1: function(receiver, f) {
    var i, key;
    for (i = 0; true; ++i) {
      key = receiver.key(i);
      if (key == null)
        return;
      f.call$2(key, receiver.getItem(key));
    }
  },
  get$keys: function(receiver) {
    var keys = [];
    this.forEach$1(receiver, new $.Storage_keys_closure(keys));
    return keys;
  },
  get$values: function(receiver) {
    var values = [];
    this.forEach$1(receiver, new $.Storage_values_closure(values));
    return values;
  },
  get$length: function(receiver) {
    return receiver.length;
  },
  get$isEmpty: function(receiver) {
    return receiver.key(0) == null;
  },
  $isMap: true,
  $asMap: function () { return [$.JSString, $.JSString]; }
};

$$.StorageEvent = {"": "Event;"};

$$.StorageInfo = {"": "Interceptor;"};

$$.StorageQuota = {"": "Interceptor;"};

$$.StyleElement = {"": "_HTMLElement;type%"};

$$.StyleMedia = {"": "Interceptor;type="};

$$.StyleSheet = {"": "Interceptor;type="};

$$.TableCaptionElement = {"": "_HTMLElement;"};

$$.TableCellElement = {"": "_HTMLElement;"};

$$.TableColElement = {"": "_HTMLElement;"};

$$.TableElement = {"": "_HTMLElement;"};

$$.TableRowElement = {"": "_HTMLElement;"};

$$.TableSectionElement = {"": "_HTMLElement;"};

$$.TemplateElement = {"": "_HTMLElement;"};

$$.Text = {"": "CharacterData;"};

$$.TextAreaElement = {"": "_HTMLElement;name=,type=,value}"};

$$.TextEvent = {"": "UIEvent;data="};

$$.TextMetrics = {"": "Interceptor;"};

$$.TextTrack = {"": "EventTarget;",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  }
};

$$.TextTrackCue = {"": "EventTarget;text}",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  }
};

$$.TextTrackCueList = {"": "Interceptor_ListMixin_ImmutableListMixin7;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw $.wrapException(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot assign element of immutable List."));
  },
  set$length: function(receiver, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw $.wrapException(new $.StateError("No elements"));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null,
  $isList: true,
  $asList: function () { return [$.TextTrackCue]; },
  $isIterable: true,
  $asIterable: function () { return [$.TextTrackCue]; }
};

$$.TextTrackList = {"": "EventTarget_ListMixin_ImmutableListMixin0;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw $.wrapException(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot assign element of immutable List."));
  },
  set$length: function(receiver, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw $.wrapException(new $.StateError("No elements"));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  $isList: true,
  $asList: function () { return [$.TextTrack]; },
  $isIterable: true,
  $asIterable: function () { return [$.TextTrack]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.TimeRanges = {"": "Interceptor;length="};

$$.TitleElement = {"": "_HTMLElement;"};

$$.Touch = {"": "Interceptor;identifier=",
  get$client: function(receiver) {
    return new $.Point(receiver.clientX, receiver.clientY);
  },
  get$page: function(receiver) {
    return new $.Point(receiver.pageX, receiver.pageY);
  }
};

$$.TouchEvent = {"": "UIEvent;changedTouches=,touches="};

$$.TouchList = {"": "Interceptor_ListMixin_ImmutableListMixin8;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw $.wrapException(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot assign element of immutable List."));
  },
  set$length: function(receiver, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw $.wrapException(new $.StateError("No elements"));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  $isList: true,
  $asList: function () { return [$.Touch]; },
  $isIterable: true,
  $asIterable: function () { return [$.Touch]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.TrackElement = {"": "_HTMLElement;src}"};

$$.TrackEvent = {"": "Event;"};

$$.TransitionEvent = {"": "Event;"};

$$.TreeWalker = {"": "Interceptor;"};

$$.UIEvent = {"": "Event;",
  get$page: function(receiver) {
    return new $.Point(receiver.pageX, receiver.pageY);
  }
};

$$.UListElement = {"": "_HTMLElement;"};

$$.UnknownElement = {"": "_HTMLElement;"};

$$.Url = {"": "Interceptor;"};

$$.ValidityState = {"": "Interceptor;"};

$$.VideoElement = {"": "MediaElement;height%,width%"};

$$.WebSocket = {"": "EventTarget;",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  get$onClose: function(receiver) {
    return $.EventStreamProvider_close.forTarget$1(receiver);
  },
  get$onError: function(receiver) {
    return $.EventStreamProvider_error.forTarget$1(receiver);
  },
  get$onMessage: function(receiver) {
    return $.EventStreamProvider_message.forTarget$1(receiver);
  },
  get$onOpen: function(receiver) {
    return $.EventStreamProvider_open.forTarget$1(receiver);
  }
};

$$.WheelEvent = {"": "MouseEvent;",
  get$deltaY: function(receiver) {
    var detail;
    if (receiver.deltaY !== undefined)
      return receiver.deltaY;
    else if (receiver.wheelDelta !== undefined)
      return -receiver.wheelDelta;
    else if (receiver.detail !== undefined) {
      if (receiver.axis == MouseScrollEvent.VERTICAL_AXIS) {
        detail = receiver.detail;
        if (Math.abs(detail) < 100)
          return -detail * 40;
        return -detail;
      }
      return 0;
    }
    throw $.wrapException(new $.UnsupportedError("deltaY is not supported"));
  },
  get$deltaX: function(receiver) {
    var detail;
    if (receiver.deltaX !== undefined)
      return receiver.deltaX;
    else if (receiver.wheelDeltaX !== undefined)
      return -receiver.wheelDeltaX;
    else if (receiver.detail !== undefined) {
      if (receiver.axis !== undefined && receiver.axis == MouseScrollEvent.HORIZONTAL_AXIS) {
        detail = receiver.detail;
        if (detail < 100)
          return -detail * 40;
        return -detail;
      }
      return 0;
    }
    throw $.wrapException(new $.UnsupportedError("deltaX is not supported"));
  },
  $isWheelEvent: true,
  $asWheelEvent: null
};

$$.Window = {"": "EventTarget;event=,name=",
  requestAnimationFrame$1: function(receiver, callback) {
    this._ensureRequestAnimationFrame$0(receiver);
    return this._liblib$_requestAnimationFrame$1(receiver, callback);
  },
  cancelAnimationFrame$1: function(receiver, id) {
    this._ensureRequestAnimationFrame$0(receiver);
    receiver.cancelAnimationFrame(id);
  },
  _liblib$_requestAnimationFrame$1: function(receiver, callback) {
    return receiver.requestAnimationFrame($.convertDartClosureToJS(callback, 1));
  },
  _ensureRequestAnimationFrame$0: function(receiver) {
    if (!!(receiver.requestAnimationFrame && receiver.cancelAnimationFrame))
      return;
      (function($this) {
   var vendors = ['ms', 'moz', 'webkit', 'o'];
   for (var i = 0; i < vendors.length && !$this.requestAnimationFrame; ++i) {
     $this.requestAnimationFrame = $this[vendors[i] + 'RequestAnimationFrame'];
     $this.cancelAnimationFrame =
         $this[vendors[i]+'CancelAnimationFrame'] ||
         $this[vendors[i]+'CancelRequestAnimationFrame'];
   }
   if ($this.requestAnimationFrame && $this.cancelAnimationFrame) return;
   $this.requestAnimationFrame = function(callback) {
      return window.setTimeout(function() {
        callback(Date.now());
      }, 16 /* 16ms ~= 60fps */);
   };
   $this.cancelAnimationFrame = function(id) { clearTimeout(id); }
  })(receiver);
  },
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  toString$0: function(receiver) {
    return receiver.toString();
  },
  get$onKeyDown: function(receiver) {
    return $.EventStreamProvider_keydown.forTarget$1(receiver);
  },
  get$onKeyUp: function(receiver) {
    return $.EventStreamProvider_keyup.forTarget$1(receiver);
  },
  get$onResize: function(receiver) {
    return $.EventStreamProvider_resize.forTarget$1(receiver);
  }
};

$$.Worker = {"": "AbstractWorker;"};

$$.XPathEvaluator = {"": "Interceptor;"};

$$.XPathException = {"": "Interceptor;name=",
  toString$0: function(receiver) {
    return receiver.toString();
  }
};

$$.XPathExpression = {"": "Interceptor;"};

$$.XPathNSResolver = {"": "Interceptor;"};

$$.XPathResult = {"": "Interceptor;"};

$$.XmlSerializer = {"": "Interceptor;"};

$$.XsltProcessor = {"": "Interceptor;"};

$$._Attr = {"": "Node;name="};

$$._CSSValue = {"": "Interceptor;"};

$$._ClientRect = {"": "Interceptor;height=,left=,top=,width=",
  toString$0: function(receiver) {
    return "(" + $.S(receiver.left) + ", " + $.S(receiver.top) + ", " + $.S(receiver.width) + ", " + $.S(receiver.height) + ")";
  },
  $eq: function(receiver, other) {
    var t1, t2, t3;
    if (other == null)
      return false;
    if (typeof other !== "object" || other === null || !$.getInterceptor(other).$isRect)
      return false;
    t1 = receiver.left;
    t2 = $.getInterceptor$x(other);
    t3 = t2.get$left(other);
    if (t1 == null ? t3 == null : t1 === t3) {
      t1 = receiver.top;
      t3 = t2.get$top(other);
      if (t1 == null ? t3 == null : t1 === t3) {
        t1 = receiver.width;
        t3 = t2.get$width(other);
        if (t1 == null ? t3 == null : t1 === t3) {
          t1 = receiver.height;
          t2 = t2.get$height(other);
          t2 = t1 == null ? t2 == null : t1 === t2;
          t1 = t2;
        } else
          t1 = false;
      } else
        t1 = false;
    } else
      t1 = false;
    return t1;
  },
  get$hashCode: function(receiver) {
    return $.JenkinsSmiHash_hash4($.get$hashCode$(receiver.left), $.get$hashCode$(receiver.top), $.get$hashCode$(receiver.width), $.get$hashCode$(receiver.height));
  },
  floor$0: function(receiver) {
    return $.Rect$($.floor$0$nx(receiver.left), $.floor$0$nx(receiver.top), $.floor$0$nx(receiver.width), $.floor$0$nx(receiver.height));
  },
  round$0: function(receiver) {
    return $.Rect$($.round$0$nx(receiver.left), $.round$0$nx(receiver.top), $.round$0$nx(receiver.width), $.round$0$nx(receiver.height));
  },
  $isRect: true,
  $asRect: null
};

$$._ClientRectList = {"": "Interceptor_ListMixin_ImmutableListMixin9;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw $.wrapException(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot assign element of immutable List."));
  },
  set$length: function(receiver, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw $.wrapException(new $.StateError("No elements"));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  $isList: true,
  $asList: function () { return [$.Rect]; },
  $isIterable: true,
  $asIterable: function () { return [$.Rect]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$._CssRuleList = {"": "Interceptor_ListMixin_ImmutableListMixin10;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw $.wrapException(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot assign element of immutable List."));
  },
  set$length: function(receiver, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw $.wrapException(new $.StateError("No elements"));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  $isList: true,
  $asList: function () { return [$.CssRule]; },
  $isIterable: true,
  $asIterable: function () { return [$.CssRule]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$._CssValueList = {"": "_CSSValue_ListMixin_ImmutableListMixin;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw $.wrapException(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot assign element of immutable List."));
  },
  set$length: function(receiver, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw $.wrapException(new $.StateError("No elements"));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  $isList: true,
  $asList: function () { return [$._CSSValue]; },
  $isIterable: true,
  $asIterable: function () { return [$._CSSValue]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$._DomPoint = {"": "Interceptor;x=,y="};

$$._Entity = {"": "Node;"};

$$._EntryArray = {"": "Interceptor_ListMixin_ImmutableListMixin11;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw $.wrapException(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot assign element of immutable List."));
  },
  set$length: function(receiver, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw $.wrapException(new $.StateError("No elements"));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  $isList: true,
  $asList: function () { return [$.Entry]; },
  $isIterable: true,
  $asIterable: function () { return [$.Entry]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$._EntryArraySync = {"": "Interceptor_ListMixin_ImmutableListMixin12;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw $.wrapException(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot assign element of immutable List."));
  },
  set$length: function(receiver, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw $.wrapException(new $.StateError("No elements"));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  $isList: true,
  $asList: function () { return [$._EntrySync]; },
  $isIterable: true,
  $asIterable: function () { return [$._EntrySync]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$._EntrySync = {"": "Interceptor;"};

$$._GamepadList = {"": "Interceptor_ListMixin_ImmutableListMixin13;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw $.wrapException(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot assign element of immutable List."));
  },
  set$length: function(receiver, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw $.wrapException(new $.StateError("No elements"));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  $isList: true,
  $asList: function () { return [$.Gamepad]; },
  $isIterable: true,
  $asIterable: function () { return [$.Gamepad]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$._NamedNodeMap = {"": "Interceptor_ListMixin_ImmutableListMixin14;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw $.wrapException(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot assign element of immutable List."));
  },
  set$length: function(receiver, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw $.wrapException(new $.StateError("No elements"));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  $isList: true,
  $asList: function () { return [$.Node]; },
  $isIterable: true,
  $asIterable: function () { return [$.Node]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$._SpeechInputResultList = {"": "Interceptor_ListMixin_ImmutableListMixin15;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw $.wrapException(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot assign element of immutable List."));
  },
  set$length: function(receiver, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw $.wrapException(new $.StateError("No elements"));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  $isList: true,
  $asList: function () { return [$.SpeechInputResult]; },
  $isIterable: true,
  $asIterable: function () { return [$.SpeechInputResult]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$._SpeechRecognitionResultList = {"": "Interceptor_ListMixin_ImmutableListMixin16;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw $.wrapException(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot assign element of immutable List."));
  },
  set$length: function(receiver, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw $.wrapException(new $.StateError("No elements"));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  $isList: true,
  $asList: function () { return [$.SpeechRecognitionResult]; },
  $isIterable: true,
  $asIterable: function () { return [$.SpeechRecognitionResult]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$._StyleSheetList = {"": "Interceptor_ListMixin_ImmutableListMixin17;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw $.wrapException(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot assign element of immutable List."));
  },
  set$length: function(receiver, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw $.wrapException(new $.StateError("No elements"));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  $isList: true,
  $asList: function () { return [$.StyleSheet]; },
  $isIterable: true,
  $asIterable: function () { return [$.StyleSheet]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.Cursor = {"": "Interceptor;",
  update$1: function(receiver, value) {
    var e, stacktrace, t1, exception;
    try {
      t1 = $._completeRequest(this.$$dom_update$1(receiver, value));
      return t1;
    } catch (exception) {
      t1 = $.unwrapException(exception);
      e = t1;
      stacktrace = $.getTraceFromException(exception);
      return $.Future_Future$error(e, stacktrace);
    }

  },
  $$dom_update$1: function(receiver, value) {
    return receiver.update($.convertDartToNative_SerializedScriptValue(value));
  }
};

$$.CursorWithValue = {"": "Cursor;"};

$$.Database = {"": "EventTarget;name=",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  }
};

$$.IdbFactory = {"": "Interceptor;"};

$$.Index = {"": "Interceptor;name="};

$$.KeyRange = {"": "Interceptor;"};

$$.ObjectStore = {"": "Interceptor;name=",
  add$2: function(receiver, value, key) {
    var request, e, stacktrace, t1, exception;
    try {
      request = null;
      if (key != null)
        request = this.$$dom_add$2(receiver, value, key);
      else
        request = this.$$dom_add$1(receiver, value);
      t1 = $._completeRequest(request);
      return t1;
    } catch (exception) {
      t1 = $.unwrapException(exception);
      e = t1;
      stacktrace = $.getTraceFromException(exception);
      return $._FutureImpl$immediateError(e, stacktrace);
    }

  },
  add$1: function($receiver, value) {
    return this.add$2($receiver, value, null);
  },
  $$dom_add$2: function(receiver, value, key) {
    return receiver.add($.convertDartToNative_SerializedScriptValue(value));
  },
  $$dom_add$1: function($receiver, value) {
    return this.$$dom_add$2($receiver, value, null);
  }
};

$$.OpenDBRequest = {"": "Request;"};

$$.Request = {"": "EventTarget;",
  get$result: function(receiver) {
    return $._convertNativeToDart_IDBAny(receiver.result);
  },
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  get$onError: function(receiver) {
    return $.EventStreamProvider_error.forTarget$1(receiver);
  },
  get$onSuccess: function(receiver) {
    return $.EventStreamProvider_success.forTarget$1(receiver);
  }
};

$$.Transaction = {"": "EventTarget;",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  }
};

$$.VersionChangeEvent = {"": "Event;"};

$$.AElement = {"": "StyledElement;"};

$$.AltGlyphElement = {"": "TextPositioningElement;"};

$$.Angle = {"": "Interceptor;"};

$$.AnimateElement = {"": "AnimationElement;"};

$$.AnimateMotionElement = {"": "AnimationElement;"};

$$.AnimateTransformElement = {"": "AnimationElement;"};

$$.AnimatedAngle = {"": "Interceptor;"};

$$.AnimatedBoolean = {"": "Interceptor;"};

$$.AnimatedEnumeration = {"": "Interceptor;"};

$$.AnimatedInteger = {"": "Interceptor;"};

$$.AnimatedLength = {"": "Interceptor;"};

$$.AnimatedLengthList = {"": "Interceptor;"};

$$.AnimatedNumber = {"": "Interceptor;"};

$$.AnimatedNumberList = {"": "Interceptor;"};

$$.AnimatedPreserveAspectRatio = {"": "Interceptor;"};

$$.AnimatedRect = {"": "Interceptor;"};

$$.AnimatedString = {"": "Interceptor;"};

$$.AnimatedTransformList = {"": "Interceptor;"};

$$.AnimationElement = {"": "SvgElement;"};

$$.CircleElement = {"": "StyledElement;"};

$$.ClipPathElement = {"": "StyledElement;"};

$$.DefsElement = {"": "StyledElement;"};

$$.DescElement = {"": "StyledElement;"};

$$.ElementInstance = {"": "EventTarget;"};

$$.EllipseElement = {"": "StyledElement;"};

$$.FEBlendElement = {"": "StyledElement;height=,width=,x=,y="};

$$.FEColorMatrixElement = {"": "StyledElement;type=,height=,width=,x=,y="};

$$.FEComponentTransferElement = {"": "StyledElement;height=,width=,x=,y="};

$$.FECompositeElement = {"": "StyledElement;height=,width=,x=,y="};

$$.FEConvolveMatrixElement = {"": "StyledElement;height=,width=,x=,y="};

$$.FEDiffuseLightingElement = {"": "StyledElement;height=,width=,x=,y="};

$$.FEDisplacementMapElement = {"": "StyledElement;scale=,height=,width=,x=,y="};

$$.FEDistantLightElement = {"": "SvgElement;"};

$$.FEFloodElement = {"": "StyledElement;height=,width=,x=,y="};

$$.FEFuncAElement = {"": "_SVGComponentTransferFunctionElement;"};

$$.FEFuncBElement = {"": "_SVGComponentTransferFunctionElement;"};

$$.FEFuncGElement = {"": "_SVGComponentTransferFunctionElement;"};

$$.FEFuncRElement = {"": "_SVGComponentTransferFunctionElement;"};

$$.FEGaussianBlurElement = {"": "StyledElement;height=,width=,x=,y="};

$$.FEImageElement = {"": "StyledElement;height=,width=,x=,y="};

$$.FEMergeElement = {"": "StyledElement;height=,width=,x=,y="};

$$.FEMergeNodeElement = {"": "SvgElement;"};

$$.FEMorphologyElement = {"": "StyledElement;height=,width=,x=,y="};

$$.FEOffsetElement = {"": "StyledElement;height=,width=,x=,y="};

$$.FEPointLightElement = {"": "SvgElement;x=,y=,z="};

$$.FESpecularLightingElement = {"": "StyledElement;height=,width=,x=,y="};

$$.FESpotLightElement = {"": "SvgElement;x=,y=,z="};

$$.FETileElement = {"": "StyledElement;height=,width=,x=,y="};

$$.FETurbulenceElement = {"": "StyledElement;type=,height=,width=,x=,y="};

$$.FilterElement = {"": "StyledElement;height=,width=,x=,y="};

$$.ForeignObjectElement = {"": "StyledElement;height=,width=,x=,y="};

$$.GElement = {"": "StyledElement;"};

$$.ImageElement0 = {"": "StyledElement;height=,width=,x=,y="};

$$.Length = {"": "Interceptor;"};

$$.LengthList = {"": "Interceptor_ListMixin_ImmutableListMixin18;",
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw $.wrapException(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
    return receiver.getItem(index);
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot assign element of immutable List."));
  },
  get$length: function(receiver) {
    return receiver.numberOfItems;
  },
  set$length: function(receiver, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw $.wrapException(new $.StateError("No elements"));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  $isList: true,
  $asList: function () { return [$.Length]; },
  $isIterable: true,
  $asIterable: function () { return [$.Length]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.LineElement = {"": "StyledElement;"};

$$.LinearGradientElement = {"": "_GradientElement;"};

$$.MarkerElement = {"": "StyledElement;"};

$$.MaskElement = {"": "StyledElement;height=,width=,x=,y="};

$$.Matrix = {"": "Interceptor;",
  scale$1: function(receiver, scaleFactor) {
    return receiver.scale(scaleFactor);
  },
  get$scale: function(_receiver) {
    return new $.BoundClosure$i1(this, "scale$1", _receiver);
  }
};

$$.MetadataElement = {"": "SvgElement;"};

$$.Number = {"": "Interceptor;"};

$$.NumberList = {"": "Interceptor_ListMixin_ImmutableListMixin19;",
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw $.wrapException(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
    return receiver.getItem(index);
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot assign element of immutable List."));
  },
  get$length: function(receiver) {
    return receiver.numberOfItems;
  },
  set$length: function(receiver, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw $.wrapException(new $.StateError("No elements"));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  $isList: true,
  $asList: function () { return [$.Number]; },
  $isIterable: true,
  $asIterable: function () { return [$.Number]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.PathElement = {"": "StyledElement;"};

$$.PathSeg = {"": "Interceptor;"};

$$.PathSegArcAbs = {"": "PathSeg;x=,y="};

$$.PathSegArcRel = {"": "PathSeg;x=,y="};

$$.PathSegClosePath = {"": "PathSeg;"};

$$.PathSegCurvetoCubicAbs = {"": "PathSeg;x=,y="};

$$.PathSegCurvetoCubicRel = {"": "PathSeg;x=,y="};

$$.PathSegCurvetoCubicSmoothAbs = {"": "PathSeg;x=,y="};

$$.PathSegCurvetoCubicSmoothRel = {"": "PathSeg;x=,y="};

$$.PathSegCurvetoQuadraticAbs = {"": "PathSeg;x=,y="};

$$.PathSegCurvetoQuadraticRel = {"": "PathSeg;x=,y="};

$$.PathSegCurvetoQuadraticSmoothAbs = {"": "PathSeg;x=,y="};

$$.PathSegCurvetoQuadraticSmoothRel = {"": "PathSeg;x=,y="};

$$.PathSegLinetoAbs = {"": "PathSeg;x=,y="};

$$.PathSegLinetoHorizontalAbs = {"": "PathSeg;x="};

$$.PathSegLinetoHorizontalRel = {"": "PathSeg;x="};

$$.PathSegLinetoRel = {"": "PathSeg;x=,y="};

$$.PathSegLinetoVerticalAbs = {"": "PathSeg;y="};

$$.PathSegLinetoVerticalRel = {"": "PathSeg;y="};

$$.PathSegList = {"": "Interceptor_ListMixin_ImmutableListMixin20;",
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw $.wrapException(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
    return receiver.getItem(index);
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot assign element of immutable List."));
  },
  get$length: function(receiver) {
    return receiver.numberOfItems;
  },
  set$length: function(receiver, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw $.wrapException(new $.StateError("No elements"));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  $isList: true,
  $asList: function () { return [$.PathSeg]; },
  $isIterable: true,
  $asIterable: function () { return [$.PathSeg]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.PathSegMovetoAbs = {"": "PathSeg;x=,y="};

$$.PathSegMovetoRel = {"": "PathSeg;x=,y="};

$$.PatternElement = {"": "StyledElement;height=,width=,x=,y="};

$$.Point0 = {"": "Interceptor;x=,y="};

$$.PointList = {"": "Interceptor;"};

$$.PolygonElement = {"": "StyledElement;"};

$$.PolylineElement = {"": "StyledElement;"};

$$.PreserveAspectRatio = {"": "Interceptor;"};

$$.RadialGradientElement = {"": "_GradientElement;"};

$$.Rect0 = {"": "Interceptor;x=,y="};

$$.RectElement = {"": "StyledElement;height=,width=,x=,y="};

$$.RenderingIntent = {"": "Interceptor;"};

$$.ScriptElement0 = {"": "SvgElement;type%"};

$$.SetElement = {"": "AnimationElement;"};

$$.StopElement = {"": "StyledElement;"};

$$.StringList = {"": "Interceptor_ListMixin_ImmutableListMixin21;",
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw $.wrapException(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
    return receiver.getItem(index);
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot assign element of immutable List."));
  },
  get$length: function(receiver) {
    return receiver.numberOfItems;
  },
  set$length: function(receiver, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw $.wrapException(new $.StateError("No elements"));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  $isList: true,
  $asList: function () { return [$.JSString]; },
  $isIterable: true,
  $asIterable: function () { return [$.JSString]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.StyleElement0 = {"": "SvgElement;type%"};

$$.StyledElement = {"": "SvgElement;"};

$$.SvgDocument = {"": "Document;"};

$$.SvgElement = {"": "Element;",
  get$children: function(receiver) {
    var t1 = new $.FilteredElementList(receiver, this.get$nodes(receiver));
    $.setRuntimeTypeInfo(t1, [$.Element]);
    return t1;
  },
  insertAdjacentText$2: function(receiver, where, text) {
    throw $.wrapException($.UnsupportedError$("Cannot invoke insertAdjacentText on SVG."));
  },
  get$$$dom_children: function(receiver) {
    throw $.wrapException($.UnsupportedError$("Cannot get dom_children on SVG."));
  },
  get$id: function(receiver) {
    return receiver.id;
  },
  set$id: function(receiver, value) {
    receiver.id = value;
  }
};

$$.SvgException = {"": "Interceptor;name=",
  toString$0: function(receiver) {
    return receiver.toString();
  }
};

$$.SvgSvgElement = {"": "StyledElement;height=,width=,x=,y=",
  viewport$4: function($receiver, arg0, arg1, arg2, arg3) {
    return this.viewport.call$4(arg0, arg1, arg2, arg3);
  }
};

$$.SwitchElement = {"": "StyledElement;"};

$$.SymbolElement = {"": "StyledElement;"};

$$.TSpanElement = {"": "TextPositioningElement;"};

$$.TextContentElement = {"": "StyledElement;"};

$$.TextElement = {"": "TextPositioningElement;"};

$$.TextPathElement = {"": "TextContentElement;"};

$$.TextPositioningElement = {"": "TextContentElement;x=,y="};

$$.TitleElement0 = {"": "StyledElement;"};

$$.Transform = {"": "Interceptor;type="};

$$.TransformList = {"": "Interceptor_ListMixin_ImmutableListMixin22;",
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw $.wrapException(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
    return receiver.getItem(index);
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot assign element of immutable List."));
  },
  get$length: function(receiver) {
    return receiver.numberOfItems;
  },
  set$length: function(receiver, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw $.wrapException(new $.StateError("No elements"));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null,
  $isList: true,
  $asList: function () { return [$.Transform]; },
  $isIterable: true,
  $asIterable: function () { return [$.Transform]; }
};

$$.UnitTypes = {"": "Interceptor;"};

$$.UseElement = {"": "StyledElement;height=,width=,x=,y="};

$$.ViewElement = {"": "SvgElement;"};

$$.ViewSpec = {"": "Interceptor;"};

$$.ZoomEvent = {"": "UIEvent;"};

$$._ElementInstanceList = {"": "Interceptor_ListMixin_ImmutableListMixin23;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw $.wrapException(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
    return receiver.item(index);
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot assign element of immutable List."));
  },
  set$length: function(receiver, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw $.wrapException(new $.StateError("No elements"));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  $isList: true,
  $asList: function () { return [$.ElementInstance]; },
  $isIterable: true,
  $asIterable: function () { return [$.ElementInstance]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$._GradientElement = {"": "StyledElement;"};

$$._SVGComponentTransferFunctionElement = {"": "SvgElement;"};

$$.AnalyserNode = {"": "AudioNode;"};

$$.AudioBuffer = {"": "Interceptor;length="};

$$.AudioBufferSourceNode = {"": "AudioSourceNode;"};

$$.AudioContext = {"": "EventTarget;"};

$$.AudioDestinationNode = {"": "AudioNode;"};

$$.AudioListener = {"": "Interceptor;"};

$$.AudioNode = {"": "EventTarget;",
  $$dom_addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  },
  $$dom_removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, $.convertDartClosureToJS(listener, 1), useCapture);
  }
};

$$.AudioParam = {"": "Interceptor;name="};

$$.AudioProcessingEvent = {"": "Event;"};

$$.AudioSourceNode = {"": "AudioNode;"};

$$.BiquadFilterNode = {"": "AudioNode;type%"};

$$.ChannelMergerNode = {"": "AudioNode;"};

$$.ChannelSplitterNode = {"": "AudioNode;"};

$$.ConvolverNode = {"": "AudioNode;"};

$$.DelayNode = {"": "AudioNode;"};

$$.DynamicsCompressorNode = {"": "AudioNode;"};

$$.GainNode = {"": "AudioNode;"};

$$.MediaElementAudioSourceNode = {"": "AudioSourceNode;"};

$$.MediaStreamAudioDestinationNode = {"": "AudioSourceNode;"};

$$.MediaStreamAudioSourceNode = {"": "AudioSourceNode;"};

$$.OfflineAudioCompletionEvent = {"": "Event;"};

$$.OfflineAudioContext = {"": "AudioContext;"};

$$.OscillatorNode = {"": "AudioSourceNode;type%"};

$$.PannerNode = {"": "AudioNode;"};

$$.ScriptProcessorNode = {"": "AudioNode;"};

$$.WaveShaperNode = {"": "AudioNode;"};

$$.WaveTable = {"": "Interceptor;"};

$$.ActiveInfo = {"": "Interceptor;name=,type="};

$$.Buffer = {"": "Interceptor;"};

$$.CompressedTextureAtc = {"": "Interceptor;"};

$$.CompressedTexturePvrtc = {"": "Interceptor;"};

$$.CompressedTextureS3TC = {"": "Interceptor;"};

$$.ContextAttributes = {"": "Interceptor;"};

$$.ContextEvent = {"": "Event;"};

$$.DebugRendererInfo = {"": "Interceptor;"};

$$.DebugShaders = {"": "Interceptor;"};

$$.DepthTexture = {"": "Interceptor;"};

$$.ExtDrawBuffers = {"": "Interceptor;"};

$$.ExtFragDepth = {"": "Interceptor;"};

$$.ExtTextureFilterAnisotropic = {"": "Interceptor;"};

$$.Framebuffer = {"": "Interceptor;"};

$$.LoseContext = {"": "Interceptor;",
  loseContext$0: function(receiver) {
    return receiver.loseContext();
  },
  restoreContext$0: function(receiver) {
    return receiver.restoreContext();
  }
};

$$.OesElementIndexUint = {"": "Interceptor;"};

$$.OesStandardDerivatives = {"": "Interceptor;"};

$$.OesTextureFloat = {"": "Interceptor;"};

$$.OesTextureFloatLinear = {"": "Interceptor;"};

$$.OesTextureHalfFloat = {"": "Interceptor;"};

$$.OesTextureHalfFloatLinear = {"": "Interceptor;"};

$$.OesVertexArrayObject = {"": "Interceptor;"};

$$.Program = {"": "Interceptor;"};

$$.Renderbuffer = {"": "Interceptor;"};

$$.RenderingContext = {"": "CanvasRenderingContext;",
  activeTexture$1: function(receiver, texture) {
    return receiver.activeTexture(texture);
  },
  attachShader$2: function(receiver, program, shader) {
    return receiver.attachShader(program, shader);
  },
  bindBuffer$2: function(receiver, target, buffer) {
    return receiver.bindBuffer(target, buffer);
  },
  bindFramebuffer$2: function(receiver, target, framebuffer) {
    return receiver.bindFramebuffer(target, framebuffer);
  },
  bindRenderbuffer$2: function(receiver, target, renderbuffer) {
    return receiver.bindRenderbuffer(target, renderbuffer);
  },
  bindTexture$2: function(receiver, target, texture) {
    return receiver.bindTexture(target, texture);
  },
  bufferDataTyped$3: function(receiver, target, data, usage) {
    return receiver.bufferData(target, data, usage);
  },
  clear$1: function(receiver, mask) {
    return receiver.clear(mask);
  },
  clearColor$4: function(receiver, red, green, blue, alpha) {
    return receiver.clearColor(red, green, blue, alpha);
  },
  compileShader$1: function(receiver, shader) {
    return receiver.compileShader(shader);
  },
  createBuffer$0: function(receiver) {
    return receiver.createBuffer();
  },
  createFramebuffer$0: function(receiver) {
    return receiver.createFramebuffer();
  },
  createProgram$0: function(receiver) {
    return receiver.createProgram();
  },
  createRenderbuffer$0: function(receiver) {
    return receiver.createRenderbuffer();
  },
  createShader$1: function(receiver, type) {
    return receiver.createShader(type);
  },
  createTexture$0: function(receiver) {
    return receiver.createTexture();
  },
  cullFace$1: function(receiver, mode) {
    return receiver.cullFace(mode);
  },
  depthFunc$1: function(receiver, func) {
    return receiver.depthFunc(func);
  },
  depthRange$2: function(receiver, zNear, zFar) {
    return receiver.depthRange(zNear, zFar);
  },
  drawElements$4: function(receiver, mode, count, type, offset) {
    return receiver.drawElements(mode, count, type, offset);
  },
  enable$1: function(receiver, cap) {
    return receiver.enable(cap);
  },
  enableVertexAttribArray$1: function(receiver, index) {
    return receiver.enableVertexAttribArray(index);
  },
  framebufferRenderbuffer$4: function(receiver, target, attachment, renderbuffertarget, renderbuffer) {
    return receiver.framebufferRenderbuffer(target, attachment, renderbuffertarget, renderbuffer);
  },
  framebufferTexture2D$5: function(receiver, target, attachment, textarget, texture, level) {
    return receiver.framebufferTexture2D(target, attachment, textarget, texture, level);
  },
  frontFace$1: function(receiver, mode) {
    return receiver.frontFace(mode);
  },
  getAttribLocation$2: function(receiver, program, $name) {
    return receiver.getAttribLocation(program, $name);
  },
  getExtension$1: function(receiver, $name) {
    return receiver.getExtension($name);
  },
  getProgramInfoLog$1: function(receiver, program) {
    return receiver.getProgramInfoLog(program);
  },
  getProgramParameter$2: function(receiver, program, pname) {
    return receiver.getProgramParameter(program, pname);
  },
  getShaderInfoLog$1: function(receiver, shader) {
    return receiver.getShaderInfoLog(shader);
  },
  getShaderParameter$2: function(receiver, shader, pname) {
    return receiver.getShaderParameter(shader, pname);
  },
  getUniformLocation$2: function(receiver, program, $name) {
    return receiver.getUniformLocation(program, $name);
  },
  isContextLost$0: function(receiver) {
    return receiver.isContextLost();
  },
  linkProgram$1: function(receiver, program) {
    return receiver.linkProgram(program);
  },
  pixelStorei$2: function(receiver, pname, param) {
    return receiver.pixelStorei(pname, param);
  },
  readPixels$7: function(receiver, x, y, width, height, format, type, pixels) {
    return receiver.readPixels(x, y, width, height, format, type, pixels);
  },
  renderbufferStorage$4: function(receiver, target, internalformat, width, height) {
    return receiver.renderbufferStorage(target, internalformat, width, height);
  },
  shaderSource$2: function(receiver, shader, string) {
    return receiver.shaderSource(shader, string);
  },
  texImage2DImage$6: function(receiver, target, level, internalformat, format, type, image) {
    return receiver.texImage2D(target, level, internalformat, format, type, image);
  },
  texParameteri$3: function(receiver, target, pname, param) {
    return receiver.texParameteri(target, pname, param);
  },
  uniform1i$2: function(receiver, $location, x) {
    return receiver.uniform1i($location, x);
  },
  uniform4fv$2: function(receiver, $location, v) {
    return receiver.uniform4fv($location, v);
  },
  uniformMatrix4fv$3: function(receiver, $location, transpose, array) {
    return receiver.uniformMatrix4fv($location, transpose, array);
  },
  useProgram$1: function(receiver, program) {
    return receiver.useProgram(program);
  },
  vertexAttribPointer$6: function(receiver, indx, size, type, normalized, stride, offset) {
    return receiver.vertexAttribPointer(indx, size, type, normalized, stride, offset);
  },
  viewport$4: function(receiver, x, y, width, height) {
    return receiver.viewport(x, y, width, height);
  },
  texImage2DTyped$9: function(receiver, targetTexture, levelOfDetail, internalFormat, width, height, border, format, type, data) {
    return receiver.texImage2D(targetTexture, levelOfDetail, internalFormat, width, height, border, format, type, data);
  }
};

$$.Shader = {"": "Interceptor;"};

$$.ShaderPrecisionFormat = {"": "Interceptor;"};

$$.Texture = {"": "Interceptor;"};

$$.UniformLocation = {"": "Interceptor;"};

$$.VertexArrayObject = {"": "Interceptor;"};

$$.SqlDatabase = {"": "Interceptor;"};

$$.SqlError = {"": "Interceptor;"};

$$.SqlException = {"": "Interceptor;"};

$$.SqlResultSet = {"": "Interceptor;"};

$$.SqlResultSetRowList = {"": "Interceptor_ListMixin_ImmutableListMixin24;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw $.wrapException(new $.RangeError("value " + $.S(index) + " not in range 0.." + t1));
    return $.convertNativeToDart_Dictionary(receiver.item(index));
  },
  $indexSet: function(receiver, index, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot assign element of immutable List."));
  },
  set$length: function(receiver, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot resize immutable List."));
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw $.wrapException(new $.StateError("No elements"));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  $isList: true,
  $asList: function () { return [$.Map]; },
  $isIterable: true,
  $asIterable: function () { return [$.Map]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.SqlTransaction = {"": "Interceptor;"};

$$.ByteBuffer = {"": "Interceptor;", $isByteBuffer: true, $asByteBuffer: null};

$$.TypedData = {"": "Interceptor;",
  _invalidIndex$2: function(receiver, index, $length) {
    var t1 = $.getInterceptor$n(index);
    if (t1.$lt(index, 0) || t1.$ge(index, $length))
      throw $.wrapException($.RangeError$range(index, 0, $length));
    else
      throw $.wrapException($.ArgumentError$("Invalid list index " + $.S(index)));
  },
  $isTypedData: true,
  $asTypedData: null
};

$$.ByteData = {"": "TypedData;"};

$$.Float32List = {"": "TypedData_ListMixin_FixedLengthListMixin;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1;
    if (typeof index !== "number")
      return this.$$index$bailout(1, index, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $$index$bailout: function(state0, index, receiver) {
    var t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1;
    if (typeof index !== "number")
      return this.$$indexSet$bailout(1, index, value, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $$indexSet$bailout: function(state0, index, value, receiver) {
    var t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $isList: true,
  $asList: function () { return [$.JSDouble]; },
  $isIterable: true,
  $asIterable: function () { return [$.JSDouble]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.Float64List = {"": "TypedData_ListMixin_FixedLengthListMixin0;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1;
    if (typeof index !== "number")
      return this.$$index$bailout(1, index, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $$index$bailout: function(state0, index, receiver) {
    var t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1;
    if (typeof index !== "number")
      return this.$$indexSet$bailout(1, index, value, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $$indexSet$bailout: function(state0, index, value, receiver) {
    var t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $isList: true,
  $asList: function () { return [$.JSDouble]; },
  $isIterable: true,
  $asIterable: function () { return [$.JSDouble]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.Int16List = {"": "TypedData_ListMixin_FixedLengthListMixin1;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1;
    if (typeof index !== "number")
      return this.$$index$bailout(1, index, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $$index$bailout: function(state0, index, receiver) {
    var t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1;
    if (typeof index !== "number")
      return this.$$indexSet$bailout(1, index, value, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $$indexSet$bailout: function(state0, index, value, receiver) {
    var t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $isList: true,
  $asList: function () { return [$.JSInt]; },
  $isIterable: true,
  $asIterable: function () { return [$.JSInt]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.Int32List = {"": "TypedData_ListMixin_FixedLengthListMixin2;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1;
    if (typeof index !== "number")
      return this.$$index$bailout(1, index, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $$index$bailout: function(state0, index, receiver) {
    var t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1;
    if (typeof index !== "number")
      return this.$$indexSet$bailout(1, index, value, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $$indexSet$bailout: function(state0, index, value, receiver) {
    var t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $isList: true,
  $asList: function () { return [$.JSInt]; },
  $isIterable: true,
  $asIterable: function () { return [$.JSInt]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.Int8List = {"": "TypedData_ListMixin_FixedLengthListMixin3;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1;
    if (typeof index !== "number")
      return this.$$index$bailout(1, index, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $$index$bailout: function(state0, index, receiver) {
    var t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1;
    if (typeof index !== "number")
      return this.$$indexSet$bailout(1, index, value, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $$indexSet$bailout: function(state0, index, value, receiver) {
    var t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $isList: true,
  $asList: function () { return [$.JSInt]; },
  $isIterable: true,
  $asIterable: function () { return [$.JSInt]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.Uint16List = {"": "TypedData_ListMixin_FixedLengthListMixin4;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1;
    if (typeof index !== "number")
      return this.$$index$bailout(1, index, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $$index$bailout: function(state0, index, receiver) {
    var t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1;
    if (typeof index !== "number")
      return this.$$indexSet$bailout(1, index, value, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $$indexSet$bailout: function(state0, index, value, receiver) {
    var t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $isList: true,
  $asList: function () { return [$.JSInt]; },
  $isIterable: true,
  $asIterable: function () { return [$.JSInt]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.Uint32List = {"": "TypedData_ListMixin_FixedLengthListMixin5;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1;
    if (typeof index !== "number")
      return this.$$index$bailout(1, index, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $$index$bailout: function(state0, index, receiver) {
    var t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1;
    if (typeof index !== "number")
      return this.$$indexSet$bailout(1, index, value, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $$indexSet$bailout: function(state0, index, value, receiver) {
    var t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $isList: true,
  $asList: function () { return [$.JSInt]; },
  $isIterable: true,
  $asIterable: function () { return [$.JSInt]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

$$.Uint8ClampedList = {"": "Uint8List;",
  $index: function(receiver, index) {
    var t1;
    if (typeof index !== "number")
      return this.$$index$bailout1(1, index, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $$index$bailout1: function(state0, index, receiver) {
    var t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1;
    if (typeof index !== "number")
      return this.$$indexSet$bailout1(1, index, value, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $$indexSet$bailout1: function(state0, index, value, receiver) {
    var t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  }
};

$$.Uint8List = {"": "TypedData_ListMixin_FixedLengthListMixin6;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1;
    if (typeof index !== "number")
      return this.$$index$bailout(1, index, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $$index$bailout: function(state0, index, receiver) {
    var t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1;
    if (typeof index !== "number")
      return this.$$indexSet$bailout(1, index, value, receiver);
    t1 = receiver.length;
    if (index >>> 0 != index || index >= t1)
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $$indexSet$bailout: function(state0, index, value, receiver) {
    var t1 = receiver.length;
    if (index >>> 0 != index || $.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $isList: true,
  $asList: function () { return [$.JSInt]; },
  $isIterable: true,
  $asIterable: function () { return [$.JSInt]; },
  $isJavaScriptIndexingBehavior: true,
  $asJavaScriptIndexingBehavior: null
};

// Bound closures
$$.BoundClosure$1 = {"": "BoundClosure;_self,_target,_receiver",
  call$1: function(p0) {
    return this._self[this._target](p0);
  }
};

$$.BoundClosure$0 = {"": "BoundClosure;_self,_target,_receiver",
  call$0: function() {
    return this._self[this._target]();
  }
};

$$.BoundClosure$i1 = {"": "BoundClosure;_self,_target,_receiver",
  call$1: function(p0) {
    return this._self[this._target](this._receiver, p0);
  }
};

$$.Bound_scale_Matrix4 = {"": "BoundClosure;_self,_target,_receiver",
  call$3: function(p0, p1, p2) {
    return this._self[this._target](this._receiver, p0, p1, p2);
  },
  call$1: function(x) {
    return this.call$3(x, null, null);
  },
  call$2: function(x, y) {
    return this.call$3(x, y, null);
  }
};

$$.BoundClosure$i2 = {"": "BoundClosure;_self,_target,_receiver",
  call$2: function(p0, p1) {
    return this._self[this._target](this._receiver, p0, p1);
  }
};

$$.BoundClosure$i3 = {"": "BoundClosure;_self,_target,_receiver",
  call$3: function(p0, p1, p2) {
    return this._self[this._target](this._receiver, p0, p1, p2);
  }
};

$$.Closure$_processWorkerMessage = {"": "Closure;call$2,$name"};

$$.Closure$_throwFormatException = {"": "Closure;call$1,$name"};

$$.Closure$wrapException = {"": "Closure;call$1,$name"};

$$.Closure$toStringWrapper = {"": "Closure;call$0,$name"};

$$.Closure$invokeClosure = {"": "Closure;call$5,$name"};

$$.Closure$isAssignable = {"": "Closure;call$2,$name"};

$$.Closure$typeNameInChrome = {"": "Closure;call$1,$name"};

$$.Closure$typeNameInSafari = {"": "Closure;call$1,$name"};

$$.Closure$typeNameInOpera = {"": "Closure;call$1,$name"};

$$.Closure$typeNameInFirefox = {"": "Closure;call$1,$name"};

$$.Closure$typeNameInIE = {"": "Closure;call$1,$name"};

$$.Closure$constructorNameFallback = {"": "Closure;call$1,$name"};

$$.Closure$_asyncRunCallback = {"": "Closure;call$0,$name"};

$$.Closure$_determineMouseWheelEventType = {"": "Closure;call$1,$name"};

$$.Closure$decodeUtf8 = {"": "Closure;call$4,$name",
  call$1: function(bytes) {
    return this.call$4(bytes, 0, null, 65533);
  },
  call$2: function(bytes, offset) {
    return this.call$4(bytes, offset, null, 65533);
  },
  call$3: function(bytes, offset, length) {
    return this.call$4(bytes, offset, length, 65533);
  }
};

$$.Closure$initContext = {"": "Closure;call$2,$name"};

$$.Closure$main = {"": "Closure;call$0,$name"};

(function (reflectionData) {
  if (!init.libraries) init.libraries = [];
  if (!init.mangledNames) init.mangledNames = {};
  if (!init.mangledGlobalNames) init.mangledGlobalNames = {};
  init.getterPrefix = "get$";
  init.setterPrefix = "set$";
  var libraries = init.libraries;
  var mangledNames = init.mangledNames;
  var mangledGlobalNames = init.mangledGlobalNames;
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  var length = reflectionData.length;
  for (var i = 0; i < length; i++) {
    var data = reflectionData[i];
    var name = data[0];
    var uri = data[1];
    var metadata = data[2];
    var descriptor = data[3];
    var classes = [];
    var functions = [];
    for (var property in descriptor) {
      if (!hasOwnProperty.call(descriptor, property)) continue;
      var element = descriptor[property];
      var firstChar = property.substring(0, 1);
      var previousProperty;
      if (firstChar == "+") {
        mangledGlobalNames[previousProperty] = property.substring(1);
      } else if (firstChar == "@") {
        property = property.substring(1);
        $[property]["@"] = element;
      } else if (typeof element === "function") {
        $[previousProperty = property] = element;
        functions.push(property);
      } else {
        previousProperty = property;
        var newDesc = {};
        var previousProp;
        for (var prop in element) {
          if (!hasOwnProperty.call(element, prop)) continue;
          firstChar = prop.substring(0, 1);
          if (firstChar == "+") {
            mangledNames[previousProp] = prop.substring(1);
          } else if (firstChar == "@" && prop != "@") {
            newDesc[prop.substring(1)]["@"] =element[prop];
          } else {
            newDesc[previousProp = prop] = element[prop];
          }
        }
        $$[property] = newDesc;
        classes.push(property);
      }
    }
    libraries.push([name, uri, classes, functions, metadata]);
  }
})([
["_interceptors", "dart:_interceptors", , {
Interceptor: {"": "Object;",
  $eq: function(receiver, other) {
    return receiver === other;
  },
  get$hashCode: function(receiver) {
    return $.Primitives_objectHashCode(receiver);
  },
  toString$0: function(receiver) {
    return $.Primitives_objectToString(receiver);
  }
},

JSBool: {"": "bool/Interceptor;",
  toString$0: function(receiver) {
    return String(receiver);
  },
  get$hashCode: function(receiver) {
    return receiver ? 519018 : 218159;
  },
  $isbool: true
},

JSNull: {"": "Interceptor;",
  $eq: function(receiver, other) {
    return null == other;
  },
  toString$0: function(receiver) {
    return "null";
  },
  get$hashCode: function(receiver) {
    return 0;
  }
},

JSUnknown: {"": "Interceptor;",
  toString$0: function(receiver) {
    return String(receiver);
  },
  get$hashCode: function(receiver) {
    return 0;
  }
},

JSArray: {"": "List/Interceptor;",
  checkMutable$1: function(receiver, reason) {
    if (!!receiver.immutable$list)
      throw $.wrapException($.UnsupportedError$(reason));
  },
  add$1: function(receiver, value) {
    if (!!receiver.fixed$length)
      $.throwExpression($.UnsupportedError$("add"));
    receiver.push(value);
  },
  removeLast$0: function(receiver) {
    if (!!receiver.fixed$length)
      $.throwExpression($.UnsupportedError$("removeLast"));
    if (receiver.length === 0)
      throw $.wrapException(new $.RangeError("value -1"));
    return receiver.pop();
  },
  where$1: function(receiver, f) {
    return $.IterableMixinWorkaround_where(receiver, f);
  },
  clear$0: function(receiver) {
    this.set$length(receiver, 0);
  },
  forEach$1: function(receiver, f) {
    return $.IterableMixinWorkaround_forEach(receiver, f);
  },
  firstWhere$2$orElse: function(receiver, test, orElse) {
    return $.IterableMixinWorkaround_firstWhere(receiver, test, orElse);
  },
  firstWhere$1: function($receiver, test) {
    return this.firstWhere$2$orElse($receiver, test, null);
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  sublist$2: function(receiver, start, end) {
    $.checkNull(start);
    if (typeof start !== "number" || Math.floor(start) !== start)
      throw $.wrapException($.ArgumentError$(start));
    if (start < 0 || start > receiver.length)
      throw $.wrapException($.RangeError$range(start, 0, receiver.length));
    if (end < start || end > receiver.length)
      throw $.wrapException($.RangeError$range(end, start, receiver.length));
    if (start === end)
      return [];
    return receiver.slice(start, end);
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw $.wrapException(new $.StateError("No elements"));
  },
  setRange$4: function(receiver, start, end, iterable, skipCount) {
    this.checkMutable$1(receiver, "set range");
    $.IterableMixinWorkaround_setRangeList(receiver, start, end, iterable, skipCount);
  },
  setRange$3: function($receiver, start, end, iterable) {
    return this.setRange$4($receiver, start, end, iterable, 0);
  },
  indexOf$2: function(receiver, element, start) {
    return $.Arrays_indexOf(receiver, element, start, receiver.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  toString$0: function(receiver) {
    return $.ToString_iterableToString(receiver);
  },
  toList$1$growable: function(receiver, growable) {
    return $.List_List$from(receiver, growable, $.getRuntimeTypeArgument(receiver, "JSArray", 0));
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$iterator: function(receiver) {
    return $.ListIterator$(receiver);
  },
  get$hashCode: function(receiver) {
    return $.Primitives_objectHashCode(receiver);
  },
  get$length: function(receiver) {
    return receiver.length;
  },
  set$length: function(receiver, newLength) {
    if (typeof newLength !== "number" || Math.floor(newLength) !== newLength)
      throw $.wrapException(new $.ArgumentError(newLength));
    if (newLength < 0)
      throw $.wrapException(new $.RangeError("value " + $.S(newLength)));
    if (!!receiver.fixed$length)
      $.throwExpression($.UnsupportedError$("set length"));
    receiver.length = newLength;
  },
  $index: function(receiver, index) {
    if (typeof index !== "number" || Math.floor(index) !== index)
      throw $.wrapException(new $.ArgumentError(index));
    if (index >= receiver.length || index < 0)
      throw $.wrapException(new $.RangeError("value " + $.S(index)));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    if (!!receiver.immutable$list)
      $.throwExpression($.UnsupportedError$("indexed set"));
    if (typeof index !== "number" || Math.floor(index) !== index)
      throw $.wrapException(new $.ArgumentError(index));
    if (index >= receiver.length || index < 0)
      throw $.wrapException(new $.RangeError("value " + $.S(index)));
    receiver[index] = value;
  },
  $isList: true,
  $asInterceptor: null,
  $asList: null,
  $asIterable: null,
  $isList: true,
  $isIterable: true
},

JSMutableArray: {"": "JSArray;", $isJSMutableArray: true, $asJSArray: function () { return [null]; }, $asList: function () { return [null]; }, $asIterable: function () { return [null]; }},

JSFixedArray: {"": "JSMutableArray;"},

JSExtendableArray: {"": "JSMutableArray;", $isJSExtendableArray: true},

JSNumber: {"": "num/Interceptor;",
  get$isNegative: function(receiver) {
    return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
  },
  get$isNaN: function(receiver) {
    return isNaN(receiver);
  },
  get$isInfinite: function(receiver) {
    return receiver == Infinity || receiver == -Infinity;
  },
  remainder$1: function(receiver, b) {
    $.checkNull(b);
    return receiver % b;
  },
  abs$0: function(receiver) {
    return Math.abs(receiver);
  },
  toInt$0: function(receiver) {
    var truncated;
    if (this.get$isNaN(receiver))
      throw $.wrapException($.UnsupportedError$("NaN"));
    if (this.get$isInfinite(receiver))
      throw $.wrapException($.UnsupportedError$("Infinity"));
    truncated = this.truncateToDouble$0(receiver);
    return truncated == -0.0 ? 0 : truncated;
  },
  truncate$0: function(receiver) {
    return this.toInt$0(receiver);
  },
  floor$0: function(receiver) {
    return this.toInt$0(this.floorToDouble$0(receiver));
  },
  round$0: function(receiver) {
    return this.toInt$0(this.roundToDouble$0(receiver));
  },
  ceilToDouble$0: function(receiver) {
    return Math.ceil(receiver);
  },
  floorToDouble$0: function(receiver) {
    return Math.floor(receiver);
  },
  roundToDouble$0: function(receiver) {
    if (receiver < 0)
      return -Math.round(-receiver);
    else
      return Math.round(receiver);
  },
  truncateToDouble$0: function(receiver) {
    return receiver < 0 ? this.ceilToDouble$0(receiver) : this.floorToDouble$0(receiver);
  },
  toDouble$0: function(receiver) {
    return receiver;
  },
  toString$0: function(receiver) {
    if (receiver === 0 && 1 / receiver < 0)
      return "-0.0";
    else
      return "" + receiver;
  },
  get$hashCode: function(receiver) {
    return receiver & 0x1FFFFFFF;
  },
  $add: function(receiver, other) {
    if (typeof other !== "number")
      throw $.wrapException(new $.ArgumentError(other));
    return receiver + other;
  },
  $sub: function(receiver, other) {
    if (typeof other !== "number")
      throw $.wrapException(new $.ArgumentError(other));
    return receiver - other;
  },
  $div: function(receiver, other) {
    if (typeof other !== "number")
      throw $.wrapException($.ArgumentError$(other));
    return receiver / other;
  },
  $mul: function(receiver, other) {
    if (typeof other !== "number")
      throw $.wrapException(new $.ArgumentError(other));
    return receiver * other;
  },
  $mod: function(receiver, other) {
    var result = receiver % other;
    if (result === 0)
      return 0;
    if (result > 0)
      return result;
    if (other < 0)
      return result - other;
    else
      return result + other;
  },
  $tdiv: function(receiver, other) {
    if (typeof other !== "number")
      throw $.wrapException($.ArgumentError$(other));
    return this.truncate$0(receiver / other);
  },
  $shr: function(receiver, other) {
    if (other < 0)
      throw $.wrapException(new $.ArgumentError(other));
    if (receiver > 0) {
      if (other > 31)
        return 0;
      return receiver >>> other;
    }
    if (other > 31)
      other = 31;
    return receiver >> other >>> 0;
  },
  $lt: function(receiver, other) {
    if (typeof other !== "number")
      throw $.wrapException(new $.ArgumentError(other));
    return receiver < other;
  },
  $gt: function(receiver, other) {
    if (typeof other !== "number")
      throw $.wrapException(new $.ArgumentError(other));
    return receiver > other;
  },
  $le: function(receiver, other) {
    if (typeof other !== "number")
      throw $.wrapException(new $.ArgumentError(other));
    return receiver <= other;
  },
  $ge: function(receiver, other) {
    if (typeof other !== "number")
      throw $.wrapException(new $.ArgumentError(other));
    return receiver >= other;
  },
  $isnum: true
},

JSInt: {"": "int/JSNumber;", $isdouble: true, $isnum: true, $isint: true},

JSDouble: {"": "double/JSNumber;", $isdouble: true, $isnum: true},

JSString: {"": "String/Interceptor;",
  codeUnitAt$1: function(receiver, index) {
    if (index < 0)
      throw $.wrapException(new $.RangeError("value " + $.S(index)));
    if (index >= receiver.length)
      throw $.wrapException(new $.RangeError("value " + $.S(index)));
    return receiver.charCodeAt(index);
  },
  matchAsPrefix$2: function(receiver, string, start) {
    var t1, t2, i, t3;
    if (start < 0 || start > string.length)
      throw $.wrapException(new $.RangeError("value " + $.S(start) + " not in range 0.." + string.length));
    t1 = receiver.length;
    t2 = string.length;
    if (start + t1 > t2)
      return;
    for (i = 0; i < t1; ++i) {
      t3 = start + i;
      if (t3 < 0)
        $.throwExpression(new $.RangeError("value " + $.S(t3)));
      if (t3 >= t2)
        $.throwExpression(new $.RangeError("value " + $.S(t3)));
      t3 = string.charCodeAt(t3);
      if (i >= t1)
        $.throwExpression(new $.RangeError("value " + i));
      if (t3 !== receiver.charCodeAt(i))
        return;
    }
    return new $.StringMatch(start, string, receiver);
  },
  $add: function(receiver, other) {
    if (typeof other !== "string")
      throw $.wrapException(new $.ArgumentError(other));
    return receiver + other;
  },
  endsWith$1: function(receiver, other) {
    var otherLength, t1;
    $.checkString(other);
    otherLength = other.length;
    t1 = receiver.length;
    if (otherLength > t1)
      return false;
    return other === this.substring$1(receiver, t1 - otherLength);
  },
  replaceAll$2: function(receiver, from, to) {
    $.checkString(to);
    return $.stringReplaceAllUnchecked(receiver, from, to);
  },
  split$1: function(receiver, pattern) {
    $.checkNull(pattern);
    return receiver.split(pattern);
  },
  startsWith$2: function(receiver, pattern, index) {
    var endIndex;
    if (index < 0 || index > receiver.length)
      throw $.wrapException($.RangeError$range(index, 0, receiver.length));
    endIndex = index + pattern.length;
    if (endIndex > receiver.length)
      return false;
    return pattern == receiver.substring(index, endIndex);
    return this.matchAsPrefix$2(pattern, receiver, index) != null;
  },
  startsWith$1: function($receiver, pattern) {
    return this.startsWith$2($receiver, pattern, 0);
  },
  substring$2: function(receiver, startIndex, endIndex) {
    var t1;
    $.checkNum(startIndex);
    if (endIndex == null)
      endIndex = receiver.length;
    $.checkNum(endIndex);
    t1 = $.getInterceptor$n(startIndex);
    if (t1.$lt(startIndex, 0))
      throw $.wrapException($.RangeError$value(startIndex));
    if (t1.$gt(startIndex, endIndex))
      throw $.wrapException($.RangeError$value(startIndex));
    if ($.$gt$n(endIndex, receiver.length))
      throw $.wrapException($.RangeError$value(endIndex));
    return receiver.substring(startIndex, endIndex);
  },
  substring$1: function($receiver, startIndex) {
    return this.substring$2($receiver, startIndex, null);
  },
  toLowerCase$0: function(receiver) {
    return receiver.toLowerCase();
  },
  trim$0: function(receiver) {
    var endIndex, startIndex, codeUnit, endIndex0, endIndex1;
    for (endIndex = receiver.length, startIndex = 0; startIndex < endIndex;) {
      if (startIndex >= endIndex)
        $.throwExpression(new $.RangeError("value " + startIndex));
      codeUnit = receiver.charCodeAt(startIndex);
      if (codeUnit === 32 || codeUnit === 13 || $.JSString__isWhitespace(codeUnit))
        ++startIndex;
      else
        break;
    }
    if (startIndex === endIndex)
      return "";
    for (endIndex0 = endIndex; true; endIndex0 = endIndex1) {
      endIndex1 = endIndex0 - 1;
      if (endIndex1 < 0)
        $.throwExpression(new $.RangeError("value " + endIndex1));
      if (endIndex1 >= endIndex)
        $.throwExpression(new $.RangeError("value " + endIndex1));
      codeUnit = receiver.charCodeAt(endIndex1);
      if (codeUnit === 32 || codeUnit === 13 || $.JSString__isWhitespace(codeUnit))
        ;
      else
        break;
    }
    if (startIndex === 0 && endIndex0 === endIndex)
      return receiver;
    return receiver.substring(startIndex, endIndex0);
  },
  indexOf$2: function(receiver, pattern, start) {
    var t1, i;
    if (typeof start !== "number" || Math.floor(start) !== start)
      throw $.wrapException(new $.ArgumentError(start));
    if (start < 0 || start > receiver.length)
      throw $.wrapException(new $.RangeError("value " + $.S(start) + " not in range 0.." + receiver.length));
    return receiver.indexOf(pattern, start);
    for (t1 = receiver.length, i = start; i <= t1; ++i)
      if (this.matchAsPrefix$2(pattern, receiver, i) != null)
        return i;
    return -1;
  },
  indexOf$1: function($receiver, pattern) {
    return this.indexOf$2($receiver, pattern, 0);
  },
  contains$2: function(receiver, other, startIndex) {
    $.checkNull(other);
    if (startIndex < 0 || startIndex > receiver.length)
      throw $.wrapException($.RangeError$range(startIndex, 0, receiver.length));
    return $.stringContainsUnchecked(receiver, other, startIndex);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  toString$0: function(receiver) {
    return receiver;
  },
  get$hashCode: function(receiver) {
    var t1, hash, i;
    for (t1 = receiver.length, hash = 0, i = 0; i < t1; ++i) {
      hash = 536870911 & hash + receiver.charCodeAt(i);
      hash = 536870911 & hash + ((524287 & hash) << 10 >>> 0);
      hash ^= hash >> 6;
    }
    hash = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
    hash ^= hash >> 11;
    return 536870911 & hash + ((16383 & hash) << 15 >>> 0);
  },
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    if (typeof index !== "number" || Math.floor(index) !== index)
      throw $.wrapException(new $.ArgumentError(index));
    if (index >= receiver.length || index < 0)
      throw $.wrapException(new $.RangeError("value " + $.S(index)));
    return receiver[index];
  },
  $isString: true
},

getInterceptor: function(object) {
  return $.getInterceptor(object);
},

getDispatchProperty: function(object) {
  return object[$.dispatchPropertyName];
},

setDispatchProperty: function(object, value) {
  Object.defineProperty(object, $.dispatchPropertyName, {value: value, enumerable: false, writable: true, configurable: true});
},

makeDispatchRecord: function(interceptor, proto, extension, indexability) {
  return {i: interceptor, p: proto, e: extension, x: indexability};
},

dispatchRecordInterceptor: function(record) {
  return record.i;
},

dispatchRecordProto: function(record) {
  return record.p;
},

dispatchRecordExtension: function(record) {
  return record.e;
},

dispatchRecordIndexability: function(record) {
  return record.x;
},

getNativeInterceptor: function(object) {
  var record, proto, objectProto;
  record = $.getDispatchProperty(object);
  if (record != null) {
    proto = $.dispatchRecordProto(record);
    if (false === proto)
      return $.dispatchRecordInterceptor(record);
    if (true === proto)
      return object;
    objectProto = Object.getPrototypeOf(object);
    if (proto === objectProto)
      return $.dispatchRecordInterceptor(record);
    if ($.dispatchRecordExtension(record) === objectProto)
      return proto(object, record);
  }
  record = $.lookupDispatchRecord(object);
  if (record == null)
    return $.C_JSUnknown;
  $.setDispatchProperty(Object.getPrototypeOf(object), record);
  return $.getNativeInterceptor(object);
},

initializeDispatchProperty: function(setGetDispatchPropertyFn, rootProperty, jsObjectInterceptor) {
  var objectProto, i, property;
  if (typeof rootProperty !== "string")
    return $.initializeDispatchProperty$bailout(1, setGetDispatchPropertyFn, rootProperty, jsObjectInterceptor);
  objectProto = Object.prototype;
  for (i = 0; true; ++i) {
    if (i > 0)
      property = rootProperty + "_" + i;
    else
      property = rootProperty;
    if (typeof objectProto[property] === "undefined") {
      $.dispatchPropertyName = property;
      setGetDispatchPropertyFn(new Function("a", "return a." + property));
      $.setDispatchProperty(objectProto, $.makeDispatchRecord(jsObjectInterceptor, objectProto, null, null));
      return;
    }
  }
},

initializeDispatchProperty$bailout: function(state0, setGetDispatchPropertyFn, rootProperty, jsObjectInterceptor) {
  var objectProto, i, property;
  objectProto = Object.prototype;
  for (i = 0; true; ++i) {
    property = i > 0 ? rootProperty + "_" + i : rootProperty;
    if (typeof objectProto[property] === "undefined") {
      $.dispatchPropertyName = property;
      setGetDispatchPropertyFn(new Function("a", "return a." + property));
      $.setDispatchProperty(objectProto, $.makeDispatchRecord(jsObjectInterceptor, objectProto, null, null));
      return;
    }
  }
},

JSString__isWhitespace: function(codeUnit) {
  if (codeUnit < 256)
    switch (codeUnit) {
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 32:
      case 133:
      case 160:
        return true;
      default:
        return false;
    }
  switch (codeUnit) {
    case 5760:
    case 6158:
    case 8192:
    case 8193:
    case 8194:
    case 8195:
    case 8196:
    case 8197:
    case 8198:
    case 8199:
    case 8200:
    case 8201:
    case 8202:
    case 8232:
    case 8233:
    case 8239:
    case 8287:
    case 12288:
    case 65279:
      return true;
    default:
      return false;
  }
}}],
["_isolate_helper", "dart:_isolate_helper", , {
CloseToken: {"": "Object;", $isCloseToken: true},

JsIsolateSink: {"": "EventSink;_isClosed,_port<",
  add$1: function(_, message) {
    var t1 = this._port;
    t1.send$1(t1, message);
  },
  $eq: function(_, other) {
    if (other == null)
      return false;
    return typeof other === "object" && other !== null && !!$.getInterceptor(other).$isIsolateSink && $.$eq(this._port, other.get$_port());
  },
  get$hashCode: function(_) {
    return $.$add$ns($.get$hashCode$(this._port), 499);
  },
  $isJsIsolateSink: true,
  $asIsolateSink: null,
  $isIsolateSink: true
},

_Manager: {"": "Object;nextIsolateId,currentManagerId,nextManagerId,currentContext,rootContext,topEventLoop,fromCommandLine,isWorker,supportsWorkers,isolates,mainManager,managers,entry",
  get$useWorkers: function() {
    return this.supportsWorkers;
  },
  get$needSerialization: function() {
    return this.get$useWorkers();
  },
  _nativeDetectEnvironment$0: function() {
    var t1, t2;
    t1 = $.get$globalWindow() == null;
    t2 = $.get$globalWorker();
    this.isWorker = t1 && $.get$globalPostMessageDefined() === true;
    if (this.isWorker !== true)
      if (t2 != null) {
        $.get$IsolateNatives_thisScript();
        t2 = true;
      } else
        t2 = false;
    else
      t2 = true;
    this.supportsWorkers = t2;
    this.fromCommandLine = t1 && this.isWorker !== true;
  },
  _nativeInitWorkerMessageHandler$0: function() {
    var $function = function (e) { $.IsolateNatives__processWorkerMessage$closure.call$2(this.mainManager, e); };
    $.get$globalThis().onmessage = $function;
    $.get$globalThis().dartPrint = function (object) {};
  },
  _Manager$1: function(entry) {
    this._nativeDetectEnvironment$0();
    this.topEventLoop = $._EventLoop$();
    this.isolates = $.Map_Map($.JSInt, $._IsolateContext);
    this.managers = $.Map_Map($.JSInt, null);
    if (this.isWorker === true) {
      this.mainManager = $._MainManagerStub$();
      this._nativeInitWorkerMessageHandler$0();
    }
  }
},

_IsolateContext: {"": "Object;id,ports,isolateStatics",
  eval$1: function(code) {
    var old, result;
    old = $._globalState().currentContext;
    $._globalState().currentContext = this;
    this._setGlobals$0();
    result = null;
    try {
      result = code.call$0();
    } finally {
      $._globalState().currentContext = old;
      if (old != null)
        old._setGlobals$0();
    }
    return result;
  },
  _setGlobals$0: function() {
    $ = this.isolateStatics;
  },
  lookup$1: function(portId) {
    var t1 = this.ports;
    return t1.$index(t1, portId);
  },
  register$2: function(_, portId, port) {
    var t1 = this.ports;
    if (t1.containsKey$1(t1, portId))
      throw $.wrapException($.Exception_Exception("Registry: ports must be registered only once."));
    t1 = this.ports;
    t1.$indexSet(t1, portId, port);
    t1 = $._globalState().isolates;
    t1.$indexSet(t1, this.id, this);
  },
  unregister$1: function(portId) {
    var t1 = this.ports;
    t1.remove$1(t1, portId);
    t1 = this.ports;
    if (t1.get$isEmpty(t1)) {
      t1 = $._globalState().isolates;
      t1.remove$1(t1, this.id);
    }
  },
  _IsolateContext$0: function() {
    var t1, t2;
    t1 = $._globalState();
    t2 = t1.nextIsolateId;
    t1.nextIsolateId = t2 + 1;
    this.id = t2;
    this.ports = $.Map_Map($.JSInt, $.ReceivePort);
    this.isolateStatics = new Isolate();
  }
},

_EventLoop: {"": "Object;events,activeTimerCount",
  enqueue$3: function(isolate, fn, msg) {
    this.events.addLast$1($._IsolateEvent$(isolate, fn, msg));
  },
  dequeue$0: function() {
    var t1 = this.events;
    if (t1.get$isEmpty(t1))
      return;
    return t1.removeFirst$0();
  },
  checkOpenReceivePortsFromCommandLine$0: function() {
    if ($._globalState().rootContext != null) {
      var t1 = $._globalState().isolates;
      if (t1.containsKey$1(t1, $._globalState().rootContext.id))
        if ($._globalState().fromCommandLine === true) {
          t1 = $._globalState().rootContext.ports;
          t1 = t1.get$isEmpty(t1);
        } else
          t1 = false;
      else
        t1 = false;
    } else
      t1 = false;
    if (t1)
      throw $.wrapException($.Exception_Exception("Program exited with open ReceivePorts."));
  },
  runIteration$0: function() {
    var $event, t1, t2;
    $event = this.dequeue$0();
    if ($event == null) {
      this.checkOpenReceivePortsFromCommandLine$0();
      t1 = $globalState;
      if (t1.isWorker === true) {
        t2 = t1.isolates;
        t2 = t2.get$isEmpty(t2) && t1.topEventLoop.activeTimerCount === 0;
      } else
        t2 = false;
      if (t2) {
        t1 = t1.mainManager;
        t1.postMessage$1(t1, $._serializeMessage($.makeLiteralMap(["command", "close"])));
      }
      return false;
    }
    $event.process$0();
    return true;
  },
  _runHelper$0: function() {
    if ($.get$globalWindow() != null)
      new $._EventLoop__runHelper_next(this).call$0();
    else
      for (; this.runIteration$0();)
        ;
  },
  run$0: function() {
    var e, trace, exception, t1;
    if ($._globalState().isWorker !== true)
      this._runHelper$0();
    else
      try {
        this._runHelper$0();
      } catch (exception) {
        t1 = $.unwrapException(exception);
        e = t1;
        trace = $.getTraceFromException(exception);
        t1 = $._globalState().mainManager;
        t1.postMessage$1(t1, $._serializeMessage($.makeLiteralMap(["command", "error", "msg", $.S(e) + "\n" + $.S(trace)])));
      }

  }
},

_EventLoop__runHelper_next: {"": "Closure;this_0",
  call$0: function() {
    if (!this.this_0.runIteration$0())
      return;
    $.Timer_run(this);
  }
},

_IsolateEvent: {"": "Object;isolate,fn,message",
  process$0: function() {
    this.isolate.eval$1(this.fn);
  }
},

_MainManagerStub: {"": "Object;",
  postMessage$1: function(_, msg) {
    self.postMessage(msg);
  }
},

IsolateNatives__processWorkerMessage_closure: {"": "Closure;entryPoint_0,replyTo_1",
  call$0: function() {
    $.IsolateNatives__startIsolate(this.entryPoint_0, this.replyTo_1);
  }
},

_BaseSendPort: {"": "Object;_isolateId<",
  _checkReplyTo$1: function(replyTo) {
    if (replyTo != null && (typeof replyTo !== "object" || replyTo === null || !$.getInterceptor(replyTo).$is_NativeJsSendPort) && (typeof replyTo !== "object" || replyTo === null || !$.getInterceptor(replyTo).$is_WorkerSendPort) && true)
      throw $.wrapException($.Exception_Exception("SendPort.send: Illegal replyTo port type"));
  },
  call$1: function(message) {
    var completer, port;
    completer = $.Completer_Completer();
    port = $.ReceivePortImpl$();
    this.send$2(this, message, port.toSendPort$0());
    port.receive$1(new $._BaseSendPort_call_closure(completer, port));
    return completer.future;
  },
  $isSendPort: true
},

_BaseSendPort_call_closure: {"": "Closure;completer_0,port_1",
  call$2: function(value, ignoreReplyTo) {
    var t1 = this.port_1;
    t1.close$0(t1);
    t1 = this.completer_0;
    if (typeof value === "object" && value !== null && !!$.getInterceptor(value).$isException)
      t1.completeError$1(value);
    else
      t1.complete$1(t1, value);
  }
},

_NativeJsSendPort: {"": "_BaseSendPort;_receivePort<,_isolateId",
  send$2: function(_, message, replyTo) {
    $._waitForPendingPorts([message, replyTo], new $._NativeJsSendPort_send_closure(this, message, replyTo));
  },
  send$1: function($receiver, message) {
    return this.send$2($receiver, message, null);
  },
  $eq: function(_, other) {
    if (other == null)
      return false;
    return typeof other === "object" && other !== null && !!$.getInterceptor(other).$is_NativeJsSendPort && $.$eq(this._receivePort, other._receivePort);
  },
  get$hashCode: function(_) {
    return this._receivePort.get$_id();
  },
  $is_NativeJsSendPort: true,
  $isSendPort: true
},

_NativeJsSendPort_send_closure: {"": "Closure;this_1,message_2,replyTo_3",
  call$0: function() {
    var t1, t2, t3, t4, isolate, shouldSerialize, msg;
    t1 = {};
    t2 = this.this_1;
    t3 = this.replyTo_3;
    t2._checkReplyTo$1(t3);
    t4 = $._globalState().isolates;
    isolate = t4.$index(t4, t2.get$_isolateId());
    if (isolate == null)
      return;
    if (t2.get$_receivePort().get$_liblib7$_callback() == null)
      return;
    shouldSerialize = $._globalState().currentContext != null && $._globalState().currentContext.id !== t2.get$_isolateId();
    msg = this.message_2;
    t1.msg_0 = msg;
    t1.reply_1 = t3;
    if (shouldSerialize) {
      t1.msg_0 = $._serializeMessage(t1.msg_0);
      t1.reply_1 = $._serializeMessage(t1.reply_1);
    }
    $._globalState().topEventLoop.enqueue$3(isolate, new $._NativeJsSendPort_send__closure(t1, t2, shouldSerialize), "receive " + $.S(msg));
  }
},

_NativeJsSendPort_send__closure: {"": "Closure;box_0,this_4,shouldSerialize_5",
  call$0: function() {
    var t1, t2;
    t1 = this.this_4;
    if (t1.get$_receivePort().get$_liblib7$_callback() != null) {
      if (this.shouldSerialize_5) {
        t2 = this.box_0;
        t2.msg_0 = $._deserializeMessage(t2.msg_0);
        t2.reply_1 = $._deserializeMessage(t2.reply_1);
      }
      t2 = this.box_0;
      t1.get$_receivePort()._liblib7$_callback$2(t2.msg_0, t2.reply_1);
    }
  }
},

_WorkerSendPort: {"": "_BaseSendPort;_workerId<,_receivePortId,_isolateId",
  send$2: function(_, message, replyTo) {
    $._waitForPendingPorts([message, replyTo], new $._WorkerSendPort_send_closure(this, message, replyTo));
  },
  send$1: function($receiver, message) {
    return this.send$2($receiver, message, null);
  },
  $eq: function(_, other) {
    var t1;
    if (other == null)
      return false;
    if (typeof other === "object" && other !== null && !!$.getInterceptor(other).$is_WorkerSendPort)
      t1 = $.$eq(this._workerId, other._workerId) && $.$eq(this._isolateId, other._isolateId) && $.$eq(this._receivePortId, other._receivePortId);
    else
      t1 = false;
    return t1;
  },
  get$hashCode: function(_) {
    var t1, t2, t3;
    t1 = this._workerId;
    if (typeof t1 !== "number")
      throw t1.$shl();
    t2 = this._isolateId;
    if (typeof t2 !== "number")
      throw t2.$shl();
    t3 = this._receivePortId;
    if (typeof t3 !== "number")
      throw $.iae(t3);
    return (t1 << 16 ^ t2 << 8 ^ t3) >>> 0;
  },
  $is_WorkerSendPort: true,
  $isSendPort: true
},

_WorkerSendPort_send_closure: {"": "Closure;this_0,message_1,replyTo_2",
  call$0: function() {
    var t1, t2, workerMessage, manager;
    t1 = this.this_0;
    t2 = this.replyTo_2;
    t1._checkReplyTo$1(t2);
    workerMessage = $._serializeMessage($.makeLiteralMap(["command", "message", "port", t1, "msg", this.message_1, "replyTo", t2]));
    if ($._globalState().isWorker === true) {
      t1 = $._globalState().mainManager;
      t1.postMessage$1(t1, workerMessage);
    } else {
      t2 = $._globalState().managers;
      manager = t2.$index(t2, t1.get$_workerId());
      if (manager != null)
        manager.postMessage(workerMessage);
    }
  }
},

ReceivePortImpl: {"": "Object;_id<,_liblib7$_callback<",
  _liblib7$_callback$2: function(arg0, arg1) {
    return this._liblib7$_callback.call$2(arg0, arg1);
  },
  receive$1: function(onMessage) {
    this._liblib7$_callback = onMessage;
  },
  close$0: function(_) {
    this._liblib7$_callback = null;
    $._globalState().currentContext.unregister$1(this._id);
  },
  toSendPort$0: function() {
    return $._NativeJsSendPort$(this, $._globalState().currentContext.id);
  },
  ReceivePortImpl$0: function() {
    var t1 = $._globalState().currentContext;
    t1.register$2(t1, this._id, this);
  }
},

_waitForPendingPorts_closure: {"": "Closure;callback_0",
  call$1: function(_) {
    return this.callback_0.call$0();
  }
},

_PendingSendPortFinder: {"": "_MessageTraverser;ports,_visited",
  visitPrimitive$1: function(x) {
  },
  visitList$1: function(list) {
    var t1 = this._visited;
    if (t1.$index(t1, list) != null)
      return;
    t1.$indexSet(t1, list, true);
    $.forEach$1$ax(list, new $._PendingSendPortFinder_visitList_closure(this));
  },
  visitMap$1: function(map) {
    var t1 = this._visited;
    if (t1.$index(t1, map) != null)
      return;
    t1.$indexSet(t1, map, true);
    $.forEach$1$ax($.get$values$x(map), new $._PendingSendPortFinder_visitMap_closure(this));
  },
  visitSendPort$1: function(port) {
  },
  visitIsolateSink$1: function(sink) {
    this.visitSendPort$1(sink._port);
  },
  visitCloseToken$1: function(token) {
  },
  _PendingSendPortFinder$0: function() {
    this._visited = $._JsVisitedMap$();
  }
},

_PendingSendPortFinder_visitList_closure: {"": "Closure;this_0",
  call$1: function(e) {
    return this.this_0._dispatch$1(e);
  }
},

_PendingSendPortFinder_visitMap_closure: {"": "Closure;this_0",
  call$1: function(e) {
    return this.this_0._dispatch$1(e);
  }
},

_JsSerializer: {"": "_Serializer;_nextFreeRefId,_visited",
  visitSendPort$1: function(x) {
    if (typeof x === "object" && x !== null && !!$.getInterceptor(x).$is_NativeJsSendPort)
      return this.visitNativeJsSendPort$1(x);
    if (typeof x === "object" && x !== null && !!$.getInterceptor(x).$is_WorkerSendPort)
      return this.visitWorkerSendPort$1(x);
    throw $.wrapException("Illegal underlying port " + $.S(x));
  },
  visitNativeJsSendPort$1: function(port) {
    return ["sendport", $._globalState().currentManagerId, port._isolateId, port._receivePort.get$_id()];
  },
  visitWorkerSendPort$1: function(port) {
    return ["sendport", port._workerId, port._isolateId, port._receivePortId];
  },
  visitIsolateSink$1: function(sink) {
    var isClosed = sink._isClosed;
    return ["isolateSink", this.visitSendPort$1(sink._port), isClosed];
  },
  visitCloseToken$1: function(token) {
    return ["closeToken"];
  },
  _JsSerializer$0: function() {
    this._visited = $._JsVisitedMap$();
  }
},

_JsCopier: {"": "_Copier;_visited",
  visitSendPort$1: function(x) {
    if (typeof x === "object" && x !== null && !!$.getInterceptor(x).$is_NativeJsSendPort)
      return this.visitNativeJsSendPort$1(x);
    if (typeof x === "object" && x !== null && !!$.getInterceptor(x).$is_WorkerSendPort)
      return this.visitWorkerSendPort$1(x);
    throw $.wrapException("Illegal underlying port " + $.S(x));
  },
  visitNativeJsSendPort$1: function(port) {
    return $._NativeJsSendPort$(port._receivePort, port._isolateId);
  },
  visitWorkerSendPort$1: function(port) {
    return $._WorkerSendPort$(port._workerId, port._isolateId, port._receivePortId);
  },
  visitIsolateSink$1: function(sink) {
    var isClosed, result;
    isClosed = sink._isClosed;
    result = $.JsIsolateSink$fromPort(this.visitSendPort$1(sink._port));
    result._isClosed = isClosed;
    return result;
  },
  visitCloseToken$1: function(token) {
    return token;
  },
  _JsCopier$0: function() {
    this._visited = $._JsVisitedMap$();
  }
},

_JsDeserializer: {"": "_Deserializer;_deserialized",
  deserializeSendPort$1: function(list) {
    var t1, managerId, isolateId, receivePortId, isolate, receivePort;
    t1 = $.getInterceptor$asx(list);
    managerId = t1.$index(list, 1);
    isolateId = t1.$index(list, 2);
    receivePortId = t1.$index(list, 3);
    if ($.$eq(managerId, $._globalState().currentManagerId)) {
      t1 = $._globalState().isolates;
      isolate = t1.$index(t1, isolateId);
      if (isolate == null)
        return;
      receivePort = isolate.lookup$1(receivePortId);
      if (receivePort == null)
        return;
      return $._NativeJsSendPort$(receivePort, isolateId);
    } else
      return $._WorkerSendPort$(managerId, isolateId, receivePortId);
  },
  deserializeIsolateSink$1: function(list) {
    var t1, port, isClosed, result;
    t1 = $.getInterceptor$asx(list);
    port = this.deserializeSendPort$1(t1.$index(list, 1));
    isClosed = t1.$index(list, 2);
    result = $.JsIsolateSink$fromPort(port);
    result._isClosed = isClosed;
    return result;
  },
  deserializeCloseToken$1: function(list) {
    return $.C_CloseToken;
  }
},

_JsVisitedMap: {"": "Object;tagged",
  $index: function(_, object) {
    return object.__MessageTraverser__attached_info__;
  },
  $indexSet: function(_, object, info) {
    this.tagged.push(object);
    object.__MessageTraverser__attached_info__ = info;
  },
  reset$0: function(_) {
    this.tagged = $.List_List(null, null);
  },
  cleanup$0: function() {
    var $length, i, t1;
    for ($length = this.tagged.length, i = 0; i < $length; ++i) {
      t1 = this.tagged;
      if (i >= t1.length)
        throw $.ioore(i);
      t1[i].__MessageTraverser__attached_info__ = null;
    }
    this.tagged = null;
  }
},

_MessageTraverserVisitedMap: {"": "Object;",
  $index: function(_, object) {
    return;
  },
  $indexSet: function(_, object, info) {
  },
  reset$0: function(_) {
  },
  cleanup$0: function() {
  }
},

_MessageTraverser: {"": "Object;",
  traverse$1: function(x) {
    var result, t1;
    if ($._MessageTraverser_isPrimitive(x))
      return this.visitPrimitive$1(x);
    t1 = this._visited;
    t1.reset$0(t1);
    result = null;
    try {
      result = this._dispatch$1(x);
    } finally {
      this._visited.cleanup$0();
    }
    return result;
  },
  _dispatch$1: function(x) {
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return this.visitPrimitive$1(x);
    if (typeof x === "object" && x !== null && (x.constructor === Array || !!$.getInterceptor(x).$isList))
      return this.visitList$1(x);
    if (typeof x === "object" && x !== null && !!$.getInterceptor(x).$isMap)
      return this.visitMap$1(x);
    if (typeof x === "object" && x !== null && !!$.getInterceptor(x).$isSendPort)
      return this.visitSendPort$1(x);
    if (typeof x === "object" && x !== null && !!$.getInterceptor(x).$isJsIsolateSink)
      return this.visitIsolateSink$1(x);
    if (typeof x === "object" && x !== null && !!$.getInterceptor(x).$isCloseToken)
      return this.visitCloseToken$1(x);
    return this.visitObject$1(x);
  },
  visitObject$1: function(x) {
    throw $.wrapException("Message serialization: Illegal value " + $.S(x) + " passed");
  }
},

_Copier: {"": "_MessageTraverser;",
  visitPrimitive$1: function(x) {
    return x;
  },
  visitList$1: function(list) {
    var t1, copy, len, i, t2;
    if (typeof list !== "string" && (typeof list !== "object" || list === null || list.constructor !== Array && !$.isJsIndexable(list, list[$.dispatchPropertyName])))
      return this.visitList$1$bailout1(1, list);
    t1 = this._visited;
    copy = t1.$index(t1, list);
    if (copy != null)
      return copy;
    len = list.length;
    copy = $.List_List(len, null);
    t1 = this._visited;
    t1.$indexSet(t1, list, copy);
    for (t1 = copy.length, i = 0; i < len; ++i) {
      if (i >= list.length)
        throw $.ioore(i);
      t2 = this._dispatch$1(list[i]);
      if (i >= t1)
        throw $.ioore(i);
      copy[i] = t2;
    }
    return copy;
  },
  visitList$1$bailout1: function(state0, list) {
    var t1, copy, len, t2, i, t3;
    t1 = this._visited;
    copy = t1.$index(t1, list);
    if (copy != null)
      return copy;
    t1 = $.getInterceptor$asx(list);
    len = t1.get$length(list);
    copy = $.List_List(len, null);
    t2 = this._visited;
    t2.$indexSet(t2, list, copy);
    if (typeof len !== "number")
      throw $.iae(len);
    t2 = copy.length;
    i = 0;
    for (; i < len; ++i) {
      t3 = this._dispatch$1(t1.$index(list, i));
      if (i >= t2)
        throw $.ioore(i);
      copy[i] = t3;
    }
    return copy;
  },
  visitMap$1: function(map) {
    var t1, t2;
    t1 = {};
    t2 = this._visited;
    t1.copy_0 = t2.$index(t2, map);
    t2 = t1.copy_0;
    if (t2 != null)
      return t2;
    t1.copy_0 = $.Map_Map(null, null);
    t2 = this._visited;
    t2.$indexSet(t2, map, t1.copy_0);
    $.forEach$1$ax(map, new $._Copier_visitMap_closure(t1, this));
    return t1.copy_0;
  }
},

_Copier_visitMap_closure: {"": "Closure;box_0,this_1",
  call$2: function(key, val) {
    var t1 = this.this_1;
    $.$indexSet$ax(this.box_0.copy_0, t1._dispatch$1(key), t1._dispatch$1(val));
  }
},

_Serializer: {"": "_MessageTraverser;",
  visitPrimitive$1: function(x) {
    return x;
  },
  visitList$1: function(list) {
    var t1, copyId, id;
    t1 = this._visited;
    copyId = t1.$index(t1, list);
    if (copyId != null)
      return ["ref", copyId];
    id = this._nextFreeRefId;
    this._nextFreeRefId = id + 1;
    t1 = this._visited;
    t1.$indexSet(t1, list, id);
    return ["list", id, this._serializeList$1(list)];
  },
  visitMap$1: function(map) {
    var t1, copyId, id;
    t1 = this._visited;
    copyId = t1.$index(t1, map);
    if (copyId != null)
      return ["ref", copyId];
    id = this._nextFreeRefId;
    this._nextFreeRefId = id + 1;
    t1 = this._visited;
    t1.$indexSet(t1, map, id);
    t1 = $.getInterceptor$x(map);
    return ["map", id, this._serializeList$1($.toList$0$ax(t1.get$keys(map))), this._serializeList$1($.toList$0$ax(t1.get$values(map)))];
  },
  _serializeList$1: function(list) {
    var len, result, t1, i, t2;
    if (typeof list !== "string" && (typeof list !== "object" || list === null || list.constructor !== Array && !$.isJsIndexable(list, list[$.dispatchPropertyName])))
      return this._serializeList$1$bailout(1, list);
    len = list.length;
    result = $.List_List(len, null);
    for (t1 = result.length, i = 0; i < len; ++i) {
      if (i >= list.length)
        throw $.ioore(i);
      t2 = this._dispatch$1(list[i]);
      if (i >= t1)
        throw $.ioore(i);
      result[i] = t2;
    }
    return result;
  },
  _serializeList$1$bailout: function(state0, list) {
    var t1, len, result, t2, i, t3;
    t1 = $.getInterceptor$asx(list);
    len = t1.get$length(list);
    result = $.List_List(len, null);
    if (typeof len !== "number")
      throw $.iae(len);
    t2 = result.length;
    i = 0;
    for (; i < len; ++i) {
      t3 = this._dispatch$1(t1.$index(list, i));
      if (i >= t2)
        throw $.ioore(i);
      result[i] = t3;
    }
    return result;
  }
},

_Deserializer: {"": "Object;",
  deserialize$1: function(x) {
    if ($._Deserializer_isPrimitive(x))
      return x;
    this._deserialized = $.HashMap$(null, null);
    return this._deserializeHelper$1(x);
  },
  _deserializeHelper$1: function(x) {
    var t1, id;
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return x;
    t1 = $.getInterceptor$asx(x);
    switch (t1.$index(x, 0)) {
      case "ref":
        id = t1.$index(x, 1);
        t1 = this._deserialized;
        return t1.$index(t1, id);
      case "list":
        return this._deserializeList$1(x);
      case "map":
        return this._deserializeMap$1(x);
      case "sendport":
        return this.deserializeSendPort$1(x);
      case "isolateSink":
        return this.deserializeIsolateSink$1(x);
      case "closeToken":
        return this.deserializeCloseToken$1(x);
      default:
        return this.deserializeObject$1(x);
    }
  },
  _deserializeList$1: function(x) {
    var t1, id, dartList, len, i;
    t1 = $.getInterceptor$asx(x);
    id = t1.$index(x, 1);
    dartList = t1.$index(x, 2);
    if (typeof dartList !== "object" || dartList === null || (dartList.constructor !== Array || !!dartList.immutable$list) && !$.isJsIndexable(dartList, dartList[$.dispatchPropertyName]))
      return this._deserializeList$1$bailout(1, dartList, id);
    t1 = this._deserialized;
    t1.$indexSet(t1, id, dartList);
    len = dartList.length;
    for (i = 0; i < len; ++i) {
      if (i >= dartList.length)
        throw $.ioore(i);
      t1 = this._deserializeHelper$1(dartList[i]);
      if (i >= dartList.length)
        throw $.ioore(i);
      dartList[i] = t1;
    }
    return dartList;
  },
  _deserializeList$1$bailout: function(state0, dartList, id) {
    var t1, len, i;
    t1 = this._deserialized;
    t1.$indexSet(t1, id, dartList);
    t1 = $.getInterceptor$asx(dartList);
    len = t1.get$length(dartList);
    if (typeof len !== "number")
      throw $.iae(len);
    i = 0;
    for (; i < len; ++i)
      t1.$indexSet(dartList, i, this._deserializeHelper$1(t1.$index(dartList, i)));
    return dartList;
  },
  _deserializeMap$1: function(x) {
    var result, t1, id, t2, keys, values, len, i, key;
    result = $.Map_Map(null, null);
    t1 = $.getInterceptor$asx(x);
    id = t1.$index(x, 1);
    t2 = this._deserialized;
    t2.$indexSet(t2, id, result);
    keys = t1.$index(x, 2);
    if (typeof keys !== "string" && (typeof keys !== "object" || keys === null || keys.constructor !== Array && !$.isJsIndexable(keys, keys[$.dispatchPropertyName])))
      return this._deserializeMap$1$bailout(1, x, result, keys, t1);
    values = t1.$index(x, 3);
    if (typeof values !== "string" && (typeof values !== "object" || values === null || values.constructor !== Array && !$.isJsIndexable(values, values[$.dispatchPropertyName])))
      return this._deserializeMap$1$bailout(2, 0, result, keys, 0, values);
    len = keys.length;
    for (i = 0; i < len; ++i) {
      if (i >= keys.length)
        throw $.ioore(i);
      key = this._deserializeHelper$1(keys[i]);
      if (i >= values.length)
        throw $.ioore(i);
      result.$indexSet(result, key, this._deserializeHelper$1(values[i]));
    }
    return result;
  },
  _deserializeMap$1$bailout: function(state0, x, result, keys, t1, values) {
    switch (state0) {
      case 0:
        result = $.Map_Map(null, null);
        t1 = $.getInterceptor$asx(x);
        id = t1.$index(x, 1);
        t2 = this._deserialized;
        t2.$indexSet(t2, id, result);
        keys = t1.$index(x, 2);
      case 1:
        state0 = 0;
        values = t1.$index(x, 3);
      case 2:
        var id, t2, len, i;
        state0 = 0;
        t1 = $.getInterceptor$asx(keys);
        len = t1.get$length(keys);
        if (typeof len !== "number")
          throw $.iae(len);
        t2 = $.getInterceptor$asx(values);
        i = 0;
        for (; i < len; ++i)
          result.$indexSet(result, this._deserializeHelper$1(t1.$index(keys, i)), this._deserializeHelper$1(t2.$index(values, i)));
        return result;
    }
  },
  deserializeObject$1: function(x) {
    throw $.wrapException("Unexpected serialized object");
  }
},

TimerImpl: {"": "Object;_once,_inEventLoop,_handle?",
  TimerImpl$2: function(milliseconds, callback) {
    var t1;
    if (milliseconds === 0)
      t1 = !$.hasTimer() || $._globalState().isWorker === true;
    else
      t1 = false;
    if (t1) {
      this._handle = 1;
      $._globalState().topEventLoop.enqueue$3($._globalState().currentContext, new $.TimerImpl_internalCallback(this, callback), "timer");
      this._inEventLoop = true;
    } else if ($.hasTimer()) {
      t1 = $._globalState().topEventLoop;
      t1.activeTimerCount = t1.activeTimerCount + 1;
      this._handle = $.get$globalThis().setTimeout($.convertDartClosureToJS(new $.TimerImpl_internalCallback0(this, callback), 0), milliseconds);
    } else
      throw $.wrapException($.UnsupportedError$("Timer greater than 0."));
  }
},

TimerImpl_internalCallback: {"": "Closure;this_0,callback_1",
  call$0: function() {
    this.this_0.set$_handle(null);
    this.callback_1.call$0();
  }
},

TimerImpl_internalCallback0: {"": "Closure;this_2,callback_3",
  call$0: function() {
    this.this_2.set$_handle(null);
    var t1 = $._globalState().topEventLoop;
    t1.activeTimerCount = t1.activeTimerCount - 1;
    this.callback_3.call$0();
  }
},

JsIsolateSink$fromPort: function(_port) {
  return new $.JsIsolateSink(false, _port);
},

_callInIsolate: function(isolate, $function) {
  var result = isolate.eval$1($function);
  $._globalState().topEventLoop.run$0();
  return result;
},

_currentIsolate: function() {
  return $._globalState().currentContext;
},

startRootIsolate: function(entry) {
  var rootContext;
  $._globalState0($._Manager$(entry));
  if ($._globalState().isWorker === true)
    return;
  rootContext = $._IsolateContext$();
  $._globalState().rootContext = rootContext;
  $._globalState().currentContext = rootContext;
  rootContext.eval$1(entry);
  $._globalState().topEventLoop.run$0();
},

_globalState: function() {
  return $globalState;
},

_globalState0: function(val) {
  $globalState = val;
},

_Manager$: function(entry) {
  var t1 = new $._Manager(0, 0, 1, null, null, null, null, null, null, null, null, null, entry);
  t1._Manager$1(entry);
  return t1;
},

_IsolateContext$: function() {
  var t1 = new $._IsolateContext(null, null, null);
  t1._IsolateContext$0();
  return t1;
},

_EventLoop$: function() {
  return new $._EventLoop($.Queue_Queue($._IsolateEvent), 0);
},

_IsolateEvent$: function(isolate, fn, message) {
  return new $._IsolateEvent(isolate, fn, message);
},

_MainManagerStub$: function() {
  return new $._MainManagerStub();
},

IsolateNatives_computeThisScript: function() {
  var currentScript, stack, matches;
  currentScript = $.$currentScript;
  if (currentScript != null)
    return String(currentScript.src);
  stack = new Error().stack;
  if (stack == null)
    stack = (function() {try { throw new Error() } catch(e) { return e.stack }})();
  matches = stack.match(new RegExp("^ *at [^(]*\\((.*):[0-9]*:[0-9]*\\)$", "m"));
  if (matches != null)
    return matches[1];
  matches = stack.match(new RegExp("^[^@]*@(.*):[0-9]*$", "m"));
  if (matches != null)
    return matches[1];
  throw $.wrapException($.UnsupportedError$("Cannot extract URI from \"" + stack + "\""));
},

IsolateNatives_computeGlobalThis: function() {
  return function() { return this; }();
},

IsolateNatives__getEventData: function(e) {
  return e.data;
},

IsolateNatives__processWorkerMessage: function(sender, e) {
  var msg, t1, functionName, entryPoint, replyTo, context, t2;
  msg = $._deserializeMessage($.IsolateNatives__getEventData(e));
  t1 = $.getInterceptor$asx(msg);
  switch (t1.$index(msg, "command")) {
    case "start":
      $._globalState().currentManagerId = t1.$index(msg, "id");
      functionName = t1.$index(msg, "functionName");
      entryPoint = functionName == null ? $._globalState().entry : $.IsolateNatives__getJSFunctionFromName(functionName);
      replyTo = $._deserializeMessage(t1.$index(msg, "replyTo"));
      context = $._IsolateContext$();
      $._globalState().topEventLoop.enqueue$3(context, new $.IsolateNatives__processWorkerMessage_closure(entryPoint, replyTo), "worker-start");
      $._globalState().currentContext = context;
      $._globalState().topEventLoop.run$0();
      break;
    case "spawn-worker":
      $.IsolateNatives__spawnWorker(t1.$index(msg, "functionName"), t1.$index(msg, "uri"), t1.$index(msg, "replyPort"));
      break;
    case "message":
      if (t1.$index(msg, "port") != null)
        $.send$2$x(t1.$index(msg, "port"), t1.$index(msg, "msg"), t1.$index(msg, "replyTo"));
      $._globalState().topEventLoop.run$0();
      break;
    case "close":
      t1 = $._globalState().managers;
      t2 = $.get$IsolateNatives_workerIds();
      t1.remove$1(t1, t2.$index(t2, sender));
      sender.terminate();
      $._globalState().topEventLoop.run$0();
      break;
    case "log":
      $.IsolateNatives__log(t1.$index(msg, "msg"));
      break;
    case "print":
      if ($._globalState().isWorker === true) {
        t1 = $._globalState().mainManager;
        t1.postMessage$1(t1, $._serializeMessage($.makeLiteralMap(["command", "print", "msg", msg])));
      } else
        $.print(t1.$index(msg, "msg"));
      break;
    case "error":
      throw $.wrapException(t1.$index(msg, "msg"));
  }
},

IsolateNatives__log: function(msg) {
  var trace, t1, exception;
  if ($._globalState().isWorker === true) {
    t1 = $._globalState().mainManager;
    t1.postMessage$1(t1, $._serializeMessage($.makeLiteralMap(["command", "log", "msg", msg])));
  } else
    try {
      $.IsolateNatives__consoleLog(msg);
    } catch (exception) {
      $.unwrapException(exception);
      trace = $.getTraceFromException(exception);
      throw $.wrapException($.Exception_Exception(trace));
    }

},

IsolateNatives__consoleLog: function(msg) {
  $.get$globalThis().console.log(msg);
},

IsolateNatives__getJSFunctionFromName: function(functionName) {
  return $[functionName];
},

IsolateNatives__startIsolate: function(topLevel, replyTo) {
  $.lazyPort = $.ReceivePort_ReceivePort();
  $.send$2$x(replyTo, "spawned", $.port().toSendPort$0());
  topLevel.call$0();
},

IsolateNatives__spawnWorker: function(functionName, uri, replyPort) {
  var worker, t1, workerId;
  if (uri == null)
    uri = $.get$IsolateNatives_thisScript();
  worker = new Worker(uri);
  worker.onmessage = function(e) { $.IsolateNatives__processWorkerMessage$closure.call$2(worker, e); };
  t1 = $._globalState();
  workerId = t1.nextManagerId;
  t1.nextManagerId = workerId + 1;
  t1 = $.get$IsolateNatives_workerIds();
  t1.$indexSet(t1, worker, workerId);
  t1 = $._globalState().managers;
  t1.$indexSet(t1, workerId, worker);
  worker.postMessage($._serializeMessage($.makeLiteralMap(["command", "start", "id", workerId, "replyTo", $._serializeMessage(replyPort), "functionName", functionName])));
},

_NativeJsSendPort$: function(_receivePort, isolateId) {
  return new $._NativeJsSendPort(_receivePort, isolateId);
},

_WorkerSendPort$: function(_workerId, isolateId, _receivePortId) {
  return new $._WorkerSendPort(_workerId, _receivePortId, isolateId);
},

ReceivePortImpl$: function() {
  var t1 = $.ReceivePortImpl__nextFreeId;
  $.ReceivePortImpl__nextFreeId = $.$add$ns(t1, 1);
  t1 = new $.ReceivePortImpl(t1, null);
  t1.ReceivePortImpl$0();
  return t1;
},

_waitForPendingPorts: function(message, callback) {
  var finder = $._PendingSendPortFinder$();
  finder.traverse$1(message);
  $.Future_wait(finder.ports).then$1(new $._waitForPendingPorts_closure(callback));
},

_PendingSendPortFinder$: function() {
  var t1 = new $._PendingSendPortFinder([], $._MessageTraverserVisitedMap$());
  t1._PendingSendPortFinder$0();
  return t1;
},

_serializeMessage: function(message) {
  if ($._globalState().get$needSerialization() === true)
    return $._JsSerializer$().traverse$1(message);
  else
    return $._JsCopier$().traverse$1(message);
},

_deserializeMessage: function(message) {
  if ($._globalState().get$needSerialization() === true)
    return $._JsDeserializer$().deserialize$1(message);
  else
    return message;
},

_JsSerializer$: function() {
  var t1 = new $._JsSerializer(0, $._MessageTraverserVisitedMap$());
  t1._JsSerializer$0();
  return t1;
},

_JsCopier$: function() {
  var t1 = new $._JsCopier($._MessageTraverserVisitedMap$());
  t1._JsCopier$0();
  return t1;
},

_JsDeserializer$: function() {
  return new $._JsDeserializer(null);
},

_JsVisitedMap$: function() {
  return new $._JsVisitedMap(null);
},

_MessageTraverserVisitedMap$: function() {
  return new $._MessageTraverserVisitedMap();
},

_MessageTraverser_isPrimitive: function(x) {
  return x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean";
},

_Deserializer_isPrimitive: function(x) {
  return x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean";
},

TimerImpl$: function(milliseconds, callback) {
  var t1 = new $.TimerImpl(true, false, null);
  t1.TimerImpl$2(milliseconds, callback);
  return t1;
},

hasTimer: function() {
  return $.get$globalThis().setTimeout != null;
}}],
["_js_helper", "dart:_js_helper", , {
DartError: {"": "Object;",
  get$stack: function() {
    return this.stack;
  },
  toString$0: function(_) {
    var dartException = this.dartException;
    if (!!Error.captureStackTrace || this.get$stack() == null)
      return $.toString$0(dartException);
    else
      return $.S(dartException) + "\n" + $.S(this.get$stack());
  },
  DartError$1: function(dartException) {
    this.dartException = dartException;
    this.toString = $.DartError_toStringWrapper$closure.call$0;
  }
},

_StackTrace: {"": "Object;_stack",
  toString$0: function(_) {
    var t1 = this._stack;
    return t1 != null ? t1 : "";
  }
},

invokeClosure_closure: {"": "Closure;closure_0",
  call$0: function() {
    return this.closure_0.call$0();
  }
},

invokeClosure_closure0: {"": "Closure;closure_1,arg1_2",
  call$0: function() {
    return this.closure_1.call$1(this.arg1_2);
  }
},

invokeClosure_closure1: {"": "Closure;closure_3,arg1_4,arg2_5",
  call$0: function() {
    return this.closure_3.call$2(this.arg1_4, this.arg2_5);
  }
},

Closure: {"": "Object;",
  toString$0: function(_) {
    return "Closure";
  }
},

BoundClosure: {"": "Closure;_self,_target,_receiver",
  $eq: function(_, other) {
    if (other == null)
      return false;
    if (this === other)
      return true;
    if (typeof other !== "object" || other === null || !$.getInterceptor(other).$isBoundClosure)
      return false;
    return this._self === other._self && this._target === other._target && this._receiver === other._receiver;
  },
  get$hashCode: function(_) {
    return $.get$hashCode$(this._self) + $.get$hashCode$(this._target) + $.get$hashCode$(this._receiver) & 0x3ffffff;
  },
  $isBoundClosure: true
},

Null: {"": "Object;"},

CastErrorImplementation: {"": "Object;message",
  toString$0: function(_) {
    return this.message;
  }
},

StringMatch: {"": "Object;start,str,pattern",
  $index: function(_, g) {
    if (typeof g !== "number")
      return this.$$index$bailout(1, g);
    if (g !== 0)
      $.throwExpression($.RangeError$value(g));
    return this.pattern;
  },
  $$index$bailout: function(state0, g) {
    if (!$.$eq(g, 0))
      $.throwExpression($.RangeError$value(g));
    return this.pattern;
  },
  start$0: function($receiver) {
    return this.start.call$0();
  }
},

isJsIndexable: function(object, record) {
  var result;
  if (record != null) {
    result = $.dispatchRecordIndexability(record);
    if (result != null)
      return result;
  }
  return typeof object === "object" && object !== null && !!$.getInterceptor(object).$isJavaScriptIndexingBehavior;
},

S: function(value) {
  var res;
  if (typeof value === "string")
    return value;
  if (typeof value === "number") {
    if (value !== 0)
      return "" + value;
  } else if (true === value)
    return "true";
  else if (false === value)
    return "false";
  else if (value == null)
    return "null";
  res = $.toString$0(value);
  if (typeof res !== "string")
    throw $.wrapException($.ArgumentError$(value));
  return res;
},

Primitives_objectHashCode: function(object) {
  var hash = object.$identityHash;
  if (hash == null) {
    hash = Math.random() * 0x3fffffff | 0;
    object.$identityHash = hash;
  }
  return hash;
},

Primitives_printString: function(string) {
  if (typeof dartPrint == "function") {
    dartPrint(string);
    return;
  }
  if (typeof window == "object") {
    if (typeof console == "object")
      console.log(string);
    return;
  }
  if (typeof print == "function") {
    print(string);
    return;
  }
  throw "Unable to print message: " + String(string);
},

Primitives__throwFormatException: function(string) {
  throw $.wrapException($.FormatException$(string));
},

Primitives_parseInt: function(source, radix, handleError) {
  var match, t1;
  handleError = $.Primitives__throwFormatException$closure;
  $.checkString(source);
  match = /^\s*[+-]?((0x[a-f0-9]+)|(\d+)|([a-z0-9]+))\s*$/i.exec(source);
  if (match != null) {
    t1 = match.length;
    if (2 >= t1)
      throw $.ioore(2);
    if (match[2] != null)
      return parseInt(source, 16);
    if (3 >= t1)
      throw $.ioore(3);
    if (match[3] != null)
      return parseInt(source, 10);
    return handleError.call$1(source);
  }
  radix = 10;
  if (match == null)
    return handleError.call$1(source);
  return parseInt(source, radix);
},

Primitives_parseDouble: function(source, handleError) {
  var result, trimmed;
  $.checkString(source);
  handleError = $.Primitives__throwFormatException$closure;
  if (!/^\s*[+-]?(?:Infinity|NaN|(?:\.\d+|\d+(?:\.\d*)?)(?:[eE][+-]?\d+)?)\s*$/.test(source))
    return handleError.call$1(source);
  result = parseFloat(source);
  if ($.JSNumber_methods.get$isNaN(result)) {
    trimmed = $.trim$0$s(source);
    if (trimmed === "NaN" || trimmed === "+NaN" || trimmed === "-NaN")
      return result;
    return handleError.call$1(source);
  }
  return result;
},

Primitives_formatType: function(className, typeArguments) {
  return $.S(className) + $.joinArguments(typeArguments, 0);
},

Primitives_objectTypeName: function(object) {
  var $name, decompiled, t1;
  $name = $.constructorNameFallback($.getInterceptor(object));
  if ($.$eq($name, "Object")) {
    decompiled = String(object.constructor).match(/^\s*function\s*(\S*)\s*\(/)[1];
    if (typeof decompiled === "string")
      $name = decompiled;
  }
  t1 = $.getInterceptor$s($name);
  if (t1.codeUnitAt$1($name, 0) === 36)
    $name = t1.substring$1($name, 1);
  return $.Primitives_formatType($name, $.getRuntimeTypeInfo(object));
},

Primitives_objectToString: function(object) {
  return "Instance of '" + $.Primitives_objectTypeName(object) + "'";
},

Primitives_newGrowableList: function($length) {
  return new Array($length);
},

Primitives_newFixedList: function($length) {
  var result = new Array($length);
  result.fixed$length = true;
  return result;
},

Primitives_dateNow: function() {
  return Date.now();
},

Primitives_numMicroseconds: function() {
  if (typeof window != "undefined" && window !== null) {
    var performance = window.performance;
    if (performance != null && typeof performance.webkitNow == "function")
      return $.JSNumber_methods.floor$0(1000 * performance.webkitNow());
  }
  return 1000 * $.Primitives_dateNow();
},

Primitives__fromCharCodeApply: function(array) {
  var end, t1, result, i, subarray, t2;
  end = array.length;
  for (t1 = end <= 500, result = "", i = 0; i < end; i += 500) {
    if (t1)
      subarray = array;
    else {
      t2 = i + 500;
      t2 = t2 < end ? t2 : end;
      subarray = array.slice(i, t2);
    }
    result += String.fromCharCode.apply(null, subarray);
  }
  return result;
},

Primitives_stringFromCodePoints: function(codePoints) {
  var a, t1, i;
  a = [];
  for (t1 = $.ListIterator$(codePoints); t1.moveNext$0();) {
    i = t1._current;
    if (typeof i !== "number" || Math.floor(i) !== i)
      throw $.wrapException(new $.ArgumentError(i));
    if (i <= 65535)
      a.push(i);
    else if (i <= 1114111) {
      a.push(55296 + ($.JSNumber_methods.$shr(i - 65536, 10) & 1023));
      a.push(56320 + (i & 1023));
    } else
      throw $.wrapException(new $.ArgumentError(i));
  }
  return $.Primitives__fromCharCodeApply(a);
},

Primitives_stringFromCharCodes: function(charCodes) {
  var t1, i;
  for (t1 = $.JSArray_methods.get$iterator(charCodes); t1.moveNext$0();) {
    i = t1._current;
    if (typeof i !== "number" || Math.floor(i) !== i)
      throw $.wrapException(new $.ArgumentError(i));
    if (i < 0)
      throw $.wrapException(new $.ArgumentError(i));
    if (i > 65535)
      return $.Primitives_stringFromCodePoints(charCodes);
  }
  return $.Primitives__fromCharCodeApply(charCodes);
},

Primitives_lazyAsJsDate: function(receiver) {
  if (receiver.date === void 0)
    receiver.date = new Date(receiver.millisecondsSinceEpoch);
  return receiver.date;
},

Primitives_getYear: function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCFullYear() + 0 : $.Primitives_lazyAsJsDate(receiver).getFullYear() + 0;
},

Primitives_getMonth: function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCMonth() + 1 : $.Primitives_lazyAsJsDate(receiver).getMonth() + 1;
},

Primitives_getDay: function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCDate() + 0 : $.Primitives_lazyAsJsDate(receiver).getDate() + 0;
},

Primitives_getHours: function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCHours() + 0 : $.Primitives_lazyAsJsDate(receiver).getHours() + 0;
},

Primitives_getMinutes: function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCMinutes() + 0 : $.Primitives_lazyAsJsDate(receiver).getMinutes() + 0;
},

Primitives_getSeconds: function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCSeconds() + 0 : $.Primitives_lazyAsJsDate(receiver).getSeconds() + 0;
},

Primitives_getMilliseconds: function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCMilliseconds() + 0 : $.Primitives_lazyAsJsDate(receiver).getMilliseconds() + 0;
},

Primitives_getProperty: function(object, key) {
  if (object == null || typeof object === "boolean" || typeof object === "number" || typeof object === "string")
    throw $.wrapException($.ArgumentError$(object));
  return object[key];
},

Primitives_setProperty: function(object, key, value) {
  if (object == null || typeof object === "boolean" || typeof object === "number" || typeof object === "string")
    throw $.wrapException($.ArgumentError$(object));
  object[key] = value;
},

iae: function(argument) {
  throw $.wrapException($.ArgumentError$(argument));
},

ioore: function(index) {
  if (typeof index !== "number" || Math.floor(index) !== index)
    $.iae(index);
  throw $.wrapException($.RangeError$value(index));
},

checkNull: function(object) {
  if (object == null)
    throw $.wrapException($.ArgumentError$(null));
  return object;
},

checkNum: function(value) {
  if (typeof value !== "number")
    throw $.wrapException($.ArgumentError$(value));
  return value;
},

checkString: function(value) {
  if (typeof value !== "string")
    throw $.wrapException($.ArgumentError$(value));
  return value;
},

wrapException: function(ex) {
  var wrapper = $.DartError$(ex == null ? $.NullThrownError$() : ex);
  if (!!Error.captureStackTrace)
    Error.captureStackTrace(wrapper, $.wrapException$closure);
  else
    wrapper.stack = new Error().stack;
  return wrapper;
},

throwExpression: function(ex) {
  throw $.wrapException(ex);
},

DartError$: function(dartException) {
  var t1 = new $.DartError();
  t1.DartError$1(dartException);
  return t1;
},

DartError_toStringWrapper: function() {
  return $.toString$0(this);
},

unwrapException: function(ex) {
  var message, type, $name, t1, ieErrorCode, ieFacilityNumber, t2;
  if (ex == null)
    return;
  if (typeof ex !== "object")
    return ex;
  if ("dartException" in ex)
    return ex.dartException;
  else if (!("message" in ex))
    return ex;
  message = ex.message;
  if (ex instanceof TypeError) {
    type = ex.type;
    $name = ex.arguments ? ex.arguments[0] : "";
    if (!$.contains(message, "JSNull")) {
      t1 = $.getInterceptor(type);
      t1 = t1.$eq(type, "property_not_function") || t1.$eq(type, "called_non_callable") || t1.$eq(type, "non_object_property_call") || t1.$eq(type, "non_object_property_load");
    } else
      t1 = true;
    if (t1)
      return $.NoSuchMethodError$(null, $name, [], $.makeLiteralMap([]), null);
    else if ($.$eq(type, "undefined_method"))
      return $.NoSuchMethodError$("", $name, [], $.makeLiteralMap([]), null);
    ieErrorCode = ex.number & 0xffff;
    ieFacilityNumber = ex.number >> 16 & 0x1FFF;
    t1 = typeof message === "string";
    if (t1)
      if (message === "null has no properties" || message === "'null' is not an object" || message === "'undefined' is not an object" || $.JSString_methods.endsWith$1(message, "is null") || $.JSString_methods.endsWith$1(message, "is undefined") || $.JSString_methods.endsWith$1(message, "is null or undefined") || $.JSString_methods.endsWith$1(message, "of undefined") || $.JSString_methods.endsWith$1(message, "of null"))
        return $.NoSuchMethodError$(null, message, [], $.makeLiteralMap([]), null);
      else {
        if (!$.contains(message, " has no method "))
          if (!$.contains(message, " is not a function"))
            t2 = ieErrorCode === 438 && ieFacilityNumber === 10;
          else
            t2 = true;
        else
          t2 = true;
        if (t2)
          return $.NoSuchMethodError$("", message, [], $.makeLiteralMap([]), null);
      }
    return $.Exception_Exception(t1 ? message : "");
  }
  if (ex instanceof RangeError) {
    if (typeof message === "string" && $.contains(message, "call stack"))
      return $.StackOverflowError$();
    return $.ArgumentError$(null);
  }
  if (typeof InternalError == "function" && ex instanceof InternalError)
    if (typeof message === "string" && message === "too much recursion")
      return $.StackOverflowError$();
  return ex;
},

getTraceFromException: function(exception) {
  if (exception == null)
    return;
  if (typeof exception !== "object")
    return;
  if ("stack" in exception)
    return $._StackTrace$(exception.stack);
  else
    return;
},

_StackTrace$: function(_stack) {
  return new $._StackTrace(_stack);
},

makeLiteralMap: function(keyValuePairs) {
  var iterator, result, key;
  iterator = $.get$iterator$ax(keyValuePairs);
  result = $.LinkedHashMap$(null, null);
  for (; iterator.moveNext$0() === true;) {
    key = iterator.get$current();
    iterator.moveNext$0();
    result.$indexSet(result, key, iterator.get$current());
  }
  return result;
},

invokeClosure: function(closure, isolate, numberOfArguments, arg1, arg2) {
  var t1 = $.getInterceptor(numberOfArguments);
  if (t1.$eq(numberOfArguments, 0))
    return $._callInIsolate(isolate, new $.invokeClosure_closure(closure));
  else if (t1.$eq(numberOfArguments, 1))
    return $._callInIsolate(isolate, new $.invokeClosure_closure0(closure, arg1));
  else if (t1.$eq(numberOfArguments, 2))
    return $._callInIsolate(isolate, new $.invokeClosure_closure1(closure, arg1, arg2));
  else
    throw $.wrapException($.Exception_Exception("Unsupported number of arguments for wrapped closure"));
},

convertDartClosureToJS: function(closure, arity) {
  var $function = closure.$identity;
  if (!!$function)
    return $function;
  $function = (function ($2, $3) { return function($0, $1) { return $3(closure, $2, arity, $0, $1) }})($._currentIsolate(), $.invokeClosure$closure.call$5);
  closure.$identity = $function;
  return $function;
},

propertyTypeCastError: function(value, property) {
  var t1 = $.getInterceptor$asx(property);
  throw $.wrapException($.CastErrorImplementation$($.Primitives_objectTypeName(value), t1.substring$2(property, 3, t1.get$length(property))));
},

propertyTypeCast: function(value, property) {
  if (value == null || !!value[property])
    return value;
  $.propertyTypeCastError(value, property);
},

interceptedTypeCast: function(value, property) {
  var t1;
  if (value != null)
    t1 = typeof value === "object" && $.getInterceptor(value)[property];
  else
    t1 = true;
  if (t1)
    return value;
  $.propertyTypeCastError(value, property);
},

CastErrorImplementation$: function(actualType, expectedType) {
  return new $.CastErrorImplementation("CastError: Casting value of type " + actualType + " to incompatible type " + expectedType);
},

throwCyclicInit: function(staticName) {
  throw $.wrapException($.CyclicInitializationError$("Cyclic initialization for static " + $.S(staticName)));
},

setRuntimeTypeInfo: function(target, typeInfo) {
  if (target != null)
    target.$builtinTypeInfo = typeInfo;
  return target;
},

getRuntimeTypeInfo: function(target) {
  if (target == null)
    return;
  return target.$builtinTypeInfo;
},

getRuntimeTypeArguments: function(target, substitutionName) {
  return $.substitute($.getField(target, "$as" + $.S(substitutionName)), $.getRuntimeTypeInfo(target));
},

getRuntimeTypeArgument: function(target, substitutionName, index) {
  var $arguments = $.getRuntimeTypeArguments(target, substitutionName);
  return $.isNull($arguments) ? null : $.getIndex($arguments, index);
},

getConstructorName: function(type) {
  return type.builtin$cls;
},

runtimeTypeToString: function(type) {
  if (type == null)
    return "dynamic";
  else if (typeof type === "object" && type !== null && type.constructor === Array)
    return $.getConstructorName($.getIndex(type, 0)) + $.joinArguments(type, 1);
  else if (typeof type == "function")
    return type.builtin$cls;
  else
    return;
},

joinArguments: function(types, startIndex) {
  var buffer, index, firstArgument, allDynamic, argument, str;
  if ($.isNull(types))
    return "";
  buffer = $.StringBuffer$("");
  for (index = startIndex, firstArgument = true, allDynamic = true; index < types.length; ++index) {
    if (firstArgument)
      firstArgument = false;
    else
      buffer._contents = buffer._contents + ", ";
    argument = types[index];
    if (argument != null)
      allDynamic = false;
    str = $.runtimeTypeToString(argument);
    str = typeof str === "string" ? str : str;
    buffer._contents = buffer._contents + str;
  }
  return allDynamic ? "" : "<" + $.S(buffer) + ">";
},

substitute: function(substitution, $arguments) {
  if ($.isJsArray(substitution))
    $arguments = substitution;
  else if ($.isJsFunction(substitution)) {
    substitution = $.invoke(substitution, $arguments);
    if ($.isJsArray(substitution))
      $arguments = substitution;
    else if ($.isJsFunction(substitution))
      $arguments = $.invoke(substitution, $arguments);
  }
  return $arguments;
},

checkSubtype: function(object, isField, checks, asField) {
  var $arguments, interceptor;
  if (object == null)
    return false;
  $arguments = $.getRuntimeTypeInfo(object);
  interceptor = $.getInterceptor(object);
  if ($.isNull($.getField(interceptor, isField)))
    return false;
  return $.checkArguments($.getField(interceptor, asField), $arguments, checks);
},

checkArguments: function(substitution, $arguments, checks) {
  return $.areSubtypes($.substitute(substitution, $arguments), checks);
},

areSubtypes: function(s, t) {
  var len, i;
  if ($.isNull(s) || $.isNull(t))
    return true;
  len = $.getLength(s);
  for (i = 0; i < len; ++i)
    if (!$.isSubtype(s[i], t[i]))
      return false;
  return true;
},

isSubtype: function(s, t) {
  var targetSignatureFunction, t1, typeOfS, t2, typeOfT, substitution;
  if (s === t)
    return true;
  if (s == null || t == null)
    return true;
  if (t.func != null) {
    if (s.func == null) {
      if (s["$is_" + $.S(t.func)] != null)
        return true;
      targetSignatureFunction = s.$signature;
      if (targetSignatureFunction == null)
        return false;
      s = targetSignatureFunction.apply(s, null);
    }
    return $.isFunctionSubtype(s, t);
  }
  if (t.builtin$cls === "Function" && s.func != null)
    return true;
  t1 = typeof s === "object" && s !== null && s.constructor === Array;
  typeOfS = t1 ? s[0] : s;
  t2 = typeof t === "object" && t !== null && t.constructor === Array;
  typeOfT = t2 ? t[0] : t;
  if (typeOfS["$is" + $.runtimeTypeToString(typeOfT)] == null)
    return false;
  substitution = typeOfT !== typeOfS ? typeOfS["$as" + $.runtimeTypeToString(typeOfT)] : null;
  if ((typeof s !== "object" || s === null || s.constructor !== Array) && substitution == null || typeof t !== "object" || t === null || t.constructor !== Array)
    return true;
  t1 = $.isJsArray(s) ? s.slice(1) : null;
  t2 = $.isJsArray(t) ? t.slice(1) : null;
  return $.areSubtypes($.substitute(substitution, t1), t2);
},

isAssignable: function(s, t) {
  return $.isSubtype(s, t) || $.isSubtype(t, s);
},

areAssignable: function(s, t, allowShorter) {
  var sLength, tLength, i, t1, t2;
  if ($.isNull(t) && $.isNull(s))
    return true;
  if ($.isNull(t))
    return allowShorter;
  if ($.isNull(s))
    return false;
  sLength = $.getLength(s);
  tLength = $.getLength(t);
  if (allowShorter) {
    if (sLength < tLength)
      return false;
  } else if (sLength !== tLength)
    return false;
  for (i = 0; i < tLength; ++i) {
    t1 = s[i];
    t2 = t[i];
    if (!($.isSubtype(t1, t2) || $.isSubtype(t2, t1)))
      return false;
  }
  return true;
},

areAssignableMaps: function(s, t) {
  if ($.isNull(t))
    return true;
  if ($.isNull(s))
    return false;
  return      function (t, s, isAssignable) {
       for (var $name in t) {
         if (!s.hasOwnProperty($name)) {
           return false;
         }
         var tType = t[$name];
         var sType = s[$name];
         if (!isAssignable.call$2(sType, tType)) {
          return false;
         }
       }
       return true;
     }(t, s, $.isAssignable$closure)
  ;
},

isFunctionSubtype: function(s, t) {
  var sParameterTypes, tParameterTypes, sOptionalParameterTypes, tOptionalParameterTypes, sParametersLen, tParametersLen, sOptionalParametersLen, tOptionalParametersLen, pos, t1, t2, tPos, sPos;
  if ($.hasNoField(s, "func"))
    return false;
  if ($.hasField(s, "void")) {
    if ($.hasNoField(t, "void") && $.hasField(t, "ret"))
      return false;
  } else if ($.hasNoField(t, "void"))
    if (!$.isAssignable($.getField(s, "ret"), $.getField(t, "ret")))
      return false;
  sParameterTypes = $.getField(s, "args");
  tParameterTypes = $.getField(t, "args");
  sOptionalParameterTypes = $.getField(s, "opt");
  tOptionalParameterTypes = $.getField(t, "opt");
  sParametersLen = $.isNotNull(sParameterTypes) ? $.getLength(sParameterTypes) : 0;
  tParametersLen = $.isNotNull(tParameterTypes) ? $.getLength(tParameterTypes) : 0;
  sOptionalParametersLen = $.isNotNull(sOptionalParameterTypes) ? $.getLength(sOptionalParameterTypes) : 0;
  tOptionalParametersLen = $.isNotNull(tOptionalParameterTypes) ? $.getLength(tOptionalParameterTypes) : 0;
  if (sParametersLen > tParametersLen)
    return false;
  if (sParametersLen + sOptionalParametersLen < tParametersLen + tOptionalParametersLen)
    return false;
  if (sParametersLen === tParametersLen) {
    if (!$.areAssignable(sParameterTypes, tParameterTypes, false))
      return false;
    if (!$.areAssignable(sOptionalParameterTypes, tOptionalParameterTypes, true))
      return false;
  } else {
    for (pos = 0; pos < sParametersLen; ++pos) {
      t1 = sParameterTypes[pos];
      t2 = tParameterTypes[pos];
      if (!($.isSubtype(t1, t2) || $.isSubtype(t2, t1)))
        return false;
    }
    for (tPos = pos, sPos = 0; tPos < tParametersLen; ++sPos, ++tPos) {
      t1 = sOptionalParameterTypes[sPos];
      t2 = tParameterTypes[tPos];
      if (!($.isSubtype(t1, t2) || $.isSubtype(t2, t1)))
        return false;
    }
    for (sPos = 0; tPos < tOptionalParametersLen; ++sPos, ++tPos) {
      t1 = tOptionalParameterTypes[sPos];
      t2 = tOptionalParameterTypes[tPos];
      if (!($.isSubtype(t1, t2) || $.isSubtype(t2, t1)))
        return false;
    }
  }
  return $.areAssignableMaps($.getField(s, "named"), $.getField(t, "named"));
},

invoke: function($function, $arguments) {
  return $.invokeOn($function, null, $arguments);
},

invokeOn: function($function, receiver, $arguments) {
  return $function.apply(receiver, $arguments);
},

getField: function(object, $name) {
  return object[$name];
},

getIndex: function(array, index) {
  return array[index];
},

getLength: function(array) {
  return array.length;
},

isJsArray: function(value) {
  return typeof value === "object" && value !== null && value.constructor === Array;
},

hasField: function(object, $name) {
  return object[$name] != null;
},

hasNoField: function(object, $name) {
  return object[$name] == null;
},

isJsFunction: function(o) {
  return typeof o == "function";
},

isNull: function(o) {
  return o == null;
},

isNotNull: function(o) {
  return o != null;
},

typeNameInChrome: function(obj) {
  return $.typeNameInWebKitCommon(obj.constructor.name);
},

typeNameInSafari: function(obj) {
  return $.typeNameInWebKitCommon($.constructorNameFallback(obj));
},

typeNameInWebKitCommon: function(tag) {
  return tag;
},

typeNameInOpera: function(obj) {
  return $.constructorNameFallback(obj);
},

typeNameInFirefox: function(obj) {
  var $name = $.constructorNameFallback(obj);
  if ($name === "BeforeUnloadEvent")
    return "Event";
  if ($name === "DataTransfer")
    return "Clipboard";
  if ($name === "GeoGeolocation")
    return "Geolocation";
  if ($name === "WorkerMessageEvent")
    return "MessageEvent";
  if ($name === "XMLDocument")
    return "Document";
  return $name;
},

typeNameInIE: function(obj) {
  var $name = $.constructorNameFallback(obj);
  if ($name === "Document") {
    if (!!obj.xmlVersion)
      return "Document";
    return "HTMLDocument";
  }
  if ($name === "BeforeUnloadEvent")
    return "Event";
  if ($name === "DataTransfer")
    return "Clipboard";
  if ($name === "HTMLDDElement")
    return "HTMLElement";
  if ($name === "HTMLDTElement")
    return "HTMLElement";
  if ($name === "HTMLPhraseElement")
    return "HTMLElement";
  if ($name === "Position")
    return "Geoposition";
  if ($name === "Object")
    if (window.DataView && obj instanceof window.DataView)
      return "DataView";
  return $name;
},

constructorNameFallback: function(object) {
  var $constructor, $name, t1, string;
  if (object == null)
    return "Null";
  $constructor = object.constructor;
  if (typeof $constructor === "function") {
    $name = $constructor.builtin$cls;
    if ($name != null)
      return $name;
    $name = $constructor.name;
    if (typeof $name === "string")
      t1 = $name !== "" && $name !== "Object" && $name !== "Function.prototype";
    else
      t1 = false;
    if (t1)
      return $name;
  }
  string = Object.prototype.toString.call(object);
  return string.substring(8, string.length - 1);
},

alternateTag: function(object, tag) {
  if (!!/^HTML[A-Z].*Element$/.test(tag)) {
    if (Object.prototype.toString.call(object) === "[object Object]")
      return;
    return "HTMLElement";
  }
  return;
},

contains: function(userAgent, $name) {
  return userAgent.indexOf($name) !== -1;
},

propertyGet: function(object, property) {
  return object[property];
},

callHasOwnProperty: function($function, object, property) {
  return $function.call(object, property);
},

getFunctionForTypeNameOf: function() {
  if (typeof navigator !== "object")
    return $.typeNameInChrome$closure;
  var userAgent = navigator.userAgent;
  if ($.contains(userAgent, "Chrome") || $.contains(userAgent, "DumpRenderTree"))
    return $.typeNameInChrome$closure;
  else if ($.contains(userAgent, "Firefox"))
    return $.typeNameInFirefox$closure;
  else if ($.contains(userAgent, "MSIE"))
    return $.typeNameInIE$closure;
  else if ($.contains(userAgent, "Opera"))
    return $.typeNameInOpera$closure;
  else if ($.contains(userAgent, "AppleWebKit"))
    return $.typeNameInSafari$closure;
  else
    return $.constructorNameFallback$closure;
},

getTypeNameOf: function(obj) {
  if ($._getTypeNameOf == null)
    $._getTypeNameOf = $.getFunctionForTypeNameOf();
  return $._getTypeNameOf.call$1(obj);
},

toStringForNativeObject: function(obj) {
  return "Instance of " + $.getTypeNameOf(obj);
},

hashCodeForNativeObject: function(object) {
  return $.Primitives_objectHashCode(object);
},

defineProperty: function(obj, property, value) {
  Object.defineProperty(obj, property, {value: value, enumerable: false, writable: true, configurable: true});
},

defineNativeMethods: function(tags, interceptorClass) {
  $.defineNativeMethodsCommon(tags, interceptorClass, true);
},

defineNativeMethodsNonleaf: function(tags, interceptorClass) {
  $.defineNativeMethodsCommon(tags, interceptorClass, false);
},

defineNativeMethodsCommon: function(tags, interceptorClass, isLeaf) {
  var methods, tagsList, i, tag;
  methods = interceptorClass.prototype;
  if ($.interceptorsByTag == null)
    $.interceptorsByTag = {};
  if ($.leafTags == null)
    $.leafTags = {};
  tagsList = tags.split("|");
  for (i = 0; i < tagsList.length; ++i) {
    tag = tagsList[i];
    $.interceptorsByTag[tag] = methods;
    $.leafTags[tag] = isLeaf;
  }
},

defineNativeMethodsFinish: function() {
},

lookupInterceptor: function(hasOwnPropertyFunction, tag) {
  var map = $.interceptorsByTag;
  if (map == null)
    return;
  return $.callHasOwnProperty(hasOwnPropertyFunction, map, tag) ? $.propertyGet(map, tag) : null;
},

lookupDispatchRecord: function(obj) {
  var hasOwnPropertyFunction, tag, interceptor, secondTag, t1;
  hasOwnPropertyFunction = Object.prototype.hasOwnProperty;
  tag = $.getTypeNameOf(obj);
  interceptor = $.lookupInterceptor(hasOwnPropertyFunction, tag);
  if (interceptor == null) {
    secondTag = $.alternateTag(obj, tag);
    if (secondTag != null)
      interceptor = $.lookupInterceptor(hasOwnPropertyFunction, secondTag);
  }
  if (interceptor == null)
    return;
  t1 = $.leafTags;
  if (t1 != null && t1[tag] === true)
    return $.makeDispatchRecord(interceptor, false, null, !!interceptor.$isJavaScriptIndexingBehavior);
  else
    return $.makeDispatchRecord(interceptor, Object.getPrototypeOf(obj), null, null);
},

stringContainsUnchecked: function(receiver, other, startIndex) {
  return !$.$eq($.JSString_methods.indexOf$2(receiver, other, startIndex), -1);
},

stringReplaceJS: function(receiver, replacer, to) {
  return receiver.replace(replacer, to.replace("$", "$$$$"));
},

stringReplaceAllUnchecked: function(receiver, from, to) {
  var result, $length, i, t1;
  $.checkString(to);
  if (from === "")
    if (receiver === "")
      return to;
    else {
      result = $.StringBuffer$("");
      $length = receiver.length;
      result.write$1(result, to);
      for (i = 0; i < $length; ++i) {
        t1 = receiver[i];
        result._contents = result._contents + t1;
        result._contents = result._contents + to;
      }
      return result.toString$0(result);
    }
  else
    return $.stringReplaceJS(receiver, new RegExp(from.replace(new RegExp("[[\\]{}()*+?.\\\\^$|]", 'g'), "\\$&"), 'g'), to);
}}],
["asset", "asset.dart", , {
Asset: {"": "Object;_mesh,_mtl,_obj,_shader,_texture",
  get$mesh: function() {
    return this._mesh;
  },
  get$mtl: function() {
    return this._mtl;
  },
  get$obj: function() {
    return this._obj;
  },
  get$shader: function() {
    return this._shader;
  },
  get$texture: function() {
    return this._texture;
  },
  setRoot$1: function(root) {
    this._mesh = root + "mesh";
    this._mtl = root + "mtl";
    this._obj = root + "obj";
    this._shader = root + "shader";
    this._texture = root + "texture";
  },
  Asset$1: function(root) {
    this.setRoot$1(root);
  }
},

Asset$: function(root) {
  var t1 = new $.Asset(null, null, null, null, null);
  t1.Asset$1(root);
  return t1;
}}],
["camera", "camera.dart", , {
Camera: {"": "Object;degreesPerSec,camOrbitRadius,eye,center<,up,oldAngle,angle",
  getRad$1: function(interpolation) {
    var t1, t2;
    t1 = this.angle;
    t2 = this.oldAngle;
    return (t1 > t2 ? interpolation * (t1 - t2) + t2 : interpolation * (t1 + 360 - t2) + t2) * 3.141592653589793 / 180;
  },
  _liblib4$_update$1: function(gameTime) {
    this.oldAngle = this.angle;
    this.angle = $.JSNumber_methods.$mod(gameTime * this.degreesPerSec, 360);
  },
  update$1: function(_, gameLoop) {
    this._liblib4$_update$1(gameLoop.get$gameTime());
  },
  render$1: function(gameLoop) {
    var r, t1, t2;
    r = this.getRad$1(gameLoop.get$renderInterpolationFactor());
    t1 = this.eye;
    t2 = this.camOrbitRadius;
    t1.$indexSet(t1, 0, t2 * $.sin(r));
    t1.$indexSet(t1, 2, t2 * $.cos(r));
  },
  Camera$3: function(eye, center, up) {
    this._liblib4$_update$1(0);
  }
},

Camera$: function(eye, center, up) {
  var t1 = new $.Camera(30, 15, eye, center, up, 0, 0);
  t1.Camera$3(eye, center, up);
  return t1;
}}],
["cookies", "cookies/cookies.dart", , {
Cookie__readCookie_closure: {"": "Closure;cookie_0",
  call$1: function(t) {
    var t1, k, t2, t3;
    t1 = $.getInterceptor$asx(t);
    k = t1.indexOf$1(t, "=");
    t2 = $.getInterceptor$n(k);
    if (t2.$gt(k, 0)) {
      t3 = this.cookie_0;
      t3.$indexSet(t3, $.Uri_decodeComponent(t1.substring$2(t, 0, k)), $.Uri_decodeComponent(t1.substring$1(t, t2.$add(k, 1))));
    }
  }
},

Cookie__readCookie: function() {
  var cookie = $.Map_Map(null, null);
  $.JSArray_methods.forEach$1($.document().cookie.split(";"), new $.Cookie__readCookie_closure(cookie));
  return cookie;
},

Cookie_getCookie: function($name) {
  var t = $.Cookie__readCookie();
  if (t.containsKey$1(t, $name))
    return t.$index(t, $name);
  return;
}}],
["dart._collection.dev", "dart:_collection-dev", , {
ListIterator: {"": "Object;_iterable,_liblib0$_length,_index,_current",
  get$current: function() {
    return this._current;
  },
  moveNext$0: function() {
    var t1, t2, $length, t3;
    t1 = this._iterable;
    t2 = $.getInterceptor$asx(t1);
    $length = t2.get$length(t1);
    if (!$.$eq(this._liblib0$_length, $length))
      throw $.wrapException(new $.ConcurrentModificationError(t1));
    t3 = this._index;
    if (typeof $length !== "number")
      throw $.iae($length);
    if (t3 >= $length) {
      this._current = null;
      return false;
    }
    this._current = t2.elementAt$1(t1, t3);
    this._index = this._index + 1;
    return true;
  }
},

MappedIterable: {"": "IterableBase;_iterable,_f",
  get$iterator: function(_) {
    var t1 = this._iterable;
    return $.MappedIterator$(t1.get$iterator(t1), this._f);
  },
  get$length: function(_) {
    var t1 = this._iterable;
    return t1.get$length(t1);
  },
  get$isEmpty: function(_) {
    var t1 = this._iterable;
    return t1.get$isEmpty(t1);
  },
  $asIterableBase: function (S, T) { return [T]; },
  $asIterable: function (S, T) { return [T]; }
},

MappedIterator: {"": "Iterator;_current,_iterator,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  moveNext$0: function() {
    var t1 = this._iterator;
    if (t1.moveNext$0() === true) {
      this._current = this._f$1(t1.get$current());
      return true;
    }
    this._current = null;
    return false;
  },
  get$current: function() {
    return this._current;
  }
},

WhereIterable: {"": "IterableBase;_iterable,_f",
  get$iterator: function(_) {
    return $.WhereIterator$($.get$iterator$ax(this._iterable), this._f);
  },
  $asIterableBase: null,
  $asIterable: null
},

WhereIterator: {"": "Iterator;_iterator,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  moveNext$0: function() {
    for (var t1 = this._iterator; t1.moveNext$0() === true;)
      if (this._f$1(t1.get$current()) === true)
        return true;
    return false;
  },
  get$current: function() {
    return this._iterator.get$current();
  }
},

FixedLengthListMixin: {"": "Object;",
  set$length: function(receiver, newLength) {
    throw $.wrapException(new $.UnsupportedError("Cannot change the length of a fixed-length list"));
  },
  add$1: function(receiver, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot add to a fixed-length list"));
  },
  removeLast$0: function(receiver) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from a fixed-length list"));
  }
},

ToString__emitPair_closure: {"": "Closure;box_0,result_1,visiting_2",
  call$2: function(k, v) {
    var t1, t2;
    t1 = this.box_0;
    if (!t1.first_0)
      $.write$1$x(this.result_1, ", ");
    t1.first_0 = false;
    t1 = this.result_1;
    t2 = this.visiting_2;
    $.ToString__emitObject(k, t1, t2);
    $.write$1$x(t1, ": ");
    $.ToString__emitObject(v, t1, t2);
  }
},

Arrays_copy: function(src, srcStart, dst, dstStart, count) {
  var i, j, t1, t2, t3, t4;
  if (typeof src !== "string" && (typeof src !== "object" || src === null || src.constructor !== Array && !$.isJsIndexable(src, src[$.dispatchPropertyName])))
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (typeof srcStart !== "number")
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (typeof dst !== "object" || dst === null || (dst.constructor !== Array || !!dst.immutable$list) && !$.isJsIndexable(dst, dst[$.dispatchPropertyName]))
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (typeof dstStart !== "number")
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (srcStart < dstStart)
    for (i = srcStart + count - 1, j = dstStart + count - 1, t1 = src.length, t2 = dst.length; i >= srcStart; --i, --j) {
      if (i >>> 0 !== i || i >= t1)
        throw $.ioore(i);
      t3 = src[i];
      if (j >>> 0 !== j || j >= t2)
        throw $.ioore(j);
      dst[j] = t3;
    }
  else
    for (t1 = srcStart + count, t2 = src.length, t3 = dst.length, j = dstStart, i = srcStart; i < t1; ++i, ++j) {
      if (i >>> 0 !== i || i >= t2)
        throw $.ioore(i);
      t4 = src[i];
      if (j >>> 0 !== j || j >= t3)
        throw $.ioore(j);
      dst[j] = t4;
    }
},

Arrays_copy$bailout: function(state0, src, srcStart, dst, dstStart, count) {
  var t1, i, j, t2, t3;
  t1 = $.getInterceptor$n(srcStart);
  if (t1.$lt(srcStart, dstStart))
    for (i = $.$sub$n(t1.$add(srcStart, count), 1), j = $.$sub$n($.$add$ns(dstStart, count), 1), t1 = $.getInterceptor$asx(src); t2 = $.getInterceptor$n(i), t2.$ge(i, srcStart); i = t2.$sub(i, 1), j = $.$sub$n(j, 1))
      $.JSArray_methods.$indexSet(dst, j, t1.$index(src, i));
  else
    for (t2 = $.getInterceptor$asx(src), j = dstStart, i = srcStart; t3 = $.getInterceptor$n(i), t3.$lt(i, t1.$add(srcStart, count)); i = t3.$add(i, 1), j = $.$add$ns(j, 1))
      $.JSArray_methods.$indexSet(dst, j, t2.$index(src, i));
},

Arrays_indexOf: function(a, element, startIndex, endIndex) {
  var i;
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.$eq(a[i], element))
      return i;
  }
  return -1;
},

ListIterator$: function(iterable) {
  return new $.ListIterator(iterable, $.get$length$asx(iterable), 0, null);
},

MappedIterable$: function(_iterable, _f, S, T) {
  var t1 = new $.MappedIterable(_iterable, _f);
  $.setRuntimeTypeInfo(t1, [S, T]);
  return t1;
},

MappedIterator$: function(_iterator, _f) {
  return new $.MappedIterator(null, _iterator, _f);
},

WhereIterable$: function(_iterable, _f, E) {
  var t1 = new $.WhereIterable(_iterable, _f);
  $.setRuntimeTypeInfo(t1, [E]);
  return t1;
},

WhereIterator$: function(_iterator, _f) {
  return new $.WhereIterator(_iterator, _f);
},

IterableMixinWorkaround_forEach: function(iterable, f) {
  var t1;
  for (t1 = $.JSArray_methods.get$iterator(iterable); t1.moveNext$0();)
    f.call$1(t1._current);
},

IterableMixinWorkaround_firstWhere: function(iterable, test, orElse) {
  var t1, element;
  for (t1 = $.JSArray_methods.get$iterator(iterable); t1.moveNext$0();) {
    element = t1._current;
    if (test.call$1(element) === true)
      return element;
  }
  throw $.wrapException($.StateError$("No matching element"));
},

IterableMixinWorkaround_where: function(iterable, f) {
  return $.WhereIterable$(iterable, f, null);
},

IterableMixinWorkaround__rangeCheck: function(list, start, end) {
  if (start < 0 || start > list.length)
    throw $.wrapException($.RangeError$range(start, 0, list.length));
  if (end < start || end > list.length)
    throw $.wrapException($.RangeError$range(end, start, list.length));
},

IterableMixinWorkaround_setRangeList: function(list, start, end, from, skipCount) {
  var $length, otherStart, otherList, t1;
  $.IterableMixinWorkaround__rangeCheck(list, start, end);
  $length = end - start;
  if ($length === 0)
    return;
  if (skipCount < 0)
    throw $.wrapException($.ArgumentError$(skipCount));
  otherStart = skipCount;
  otherList = from;
  t1 = $.get$length$asx(otherList);
  if (typeof t1 !== "number")
    throw $.iae(t1);
  if (otherStart + $length > t1)
    throw $.wrapException($.StateError$("Not enough elements"));
  $.Arrays_copy(otherList, otherStart, list, start, $length);
},

ToString_iterableToString: function(i) {
  var result = $.StringBuffer$("");
  $.ToString__emitValue(i, result, $.List_List(null, null));
  return result.toString$0(result);
},

ToString__emitValue: function(i, result, visiting) {
  var t1, isList, t2, t3, first, e;
  t1 = $.getInterceptor$ax(visiting);
  t1.add$1(visiting, i);
  isList = typeof i === "object" && i !== null && (i.constructor === Array || !!$.getInterceptor(i).$isList);
  t2 = isList ? "[" : "{";
  t3 = $.getInterceptor$x(result);
  t3.write$1(result, t2);
  for (t2 = $.get$iterator$ax(i), first = true; t2.moveNext$0() === true; first = false) {
    e = t2.get$current();
    if (!first)
      t3.write$1(result, ", ");
    $.ToString__emitObject(e, result, visiting);
  }
  t3.write$1(result, isList ? "]" : "}");
  t1.removeLast$0(visiting);
},

ToString__emitObject: function(o, result, visiting) {
  if (typeof o === "object" && o !== null && (o.constructor === Array || !!$.getInterceptor(o).$isIterable))
    if ($.ToString__containsRef(visiting, o))
      $.write$1$x(result, typeof o === "object" && o !== null && (o.constructor === Array || !!$.getInterceptor(o).$isList) ? "[...]" : "{...}");
    else
      $.ToString__emitValue(o, result, visiting);
  else if (typeof o === "object" && o !== null && !!$.getInterceptor(o).$isMap)
    if ($.ToString__containsRef(visiting, o))
      $.write$1$x(result, "{...}");
    else
      $.ToString__emitPair(o, result, visiting);
  else
    $.write$1$x(result, o);
},

ToString__containsRef: function(i, ref) {
  var t1;
  for (t1 = $.get$iterator$ax(i); t1.moveNext$0() === true;)
    if (t1.get$current() === ref)
      return true;
  return false;
},

ToString_mapToString: function(m) {
  var result = $.StringBuffer$("");
  $.ToString__emitPair(m, result, $.List_List(null, null));
  return result.toString$0(result);
},

ToString__emitPair: function(m, result, visiting) {
  var t1, t2, t3;
  t1 = {};
  t2 = $.getInterceptor$ax(visiting);
  t2.add$1(visiting, m);
  t3 = $.getInterceptor$x(result);
  t3.write$1(result, "{");
  t1.first_0 = true;
  $.forEach$1$ax(m, new $.ToString__emitPair_closure(t1, result, visiting));
  t3.write$1(result, "}");
  t2.removeLast$0(visiting);
}}],
["dart.async", "dart:async", , {
_Completer: {"": "Object;",
  complete$1: function(_, value) {
    if (this._isComplete)
      throw $.wrapException($.StateError$("Future already completed"));
    this._isComplete = true;
    this.future._zone.cancelCallbackExpectation$0();
    this._setFutureValue$1(value);
  },
  complete$0: function($receiver) {
    return this.complete$1($receiver, null);
  },
  completeError$2: function(error, stackTrace) {
    var futureImpl;
    if (this._isComplete)
      throw $.wrapException($.StateError$("Future already completed"));
    this._isComplete = true;
    futureImpl = this.future;
    if (futureImpl._inSameErrorZone$1($._Zone_current())) {
      futureImpl._zone.cancelCallbackExpectation$0();
      this._setFutureError$1(error);
    } else
      $._Zone_current().handleUncaughtError$1(error);
  },
  completeError$1: function(error) {
    return this.completeError$2(error, null);
  },
  _Completer$0: function() {
    this.future._zone.expectCallback$0();
  }
},

_AsyncCompleter: {"": "_Completer;future,_isComplete",
  _setFutureValue$1: function(value) {
    this.future._asyncSetValue$1(value);
  },
  _setFutureError$1: function(error) {
    this.future._asyncSetError$1(error);
  }
},

_SyncCompleter: {"": "_Completer;future,_isComplete",
  _setFutureValue$1: function(value) {
    this.future._setValue$1(value);
  },
  _setFutureError$1: function(error) {
    this.future._setError$1(error);
  }
},

_FutureListenerWrapper: {"": "Object;future,_nextListener@",
  _sendValue$1: function(value) {
    this.future._setValueUnchecked$1(value);
  },
  _sendError$1: function(error) {
    this.future._setErrorUnchecked$1(error);
  },
  _inSameErrorZone$1: function(otherZone) {
    return this.future._inSameErrorZone$1(otherZone);
  }
},

_ErrorZoneBoundaryListener: {"": "Object;_nextListener@,_listener",
  _inSameErrorZone$1: function(otherZone) {
    throw $.wrapException($.UnsupportedError$("A Zone boundary doesn't support the inSameErrorZone test."));
  },
  _sendValue$1: function(value) {
    this._listener._sendValue$1(value);
  },
  _sendError$1: function(error) {
    $._Zone_current().handleUncaughtError$1(error);
  }
},

_FutureImpl: {"": "Object;_state,_zone<,_resultOrListeners<",
  get$_isChained: function() {
    return (this._state & 2) !== 0;
  },
  get$_isComplete: function() {
    return this._state >= 8;
  },
  get$_mayComplete: function() {
    return this._state === 0;
  },
  get$_hasValue: function() {
    return this._state === 8;
  },
  get$_hasUnhandledError: function() {
    return this._state >= 16;
  },
  _clearUnhandledError$0: function() {
    this._state = (this._state & 4294967279) >>> 0;
  },
  then$2$onError: function(f, onError) {
    var t1;
    if (onError == null) {
      t1 = $._ThenFuture$(f);
      t1._subscribeTo$1(this);
      return t1;
    }
    t1 = $._SubscribeFuture$(f, onError);
    t1._subscribeTo$1(this);
    return t1;
  },
  then$1: function(f) {
    return this.then$2$onError(f, null);
  },
  catchError$2$test: function(f, test) {
    var t1 = new $._CatchErrorFuture(test, f, null, 0, $._Zone_current().fork$0(), null);
    t1._TransformFuture$0();
    t1._subscribeTo$1(this);
    return t1;
  },
  catchError$1: function(f) {
    return this.catchError$2$test(f, null);
  },
  _inSameErrorZone$1: function(otherZone) {
    return this._zone.inSameErrorZone$1(otherZone);
  },
  _setValue$1: function(value) {
    if (!this.get$_mayComplete())
      throw $.wrapException($.StateError$("Future already completed"));
    this._setValueUnchecked$1(value);
  },
  get$_setValue: function() {
    return new $.BoundClosure$1(this, "_setValue$1", null);
  },
  _setValueUnchecked$1: function(value) {
    var listeners, listeners0;
    listeners = this.get$_isChained() ? null : this._removeListeners$0();
    this._state = 8;
    this._resultOrListeners = value;
    for (; listeners != null; listeners = listeners0) {
      listeners0 = listeners.get$_nextListener();
      listeners.set$_nextListener(null);
      listeners._sendValue$1(value);
    }
  },
  _setError$1: function(error) {
    if (!this.get$_mayComplete())
      throw $.wrapException($.StateError$("Future already completed"));
    this._setErrorUnchecked$1(error);
  },
  get$_setError: function() {
    return new $.BoundClosure$1(this, "_setError$1", null);
  },
  _setErrorUnchecked$1: function(error) {
    var hasListeners, listeners, listeners0;
    if (this.get$_isChained()) {
      hasListeners = this._state === 2;
      listeners = null;
    } else {
      listeners = this._removeListeners$0();
      hasListeners = listeners != null;
    }
    this._state = 12;
    this._resultOrListeners = error;
    if (!hasListeners) {
      this._scheduleUnhandledError$0();
      return;
    }
    for (; listeners != null; listeners = listeners0) {
      listeners0 = listeners.get$_nextListener();
      listeners.set$_nextListener(null);
      listeners._sendError$1(error);
    }
  },
  _asyncSetValue$1: function(value) {
    if (!this.get$_mayComplete())
      throw $.wrapException($.StateError$("Future already completed"));
    this._state = 1;
    $.runAsync(new $._FutureImpl__asyncSetValue_closure(this, value));
  },
  _asyncSetError$1: function(error) {
    if (!this.get$_mayComplete())
      throw $.wrapException($.StateError$("Future already completed"));
    this._state = 1;
    $.runAsync(new $._FutureImpl__asyncSetError_closure(this, error));
  },
  _scheduleUnhandledError$0: function() {
    this._state = 28;
    $.runAsync(new $._FutureImpl__scheduleUnhandledError_closure(this));
  },
  _addListener$1: function(listener) {
    var t1 = {};
    t1.listener_0 = listener;
    if (!t1.listener_0._inSameErrorZone$1(this._zone))
      t1.listener_0 = $._ErrorZoneBoundaryListener$(t1.listener_0);
    if (this.get$_isChained()) {
      this._state = 2;
      this.get$_chainSource()._addListener$1(t1.listener_0);
      return;
    }
    if (this.get$_isComplete()) {
      this._clearUnhandledError$0();
      $.runAsync(new $._FutureImpl__addListener_closure(t1, this));
    } else {
      t1.listener_0.set$_nextListener(this._resultOrListeners);
      this._resultOrListeners = t1.listener_0;
    }
  },
  _removeListeners$0: function() {
    var current, prev, next;
    current = this._resultOrListeners;
    this._resultOrListeners = null;
    for (prev = null; current != null; prev = current, current = next) {
      next = current.get$_nextListener();
      current.set$_nextListener(prev);
    }
    return prev;
  },
  _chain$1: function(future) {
    if (!this.get$_isComplete())
      future._chainFromFuture$1(this);
    else if (this.get$_hasValue())
      future._setValue$1(this._resultOrListeners);
    else {
      this._clearUnhandledError$0();
      future._setError$1(this._resultOrListeners);
    }
  },
  get$_chainSource: function() {
    var future = this._resultOrListeners;
    if (future.get$_isChained()) {
      future = future.get$_chainSource();
      this._resultOrListeners = future;
    }
    return future;
  },
  _chainFromFuture$1: function(resultSource) {
    var cursor, cursor0, cursor1;
    if (resultSource.get$_isChained())
      resultSource = resultSource.get$_chainSource();
    if (this === resultSource) {
      this._setError$1($.StateError$("Cyclic future dependency."));
      return;
    }
    cursor = this._removeListeners$0();
    for (cursor0 = cursor; cursor0 != null; cursor0 = cursor1) {
      cursor1 = cursor0.get$_nextListener();
      cursor0.set$_nextListener(null);
      resultSource._addListener$1(cursor0);
    }
    resultSource._addListener$1(this._asListener$0());
    this._resultOrListeners = resultSource;
    this._state = cursor != null ? 2 : 6;
  },
  _setOrChainValue$1: function(result) {
    if (typeof result === "object" && result !== null && !!$.getInterceptor(result).$isFuture)
      if (!!$.getInterceptor(result).$is_FutureImpl) {
        result._chain$1(this);
        return;
      } else {
        result.then$2$onError(this.get$_setValue(), this.get$_setError());
        return;
      }
    else
      this._setValue$1(result);
  },
  _asListener$0: function() {
    return $._FutureListener__FutureListener$wrap(this);
  },
  _FutureImpl$immediate$1: function(value) {
    this._state = 8;
    this._resultOrListeners = value;
  },
  _FutureImpl$immediateError$2: function(error, stackTrace) {
    if (stackTrace != null)
      $._attachStackTrace(error, stackTrace);
    this._setError$1(error);
  },
  $is_FutureImpl: true,
  $isFuture: true
},

_FutureImpl__FutureImpl$wait_handleError: {"": "Closure;box_0",
  call$1: function(error) {
    var t1 = this.box_0;
    if (t1.values_1 != null) {
      t1.values_1 = null;
      t1.completer_0.completeError$1(error);
    }
  }
},

_FutureImpl__FutureImpl$wait_closure: {"": "Closure;box_0,pos_1",
  call$1: function(value) {
    var t1, t2, t3;
    t1 = this.box_0;
    t2 = t1.values_1;
    if (t2 == null)
      return;
    t3 = this.pos_1;
    if (t3 >>> 0 !== t3 || t3 >= t2.length)
      throw $.ioore(t3);
    t2[t3] = value;
    t1.remaining_2 = $.$sub$n(t1.remaining_2, 1);
    if ($.$eq(t1.remaining_2, 0)) {
      t2 = t1.completer_0;
      t2.complete$1(t2, t1.values_1);
    }
  }
},

_FutureImpl__asyncSetValue_closure: {"": "Closure;this_0,value_1",
  call$0: function() {
    this.this_0._setValueUnchecked$1(this.value_1);
  }
},

_FutureImpl__asyncSetError_closure: {"": "Closure;this_0,error_1",
  call$0: function() {
    this.this_0._setErrorUnchecked$1(this.error_1);
  }
},

_FutureImpl__scheduleUnhandledError_closure: {"": "Closure;this_0",
  call$0: function() {
    var t1, error;
    t1 = this.this_0;
    if (t1.get$_hasUnhandledError()) {
      t1._clearUnhandledError$0();
      error = t1.get$_resultOrListeners();
      t1.get$_zone().handleUncaughtError$1(error);
    }
  }
},

_FutureImpl__addListener_closure: {"": "Closure;box_0,this_1",
  call$0: function() {
    var t1, t2, value;
    t1 = this.this_1;
    t2 = t1.get$_hasValue();
    value = t1.get$_resultOrListeners();
    t1 = this.box_0;
    if (t2)
      t1.listener_0._sendValue$1(value);
    else
      t1.listener_0._sendError$1(value);
  }
},

_TransformFuture: {"": "_FutureImpl;_nextListener@",
  _sendValue$1: function(value) {
    this._zone.executeCallback$1(new $._TransformFuture__sendValue_closure(this, value));
  },
  _sendError$1: function(error) {
    this._zone.executeCallback$1(new $._TransformFuture__sendError_closure(this, error));
  },
  _subscribeTo$1: function(future) {
    future._addListener$1(this);
  },
  _TransformFuture$0: function() {
    this._zone.expectCallback$0();
  },
  $as_FutureImpl: function (S, T) { return [T]; },
  $asFuture: function (S, T) { return [T]; }
},

_TransformFuture__sendValue_closure: {"": "Closure;this_0,value_1",
  call$0: function() {
    return this.this_0._zonedSendValue$1(this.value_1);
  }
},

_TransformFuture__sendError_closure: {"": "Closure;this_0,error_1",
  call$0: function() {
    return this.this_0._zonedSendError$1(this.error_1);
  }
},

_ThenFuture: {"": "_TransformFuture;_onValue,_nextListener,_state,_zone,_resultOrListeners",
  _onValue$1: function(arg0) {
    return this._onValue.call$1(arg0);
  },
  _zonedSendValue$1: function(value) {
    var result, e, s, exception, t1;
    result = null;
    try {
      result = this._onValue$1(value);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      e = t1;
      s = $.getTraceFromException(exception);
      this._setError$1($._asyncError(e, s));
      return;
    }

    this._setOrChainValue$1(result);
  },
  _zonedSendError$1: function(error) {
    this._setError$1(error);
  },
  $as_FutureImpl: function (S, T) { return [T]; },
  $asFuture: function (S, T) { return [T]; }
},

_CatchErrorFuture: {"": "_TransformFuture;_test,_onError,_nextListener,_state,_zone,_resultOrListeners",
  _onError$1: function(arg0) {
    return this._onError.call$1(arg0);
  },
  _zonedSendValue$1: function(value) {
    this._setValue$1(value);
  },
  _zonedSendError$1: function(error) {
    var matchesTest, e, s, result, e0, s0, exception, t1;
    result = null;
    try {
      result = this._onError$1(error);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      e0 = t1;
      s0 = $.getTraceFromException(exception);
      this._setError$1($._asyncError(e0, s0));
      return;
    }

    this._setOrChainValue$1(result);
  },
  $as_FutureImpl: null,
  $asFuture: null
},

_SubscribeFuture: {"": "_ThenFuture;_onError,_onValue,_nextListener,_state,_zone,_resultOrListeners",
  _onError$1: function(arg0) {
    return this._onError.call$1(arg0);
  },
  _zonedSendError$1: function(error) {
    var result, e, s, exception, t1;
    result = null;
    try {
      result = this._onError$1(error);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      e = t1;
      s = $.getTraceFromException(exception);
      this._setError$1($._asyncError(e, s));
      return;
    }

    this._setOrChainValue$1(result);
  },
  $as_FutureImpl: function (S, T) { return [T]; },
  $asFuture: function (S, T) { return [T]; }
},

Stream: {"": "Object;",
  forEach$1: function(_, action) {
    var t1, future;
    t1 = {};
    future = $._FutureImpl$();
    t1.subscription_0 = null;
    t1.subscription_0 = this.listen$4$cancelOnError$onDone$onError(new $.Stream_forEach_closure(t1, action, future), true, new $.Stream_forEach_closure0(future), future.get$_setError());
    return future;
  },
  get$length: function(_) {
    var t1, future;
    t1 = {};
    future = new $._FutureImpl(0, $._Zone_current().fork$0(), null);
    t1.count_0 = 0;
    this.listen$4$cancelOnError$onDone$onError(new $.Stream_length_closure(t1), true, new $.Stream_length_closure0(t1, future), future.get$_setError());
    return future;
  },
  get$isEmpty: function(_) {
    var t1, future;
    t1 = {};
    future = new $._FutureImpl(0, $._Zone_current().fork$0(), null);
    t1.subscription_0 = null;
    t1.subscription_0 = this.listen$4$cancelOnError$onDone$onError(new $.Stream_isEmpty_closure(t1, future), true, new $.Stream_isEmpty_closure0(future), future.get$_setError());
    return future;
  },
  firstWhere$2$defaultValue: function(_, test, defaultValue) {
    var t1, future;
    t1 = {};
    future = $._FutureImpl$();
    t1.subscription_0 = null;
    t1.subscription_0 = this.listen$4$cancelOnError$onDone$onError(new $.Stream_firstWhere_closure(t1, test, future), true, new $.Stream_firstWhere_closure0(defaultValue, future), future.get$_setError());
    return future;
  },
  firstWhere$1: function($receiver, test) {
    return this.firstWhere$2$defaultValue($receiver, test, null);
  }
},

Stream_forEach_closure: {"": "Closure;box_0,action_1,future_2",
  call$1: function(element) {
    $._runUserCode(new $.Stream_forEach__closure(this.action_1, element), new $.Stream_forEach__closure0(), $._cancelAndError(this.box_0.subscription_0, this.future_2));
  }
},

Stream_forEach__closure: {"": "Closure;action_3,element_4",
  call$0: function() {
    return this.action_3.call$1(this.element_4);
  }
},

Stream_forEach__closure0: {"": "Closure;",
  call$1: function(_) {
  }
},

Stream_forEach_closure0: {"": "Closure;future_5",
  call$0: function() {
    this.future_5._setValue$1(null);
  }
},

Stream_length_closure: {"": "Closure;box_0",
  call$1: function(_) {
    var t1 = this.box_0;
    t1.count_0 = $.$add$ns(t1.count_0, 1);
  }
},

Stream_length_closure0: {"": "Closure;box_0,future_1",
  call$0: function() {
    this.future_1._setValue$1(this.box_0.count_0);
  }
},

Stream_isEmpty_closure: {"": "Closure;box_0,future_1",
  call$1: function(_) {
    var t1 = this.box_0.subscription_0;
    t1.cancel$0(t1);
    this.future_1._setValue$1(false);
  }
},

Stream_isEmpty_closure0: {"": "Closure;future_2",
  call$0: function() {
    this.future_2._setValue$1(true);
  }
},

Stream_firstWhere_closure: {"": "Closure;box_0,test_1,future_2",
  call$1: function(value) {
    var t1, t2;
    t1 = this.box_0;
    t2 = this.future_2;
    $._runUserCode(new $.Stream_firstWhere__closure(this.test_1, value), new $.Stream_firstWhere__closure0(t1, t2, value), $._cancelAndError(t1.subscription_0, t2));
  }
},

Stream_firstWhere__closure: {"": "Closure;test_3,value_4",
  call$0: function() {
    return this.test_3.call$1(this.value_4);
  }
},

Stream_firstWhere__closure0: {"": "Closure;box_0,future_5,value_6",
  call$1: function(isMatch) {
    var t1;
    if (isMatch === true) {
      t1 = this.box_0.subscription_0;
      t1.cancel$0(t1);
      this.future_5._setValue$1(this.value_6);
    }
  }
},

Stream_firstWhere_closure0: {"": "Closure;defaultValue_7,future_8",
  call$0: function() {
    var t1, t2;
    t1 = this.defaultValue_7;
    if (t1 != null) {
      t2 = this.future_8;
      $._runUserCode(t1, t2.get$_setValue(), t2.get$_setError());
      return;
    }
    this.future_8._setError$1($.StateError$("firstMatch ended without match"));
  }
},

StreamSubscription: {"": "Object;"},

EventSink: {"": "Object;"},

_cancelAndError_closure: {"": "Closure;subscription_0,future_1",
  call$1: function(error) {
    var t1 = this.subscription_0;
    t1.cancel$0(t1);
    this.future_1._setError$1(error);
  }
},

_ZoneBase: {"": "Object;",
  get$_errorZone: function() {
    return this._parentZone.get$_errorZone();
  },
  handleUncaughtError$1: function(error) {
    this._parentZone.handleUncaughtError$1(error);
  },
  inSameErrorZone$1: function(otherZone) {
    return $.$eq(this.get$_errorZone(), otherZone.get$_errorZone());
  },
  fork$0: function() {
    return this;
  },
  expectCallback$0: function() {
    var t1 = this._openCallbacks;
    this._openCallbacks = t1 + 1;
    return t1;
  },
  cancelCallbackExpectation$0: function() {
    this._openCallbacks = this._openCallbacks - 1;
    this._checkIfDone$0();
  },
  _dispose$0: function() {
  },
  _checkIfDone$0: function() {
    if (!this._isExecutingCallback && this._openCallbacks === 0 && $.JSArray_methods.get$isEmpty(this._children))
      this._dispose$0();
  },
  executeCallback$1: function(f) {
    this._openCallbacks = this._openCallbacks - 1;
    this._runUnguarded$1(f);
  },
  executeCallbackGuarded$1: function(f) {
    this._openCallbacks = this._openCallbacks - 1;
    this._runGuarded$1(f);
  },
  _runInZone$2: function(f, handleUncaught) {
    var oldZone, oldIsExecuting, e, s, t1, exception;
    if ($.get$_Zone__current() === this && handleUncaught !== true && this._isExecutingCallback)
      return f.call$0();
    oldZone = $.get$_Zone__current();
    $._Zone__current = this;
    oldIsExecuting = this._isExecutingCallback;
    this._isExecutingCallback = true;
    try {
      try {
        t1 = f.call$0();
        return t1;
      } catch (exception) {
        t1 = $.unwrapException(exception);
        e = t1;
        s = $.getTraceFromException(exception);
        if (handleUncaught === true)
          this.handleUncaughtError$1($._asyncError(e, s));
        else
          throw exception;
      }

    } finally {
      this._isExecutingCallback = oldIsExecuting;
      $._Zone__current = oldZone;
      this._checkIfDone$0();
    }
  },
  _runGuarded$1: function(f) {
    return this._runInZone$2(f, true);
  },
  _runUnguarded$1: function(f) {
    return this._runInZone$2(f, false);
  },
  runAsync$2: function(f, zone) {
    return this._parentZone.runAsync$2(f, zone);
  },
  createTimer$2: function(duration, callback) {
    return $._ZoneTimer$(this, duration, callback);
  },
  _ZoneBase$_defaultZone$0: function() {
  }
},

_DefaultZone: {"": "_ZoneBase;_parentZone,_children,_openCallbacks,_isExecutingCallback",
  get$_errorZone: function() {
    return this;
  },
  handleUncaughtError$1: function(error) {
    $._scheduleAsyncCallback(new $._DefaultZone_handleUncaughtError_closure(error));
  },
  runAsync$2: function(f, zone) {
    if (this === zone) {
      $._scheduleAsyncCallback(f);
      return;
    }
    zone.expectCallback$0();
    $._scheduleAsyncCallback(new $._DefaultZone_runAsync_closure(f, zone));
  }
},

_DefaultZone_handleUncaughtError_closure: {"": "Closure;error_0",
  call$0: function() {
    var t1, trace;
    t1 = this.error_0;
    $.print("Uncaught Error: " + $.S(t1));
    trace = $.getAttachedStackTrace(t1);
    $._attachStackTrace(t1, null);
    if (trace != null)
      $.print("Stack Trace:\n" + $.S(trace) + "\n");
    throw $.wrapException(t1);
  }
},

_DefaultZone_runAsync_closure: {"": "Closure;f_0,zone_1",
  call$0: function() {
    this.zone_1.executeCallbackGuarded$1(this.f_0);
  }
},

_ZoneTimer: {"": "Object;_zone<,_callback,_liblib5$_timer",
  _run$0: function() {
    this._zone.executeCallbackGuarded$1(this._callback);
  },
  get$_run: function() {
    return new $.BoundClosure$0(this, "_run$0", null);
  },
  _ZoneTimer$3: function(_zone, duration, _callback) {
    this._zone.expectCallback$0();
    this._liblib5$_timer = $._createTimer(duration, this.get$_run());
  }
},

_attachStackTrace: function(o, st) {
  var t1;
  if (o == null || typeof o === "boolean" || typeof o === "number" || typeof o === "string")
    return;
  t1 = $.get$_stackTraceExpando();
  t1.$indexSet(t1, o, st);
},

getAttachedStackTrace: function(o) {
  var t1;
  if (o == null || typeof o === "boolean" || typeof o === "number" || typeof o === "string")
    return;
  t1 = $.get$_stackTraceExpando();
  return t1.$index(t1, o);
},

_asyncRunCallback: function() {
  var callback, t1, exception, milliseconds;
  for (; t1 = $.get$_asyncCallbacks(), t1._head !== t1._tail;) {
    callback = $.get$_asyncCallbacks().removeFirst$0();
    try {
      callback.call$0();
    } catch (exception) {
      $.unwrapException(exception);
      milliseconds = $.JSNumber_methods.$tdiv($.Duration_0._duration, 1000);
      $.TimerImpl$(milliseconds < 0 ? 0 : milliseconds, $._asyncRunCallback$closure);
      throw exception;
    }

  }
  $._callbacksAreEnqueued = false;
},

_scheduleAsyncCallback: function(callback) {
  var t1 = $.get$_asyncCallbacks();
  t1.add$1(t1, callback);
  if (!$._callbacksAreEnqueued) {
    $._AsyncRun__enqueueImmediate($._asyncRunCallback$closure);
    $._callbacksAreEnqueued = true;
  }
},

runAsync: function(callback) {
  var currentZone = $.get$_Zone__current();
  currentZone.runAsync$2(callback, currentZone);
},

_AsyncRun__enqueueImmediate: function(callback) {
  var milliseconds = $.Duration_0.get$inMilliseconds();
  $.TimerImpl$(milliseconds < 0 ? 0 : milliseconds, callback);
},

Future_Future$value: function(value) {
  return $._FutureImpl$immediate(value);
},

Future_Future$error: function(error, stackTrace) {
  return $._FutureImpl$immediateError(error, stackTrace);
},

Future_wait: function(futures) {
  return $._FutureImpl__FutureImpl$wait(futures);
},

Completer_Completer: function() {
  return $._AsyncCompleter$();
},

Completer_Completer$sync: function() {
  return $._SyncCompleter$();
},

_AsyncCompleter$: function() {
  var t1 = new $._AsyncCompleter($._FutureImpl$(), false);
  t1._Completer$0();
  return t1;
},

_SyncCompleter$: function() {
  var t1 = new $._SyncCompleter($._FutureImpl$(), false);
  t1._Completer$0();
  return t1;
},

_FutureListener__FutureListener$wrap: function(future) {
  return $._FutureListenerWrapper$(future);
},

_FutureListenerWrapper$: function(future) {
  return new $._FutureListenerWrapper(future, null);
},

_ErrorZoneBoundaryListener$: function(_listener) {
  return new $._ErrorZoneBoundaryListener(null, _listener);
},

_FutureImpl$: function() {
  return new $._FutureImpl(0, $._Zone_current().fork$0(), null);
},

_FutureImpl$immediate: function(value) {
  var t1 = new $._FutureImpl(0, $._Zone_current().fork$0(), null);
  t1._FutureImpl$immediate$1(value);
  return t1;
},

_FutureImpl$immediateError: function(error, stackTrace) {
  var t1 = new $._FutureImpl(0, $._Zone_current().fork$0(), null);
  t1._FutureImpl$immediateError$2(error, stackTrace);
  return t1;
},

_FutureImpl__FutureImpl$wait: function(futures) {
  var t1, t2, t3, future, pos;
  t1 = {};
  t1.completer_0 = null;
  t1.values_1 = null;
  t2 = new $._FutureImpl__FutureImpl$wait_handleError(t1);
  t1.remaining_2 = 0;
  for (t3 = $.JSArray_methods.get$iterator(futures); t3.moveNext$0();) {
    future = t3._current;
    pos = t1.remaining_2;
    t1.remaining_2 = $.$add$ns(pos, 1);
    future.catchError$1(t2).then$1(new $._FutureImpl__FutureImpl$wait_closure(t1, pos));
  }
  if ($.$eq(t1.remaining_2, 0))
    return $.Future_Future$value($.List_empty);
  t1.values_1 = $.List_List(t1.remaining_2, null);
  t1.completer_0 = $.Completer_Completer();
  return t1.completer_0.future;
},

_ThenFuture$: function(_onValue) {
  var t1 = new $._ThenFuture(_onValue, null, 0, $._Zone_current().fork$0(), null);
  t1._TransformFuture$0();
  return t1;
},

_SubscribeFuture$: function(onValue, _onError) {
  var t1 = new $._SubscribeFuture(_onError, onValue, null, 0, $._Zone_current().fork$0(), null);
  t1._TransformFuture$0();
  return t1;
},

_asyncError: function(error, stackTrace) {
  if (stackTrace == null)
    return error;
  if ($.getAttachedStackTrace(error) != null)
    return error;
  $._attachStackTrace(error, stackTrace);
  return error;
},

_runUserCode: function(userCode, onSuccess, onError) {
  var e, s, exception, t1;
  try {
    onSuccess.call$1(userCode.call$0());
  } catch (exception) {
    t1 = $.unwrapException(exception);
    e = t1;
    s = $.getTraceFromException(exception);
    onError.call$1($._asyncError(e, s));
  }

},

_cancelAndError: function(subscription, future) {
  return new $._cancelAndError_closure(subscription, future);
},

Timer_Timer: function(duration, callback) {
  return $._Zone_current().createTimer$2(duration, callback);
},

Timer_run: function(callback) {
  $.Timer_Timer($.Duration_0, callback);
},

_createTimer: function(duration, callback) {
  var milliseconds = duration.get$inMilliseconds();
  return $.TimerImpl$(milliseconds < 0 ? 0 : milliseconds, callback);
},

_Zone_current: function() {
  return $.get$_Zone__current();
},

_DefaultZone$: function() {
  var t1 = new $._DefaultZone(null, [], 0, false);
  t1._ZoneBase$_defaultZone$0();
  return t1;
},

_ZoneTimer$: function(_zone, duration, _callback) {
  var t1 = new $._ZoneTimer(_zone, _callback, null);
  t1._ZoneTimer$3(_zone, duration, _callback);
  return t1;
}}],
["dart.collection", "dart:collection", , {
HashMap_values_closure: {"": "Closure;this_0",
  call$1: function(each) {
    return $.$index$asx(this.this_0, each);
  }
},

HashMapKeyIterable: {"": "IterableBase;_map",
  get$length: function(_) {
    return this._map._length;
  },
  get$isEmpty: function(_) {
    return this._map._length === 0;
  },
  get$iterator: function(_) {
    var t1 = this._map;
    return $.HashMapKeyIterator$(t1, t1._computeKeys$0());
  },
  forEach$1: function(_, f) {
    var t1, keys, $length, i;
    t1 = this._map;
    keys = t1._computeKeys$0();
    for ($length = keys.length, i = 0; i < $length; ++i) {
      f.call$1(keys[i]);
      if (keys !== t1._keys)
        throw $.wrapException(new $.ConcurrentModificationError(t1));
    }
  },
  $asIterableBase: null,
  $asIterable: null
},

HashMapKeyIterator: {"": "Object;_map,_keys,_offset,_liblib2$_current",
  get$current: function() {
    return this._liblib2$_current;
  },
  moveNext$0: function() {
    var keys, offset, t1;
    keys = this._keys;
    offset = this._offset;
    t1 = this._map;
    if (keys !== t1._keys)
      throw $.wrapException(new $.ConcurrentModificationError(t1));
    else if (offset >= keys.length) {
      this._liblib2$_current = null;
      return false;
    } else {
      this._liblib2$_current = keys[offset];
      this._offset = offset + 1;
      return true;
    }
  }
},

LinkedHashMap_values_closure: {"": "Closure;this_0",
  call$1: function(each) {
    return $.$index$asx(this.this_0, each);
  }
},

LinkedHashMapCell: {"": "Object;_key<,_value@,_next?,_previous"},

LinkedHashMapKeyIterable: {"": "IterableBase;_map",
  get$length: function(_) {
    return this._map._length;
  },
  get$isEmpty: function(_) {
    return this._map._length === 0;
  },
  get$iterator: function(_) {
    var t1 = this._map;
    return $.LinkedHashMapKeyIterator$(t1, t1._modifications);
  },
  forEach$1: function(_, f) {
    var t1, cell, modifications;
    t1 = this._map;
    cell = t1._first;
    modifications = t1._modifications;
    for (; cell != null;) {
      f.call$1(cell._key);
      if (modifications !== t1._modifications)
        throw $.wrapException(new $.ConcurrentModificationError(t1));
      cell = cell._next;
    }
  },
  $asIterableBase: null,
  $asIterable: null
},

LinkedHashMapKeyIterator: {"": "Object;_map,_modifications,_cell,_liblib2$_current",
  get$current: function() {
    return this._liblib2$_current;
  },
  moveNext$0: function() {
    var t1 = this._map;
    if (this._modifications !== t1._modifications)
      throw $.wrapException(new $.ConcurrentModificationError(t1));
    else {
      t1 = this._cell;
      if (t1 == null) {
        this._liblib2$_current = null;
        return false;
      } else {
        this._liblib2$_current = t1._key;
        this._cell = this._cell._next;
        return true;
      }
    }
  },
  LinkedHashMapKeyIterator$2: function(_map, _modifications) {
    this._cell = this._map._first;
  }
},

HashMap: {"": "Object;_length,_strings,_nums,_rest,_keys",
  get$length: function(_) {
    return this._length;
  },
  get$isEmpty: function(_) {
    return this._length === 0;
  },
  get$keys: function(_) {
    return $.HashMapKeyIterable$(this, $.getRuntimeTypeArgument(this, "HashMap", 0));
  },
  get$values: function(_) {
    var t1 = this.get$keys(this);
    return t1.map$1(t1, new $.HashMap_values_closure(this));
  },
  containsKey$1: function(_, key) {
    var strings, nums, rest;
    if ($.HashMap__isStringKey(key)) {
      strings = this._strings;
      return strings == null ? false : $.HashMap__hasTableEntry(strings, key);
    } else if ($.HashMap__isNumericKey(key)) {
      nums = this._nums;
      return nums == null ? false : $.HashMap__hasTableEntry(nums, key);
    } else {
      rest = this._rest;
      if (rest == null)
        return false;
      return $.HashMap__findBucketIndex($.HashMap__getBucket(rest, key), key) >= 0;
    }
  },
  $index: function(_, key) {
    var strings, t1, entry, nums, rest, bucket, index;
    if (typeof key === "string" && key !== "__proto__") {
      strings = this._strings;
      if (strings == null)
        t1 = null;
      else {
        entry = strings[key];
        t1 = entry === strings ? null : entry;
      }
      return t1;
    } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
      nums = this._nums;
      if (nums == null)
        t1 = null;
      else {
        entry = nums[key];
        t1 = entry === nums ? null : entry;
      }
      return t1;
    } else {
      rest = this._rest;
      if (rest == null)
        return;
      bucket = rest[$.HashMap__computeHashCode(key)];
      index = $.HashMap__findBucketIndex(bucket, key);
      return index < 0 ? null : bucket[index + 1];
    }
  },
  $indexSet: function(_, key, value) {
    var strings, table, nums, rest, hash, bucket, t1, index;
    if (typeof key === "string" && key !== "__proto__") {
      strings = this._strings;
      if (strings == null) {
        table = Object.create(null);
        $.HashMap__setTableEntry(table, "<non-identifier-key>", table);
        $.HashMap__deleteTableEntry(table, "<non-identifier-key>");
        this._strings = table;
        strings = table;
      }
      if (!$.HashMap__hasTableEntry(strings, key)) {
        this._length = this._length + 1;
        this._keys = null;
      }
      $.HashMap__setTableEntry(strings, key, value);
    } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
      nums = this._nums;
      if (nums == null) {
        table = Object.create(null);
        $.HashMap__setTableEntry(table, "<non-identifier-key>", table);
        $.HashMap__deleteTableEntry(table, "<non-identifier-key>");
        this._nums = table;
        nums = table;
      }
      if (!$.HashMap__hasTableEntry(nums, key)) {
        this._length = this._length + 1;
        this._keys = null;
      }
      $.HashMap__setTableEntry(nums, key, value);
    } else {
      rest = this._rest;
      if (rest == null) {
        table = Object.create(null);
        $.HashMap__setTableEntry(table, "<non-identifier-key>", table);
        $.HashMap__deleteTableEntry(table, "<non-identifier-key>");
        this._rest = table;
        rest = table;
      }
      hash = $.get$hashCode$(key) & 0x3ffffff;
      bucket = rest[hash];
      if (bucket == null) {
        t1 = [key, value];
        if (t1 == null)
          rest[hash] = rest;
        else
          rest[hash] = t1;
        this._length = this._length + 1;
        this._keys = null;
      } else {
        index = $.HashMap__findBucketIndex(bucket, key);
        if (index >= 0)
          bucket[index + 1] = value;
        else {
          bucket.push(key, value);
          this._length = this._length + 1;
          this._keys = null;
        }
      }
    }
  },
  remove$1: function(_, key) {
    var rest, bucket, index;
    if ($.HashMap__isStringKey(key))
      return this._removeHashTableEntry$2(this._strings, key);
    else if ($.HashMap__isNumericKey(key))
      return this._removeHashTableEntry$2(this._nums, key);
    else {
      rest = this._rest;
      if (rest == null)
        return;
      bucket = $.HashMap__getBucket(rest, key);
      index = $.HashMap__findBucketIndex(bucket, key);
      if (index < 0)
        return;
      this._length = this._length - 1;
      this._keys = null;
      return bucket.splice(index, 2)[1];
    }
  },
  get$remove: function(_receiver) {
    return new $.BoundClosure$i1(this, "remove$1", _receiver);
  },
  forEach$1: function(_, action) {
    var keys, $length, i, key;
    keys = this._computeKeys$0();
    for ($length = keys.length, i = 0; i < $length; ++i) {
      key = keys[i];
      action.call$2(key, this.$index(this, key));
      if (keys !== this._keys)
        throw $.wrapException(new $.ConcurrentModificationError(this));
    }
  },
  toString$0: function(_) {
    return $.Maps_mapToString(this);
  },
  _computeKeys$0: function() {
    var t1, result, strings, names, entries, index, i, nums, rest, bucket, $length, i0;
    t1 = this._keys;
    if (t1 != null)
      return t1;
    result = $.List_List(this._length, null);
    strings = this._strings;
    if (strings != null) {
      names = Object.getOwnPropertyNames(strings);
      entries = names.length;
      for (index = 0, i = 0; i < entries; ++i) {
        result[index] = names[i];
        ++index;
      }
    } else
      index = 0;
    nums = this._nums;
    if (nums != null) {
      names = Object.getOwnPropertyNames(nums);
      entries = names.length;
      for (i = 0; i < entries; ++i) {
        result[index] = +names[i];
        ++index;
      }
    }
    rest = this._rest;
    if (rest != null) {
      names = Object.getOwnPropertyNames(rest);
      entries = names.length;
      for (i = 0; i < entries; ++i) {
        bucket = rest[names[i]];
        $length = bucket.length;
        for (i0 = 0; i0 < $length; i0 += 2) {
          result[index] = bucket[i0];
          ++index;
        }
      }
    }
    this._keys = result;
    return result;
  },
  _removeHashTableEntry$2: function(table, key) {
    var value;
    if (table != null && $.HashMap__hasTableEntry(table, key)) {
      value = $.HashMap__getTableEntry(table, key);
      $.HashMap__deleteTableEntry(table, key);
      this._length = this._length - 1;
      this._keys = null;
      return value;
    } else
      return;
  },
  $isMap: true,
  $asMap: null
},

IterableBase: {"": "Object;",
  map$1: function(_, f) {
    return $.MappedIterable$(this, f, $.getRuntimeTypeArgument(this, "IterableBase", 0), null);
  },
  where$1: function(_, f) {
    return $.WhereIterable$(this, f, $.getRuntimeTypeArgument(this, "IterableBase", 0));
  },
  forEach$1: function(_, f) {
    var t1;
    for (t1 = this.get$iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
  },
  toList$1$growable: function(_, growable) {
    return $.List_List$from(this, growable, $.getRuntimeTypeArgument(this, "IterableBase", 0));
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$length: function(_) {
    var it, count;
    it = this.get$iterator(this);
    for (count = 0; it.moveNext$0() === true;)
      ++count;
    return count;
  },
  get$isEmpty: function(_) {
    return this.get$iterator(this).moveNext$0() !== true;
  },
  firstWhere$2$orElse: function(_, test, orElse) {
    var t1, element;
    for (t1 = this.get$iterator(this); t1.moveNext$0() === true;) {
      element = t1.get$current();
      if (test.call$1(element) === true)
        return element;
    }
    if (orElse != null)
      return orElse.call$0();
    throw $.wrapException($.StateError$("No matching element"));
  },
  firstWhere$1: function($receiver, test) {
    return this.firstWhere$2$orElse($receiver, test, null);
  },
  elementAt$1: function(_, index) {
    var t1, remaining, element;
    if (typeof index !== "number")
      return this.elementAt$1$bailout(1, index);
    if (typeof index !== "number" || Math.floor(index) !== index || index < 0)
      throw $.wrapException(new $.RangeError("value " + $.S(index)));
    for (t1 = this.get$iterator(this), remaining = index; t1.moveNext$0() === true;) {
      element = t1.get$current();
      if (remaining === 0)
        return element;
      --remaining;
    }
    throw $.wrapException(new $.RangeError("value " + $.S(index)));
  },
  elementAt$1$bailout: function(state0, index) {
    var t1, remaining, element, t2;
    if (typeof index !== "number" || Math.floor(index) !== index || index < 0)
      throw $.wrapException(new $.RangeError("value " + $.S(index)));
    for (t1 = this.get$iterator(this), remaining = index; t1.moveNext$0() === true;) {
      element = t1.get$current();
      t2 = $.getInterceptor(remaining);
      if (t2.$eq(remaining, 0))
        return element;
      remaining = t2.$sub(remaining, 1);
    }
    throw $.wrapException(new $.RangeError("value " + $.S(index)));
  },
  $isIterable: true,
  $asIterable: null
},

LinkedHashMap: {"": "Object;_length,_strings,_nums,_rest,_first,_last,_modifications",
  $index: function(_, key) {
    var strings, cell, nums, rest, bucket, index;
    if (typeof key === "string" && key !== "__proto__") {
      strings = this._strings;
      if (strings == null)
        return;
      cell = strings[key];
      return cell == null ? null : cell.get$_value();
    } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
      nums = this._nums;
      if (nums == null)
        return;
      cell = nums[key];
      return cell == null ? null : cell.get$_value();
    } else {
      rest = this._rest;
      if (rest == null)
        return;
      bucket = rest[$.LinkedHashMap__computeHashCode(key)];
      index = $.LinkedHashMap__findBucketIndex(bucket, key);
      if (index < 0)
        return;
      return bucket[index].get$_value();
    }
  },
  $indexSet: function(_, key, value) {
    var strings, table, nums, rest, hash, bucket, index;
    if (typeof key === "string" && key !== "__proto__") {
      strings = this._strings;
      if (strings == null) {
        table = Object.create(null);
        $.LinkedHashMap__setTableEntry(table, "<non-identifier-key>", table);
        $.LinkedHashMap__deleteTableEntry(table, "<non-identifier-key>");
        this._strings = table;
        strings = table;
      }
      this._addHashTableEntry$3(strings, key, value);
    } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
      nums = this._nums;
      if (nums == null) {
        table = Object.create(null);
        $.LinkedHashMap__setTableEntry(table, "<non-identifier-key>", table);
        $.LinkedHashMap__deleteTableEntry(table, "<non-identifier-key>");
        this._nums = table;
        nums = table;
      }
      this._addHashTableEntry$3(nums, key, value);
    } else {
      rest = this._rest;
      if (rest == null) {
        table = Object.create(null);
        $.LinkedHashMap__setTableEntry(table, "<non-identifier-key>", table);
        $.LinkedHashMap__deleteTableEntry(table, "<non-identifier-key>");
        this._rest = table;
        rest = table;
      }
      hash = $.get$hashCode$(key) & 0x3ffffff;
      bucket = rest[hash];
      if (bucket == null)
        rest[hash] = [this._newLinkedCell$2(key, value)];
      else {
        index = $.LinkedHashMap__findBucketIndex(bucket, key);
        if (index >= 0)
          bucket[index].set$_value(value);
        else
          bucket.push(this._newLinkedCell$2(key, value));
      }
    }
  },
  forEach$1: function(_, action) {
    var cell, modifications;
    cell = this._first;
    modifications = this._modifications;
    for (; cell != null;) {
      action.call$2(cell._key, cell._value);
      if (modifications !== this._modifications)
        throw $.wrapException(new $.ConcurrentModificationError(this));
      cell = cell._next;
    }
  },
  get$keys: function(_) {
    return $.LinkedHashMapKeyIterable$(this, $.getRuntimeTypeArgument(this, "LinkedHashMap", 0));
  },
  get$values: function(_) {
    var t1 = this.get$keys(this);
    return t1.map$1(t1, new $.LinkedHashMap_values_closure(this));
  },
  get$length: function(_) {
    return this._length;
  },
  get$isEmpty: function(_) {
    return this._length === 0;
  },
  toString$0: function(_) {
    return $.Maps_mapToString(this);
  },
  _addHashTableEntry$3: function(table, key, value) {
    var cell = $.LinkedHashMap__getTableEntry(table, key);
    if (cell == null)
      $.LinkedHashMap__setTableEntry(table, key, this._newLinkedCell$2(key, value));
    else
      cell.set$_value(value);
  },
  _modified$0: function() {
    this._modifications = this._modifications + 1 & 67108863;
  },
  _newLinkedCell$2: function(key, value) {
    var cell, last;
    cell = $.LinkedHashMapCell$(key, value);
    if (this._first == null) {
      this._last = cell;
      this._first = cell;
    } else {
      last = this._last;
      cell._previous = last;
      last.set$_next(cell);
      this._last = cell;
    }
    this._length = this._length + 1;
    this._modified$0();
    return cell;
  },
  $isMap: true,
  $asMap: null
},

ListBase: {"": "Object+ListMixin;", $isList: true, $asList: null, $isIterable: true, $asIterable: null},

ListMixin: {"": "Object;",
  get$iterator: function(receiver) {
    return $.ListIterator$(receiver);
  },
  elementAt$1: function(receiver, index) {
    return this.$index(receiver, index);
  },
  forEach$1: function(receiver, action) {
    var $length, i;
    if (typeof receiver !== "string" && (typeof receiver !== "object" || receiver === null || receiver.constructor !== Array && !$.isJsIndexable(receiver, receiver[$.dispatchPropertyName])))
      return this.forEach$1$bailout(1, action, receiver);
    $length = receiver.length;
    for (i = 0; i < $length; ++i) {
      if (i >= receiver.length)
        throw $.ioore(i);
      action.call$1(receiver[i]);
      if ($length !== receiver.length)
        throw $.wrapException(new $.ConcurrentModificationError(receiver));
    }
  },
  forEach$1$bailout: function(state0, action, receiver) {
    var $length, i;
    $length = this.get$length(receiver);
    if (typeof $length !== "number")
      throw $.iae($length);
    i = 0;
    for (; i < $length; ++i) {
      action.call$1(this.$index(receiver, i));
      if ($length !== this.get$length(receiver))
        throw $.wrapException(new $.ConcurrentModificationError(receiver));
    }
  },
  get$isEmpty: function(receiver) {
    var t1 = this.get$length(receiver);
    if (typeof t1 !== "number")
      return this.get$isEmpty$bailout(1, t1);
    return t1 === 0;
  },
  get$isEmpty$bailout: function(state0, t1) {
    return $.$eq(t1, 0);
  },
  get$first: function(receiver) {
    var t1;
    if (typeof receiver !== "string" && (typeof receiver !== "object" || receiver === null || receiver.constructor !== Array && !$.isJsIndexable(receiver, receiver[$.dispatchPropertyName])))
      return this.get$first$bailout(1, receiver);
    t1 = receiver.length;
    if (t1 === 0)
      throw $.wrapException(new $.StateError("No elements"));
    if (0 >= t1)
      throw $.ioore(0);
    return receiver[0];
  },
  get$first$bailout: function(state0, receiver) {
    var t1 = this.get$length(receiver);
    if (typeof t1 !== "number")
      throw t1.$eq();
    if ($.$eq(t1, 0))
      throw $.wrapException(new $.StateError("No elements"));
    return this.$index(receiver, 0);
  },
  get$last: function(receiver) {
    if ($.$eq(this.get$length(receiver), 0))
      throw $.wrapException($.StateError$("No elements"));
    return this.$index(receiver, $.$sub$n(this.get$length(receiver), 1));
  },
  firstWhere$2$orElse: function(receiver, test, orElse) {
    var $length, i, element;
    if (typeof receiver !== "string" && (typeof receiver !== "object" || receiver === null || receiver.constructor !== Array && !$.isJsIndexable(receiver, receiver[$.dispatchPropertyName])))
      return this.firstWhere$2$orElse$bailout(1, test, orElse, receiver);
    $length = receiver.length;
    for (i = 0; i < $length; ++i) {
      if (i >= receiver.length)
        throw $.ioore(i);
      element = receiver[i];
      if (test.call$1(element) === true)
        return element;
      if ($length !== receiver.length)
        throw $.wrapException(new $.ConcurrentModificationError(receiver));
    }
    if (orElse != null)
      return orElse.call$0();
    throw $.wrapException($.StateError$("No matching element"));
  },
  firstWhere$2$orElse$bailout: function(state0, test, orElse, receiver) {
    var $length, i, element;
    $length = this.get$length(receiver);
    if (typeof $length !== "number")
      throw $.iae($length);
    i = 0;
    for (; i < $length; ++i) {
      element = this.$index(receiver, i);
      if (test.call$1(element) === true)
        return element;
      if ($length !== this.get$length(receiver))
        throw $.wrapException(new $.ConcurrentModificationError(receiver));
    }
    if (orElse != null)
      return orElse.call$0();
    throw $.wrapException($.StateError$("No matching element"));
  },
  firstWhere$1: function($receiver, test) {
    return this.firstWhere$2$orElse($receiver, test, null);
  },
  where$1: function(receiver, test) {
    return $.WhereIterable$(receiver, test, $.getRuntimeTypeArgument(receiver, "ListMixin", 0));
  },
  toList$1$growable: function(receiver, growable) {
    var result, t1, t2, i, t3;
    if (typeof receiver !== "string" && (typeof receiver !== "object" || receiver === null || receiver.constructor !== Array && !$.isJsIndexable(receiver, receiver[$.dispatchPropertyName])))
      return this.toList$1$growable$bailout(1, growable, receiver);
    if (growable) {
      result = $.List_List(null, $.getRuntimeTypeArgument(receiver, "ListMixin", 0));
      $.setRuntimeTypeInfo(result, [$.getRuntimeTypeArgument(receiver, "ListMixin", 0)]);
      $.JSArray_methods.set$length(result, receiver.length);
    } else {
      result = $.List_List(receiver.length, $.getRuntimeTypeArgument(receiver, "ListMixin", 0));
      $.setRuntimeTypeInfo(result, [$.getRuntimeTypeArgument(receiver, "ListMixin", 0)]);
    }
    for (t1 = receiver.length, t2 = result.length, i = 0; i < t1; ++i) {
      t3 = receiver[i];
      if (i >= t2)
        throw $.ioore(i);
      result[i] = t3;
    }
    return result;
  },
  toList$1$growable$bailout: function(state0, growable, receiver) {
    var result, i, t1;
    if (growable) {
      result = $.List_List(null, $.getRuntimeTypeArgument(receiver, "ListMixin", 0));
      $.setRuntimeTypeInfo(result, [$.getRuntimeTypeArgument(receiver, "ListMixin", 0)]);
      $.JSArray_methods.set$length(result, this.get$length(receiver));
    } else {
      result = $.List_List(this.get$length(receiver), $.getRuntimeTypeArgument(receiver, "ListMixin", 0));
      $.setRuntimeTypeInfo(result, [$.getRuntimeTypeArgument(receiver, "ListMixin", 0)]);
    }
    i = 0;
    while (true) {
      t1 = this.get$length(receiver);
      if (typeof t1 !== "number")
        throw $.iae(t1);
      if (!(i < t1))
        break;
      t1 = this.$index(receiver, i);
      if (i >= result.length)
        throw $.ioore(i);
      result[i] = t1;
      ++i;
    }
    return result;
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  add$1: function(receiver, element) {
    var t1 = this.get$length(receiver);
    if (typeof t1 !== "number")
      return this.add$1$bailout(1, element, receiver, t1);
    this.set$length(receiver, t1 + 1);
    this.$indexSet(receiver, t1, element);
  },
  add$1$bailout: function(state0, element, receiver, t1) {
    this.set$length(receiver, $.$add$ns(t1, 1));
    this.$indexSet(receiver, t1, element);
  },
  removeLast$0: function(receiver) {
    var result;
    if ($.$eq(this.get$length(receiver), 0))
      throw $.wrapException($.StateError$("No elements"));
    result = this.$index(receiver, $.$sub$n(this.get$length(receiver), 1));
    this.set$length(receiver, $.$sub$n(this.get$length(receiver), 1));
    return result;
  },
  indexOf$2: function(receiver, element, startIndex) {
    var t1, i, t2;
    if (typeof receiver !== "string" && (typeof receiver !== "object" || receiver === null || receiver.constructor !== Array && !$.isJsIndexable(receiver, receiver[$.dispatchPropertyName])))
      return this.indexOf$2$bailout(1, element, startIndex, receiver);
    t1 = receiver.length;
    if (startIndex >= t1)
      return -1;
    if (startIndex < 0)
      startIndex = 0;
    for (i = startIndex; i < t1; ++i) {
      if (i < 0)
        throw $.ioore(i);
      t2 = receiver[i];
      if (typeof t2 !== "string")
        return this.indexOf$2$bailout(4, element, 0, receiver, t2, i);
      if (t2 === element)
        return i;
    }
    return -1;
  },
  indexOf$2$bailout: function(state0, element, startIndex, receiver, t1, i) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = this.get$length(receiver);
      case 2:
        state0 = 0;
        if (t1 == null)
          throw $.iae(t1);
        if (startIndex >= t1)
          return -1;
        if (startIndex < 0)
          startIndex = 0;
        i = startIndex;
      default:
        L0:
          while (true)
            switch (state0) {
              case 0:
                t1 = this.get$length(receiver);
              case 3:
                state0 = 0;
                if (t1 == null)
                  throw $.iae(t1);
                if (!(i < t1))
                  break L0;
                t1 = this.$index(receiver, i);
              case 4:
                state0 = 0;
                if ($.$eq(t1, element))
                  return i;
                ++i;
            }
        return -1;
    }
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  toString$0: function(receiver) {
    return $.ToString_iterableToString(receiver);
  },
  $isList: true,
  $asList: null,
  $isIterable: true,
  $asIterable: null
},

ListQueue: {"": "IterableBase;_table,_head,_tail,_modificationCount",
  get$iterator: function(_) {
    return $._ListQueueIterator$(this);
  },
  forEach$1: function(_, action) {
    var modificationCount, i, t1;
    modificationCount = this._modificationCount;
    for (i = this._head; i !== this._tail; i = (i + 1 & this._table.length - 1) >>> 0) {
      t1 = this._table;
      if (i < 0 || i >= t1.length)
        throw $.ioore(i);
      action.call$1(t1[i]);
      if (modificationCount !== this._modificationCount)
        $.throwExpression(new $.ConcurrentModificationError(this));
    }
  },
  get$isEmpty: function(_) {
    return this._head === this._tail;
  },
  get$length: function(_) {
    return (this._tail - this._head & this._table.length - 1) >>> 0;
  },
  add$1: function(_, element) {
    this._add$1(this, element);
  },
  toString$0: function(_) {
    return $.ToString_iterableToString(this);
  },
  addLast$1: function(element) {
    this._add$1(this, element);
  },
  removeFirst$0: function() {
    var t1, t2, t3, result;
    if (this._head === this._tail)
      throw $.wrapException(new $.StateError("No elements"));
    this._modificationCount = this._modificationCount + 1;
    t1 = this._table;
    t2 = this._head;
    t3 = t1.length;
    if (t2 < 0 || t2 >= t3)
      throw $.ioore(t2);
    result = t1[t2];
    this._head = (t2 + 1 & t3 - 1) >>> 0;
    return result;
  },
  removeLast$0: function(_) {
    var t1, t2;
    if (this._head === this._tail)
      throw $.wrapException($.StateError$("No elements"));
    this._modificationCount = this._modificationCount + 1;
    this._tail = (this._tail - 1 & this._table.length - 1) >>> 0;
    t1 = this._table;
    t2 = this._tail;
    if (t2 < 0 || t2 >= t1.length)
      throw $.ioore(t2);
    return t1[t2];
  },
  _add$1: function(_, element) {
    var t1, t2, t3;
    t1 = this._table;
    t2 = this._tail;
    t3 = t1.length;
    if (t2 < 0 || t2 >= t3)
      throw $.ioore(t2);
    t1[t2] = element;
    this._tail = (t2 + 1 & t3 - 1) >>> 0;
    if (this._head === this._tail)
      this._grow$0();
    this._modificationCount = this._modificationCount + 1;
  },
  _grow$0: function() {
    var newTable, t1, t2, split;
    newTable = $.List_List(this._table.length * 2, $.getRuntimeTypeArgument(this, "ListQueue", 0));
    $.setRuntimeTypeInfo(newTable, [$.getRuntimeTypeArgument(this, "ListQueue", 0)]);
    t1 = this._table;
    t2 = this._head;
    split = t1.length - t2;
    $.JSArray_methods.setRange$4(newTable, 0, split, t1, t2);
    $.JSArray_methods.setRange$4(newTable, split, split + this._head, this._table, 0);
    this._head = 0;
    this._tail = this._table.length;
    this._table = newTable;
  },
  ListQueue$1: function(initialCapacity, E) {
    var t1;
    if (true)
      initialCapacity = 8;
    else if (!$.ListQueue__isPowerOf2(initialCapacity))
      initialCapacity = $.ListQueue__nextPowerOf2(initialCapacity);
    t1 = $.List_List(initialCapacity, E);
    $.setRuntimeTypeInfo(t1, [E]);
    this._table = t1;
  },
  $asIterableBase: null,
  $asIterable: null,
  $isIterable: true
},

_ListQueueIterator: {"": "Object;_queue,_end,_modificationCount,_liblib2$_position,_liblib2$_current",
  get$current: function() {
    return this._liblib2$_current;
  },
  moveNext$0: function() {
    var t1, t2, t3;
    t1 = this._queue;
    if (this._modificationCount !== t1._modificationCount)
      $.throwExpression($.ConcurrentModificationError$(t1));
    t2 = this._liblib2$_position;
    if (t2 === this._end) {
      this._liblib2$_current = null;
      return false;
    }
    t3 = t1._table;
    if (t2 < 0 || t2 >= t3.length)
      throw $.ioore(t2);
    this._liblib2$_current = t3[t2];
    this._liblib2$_position = (this._liblib2$_position + 1 & t1._table.length - 1) >>> 0;
    return true;
  }
},

HashMap__isStringKey: function(key) {
  return typeof key === "string" && key !== "__proto__";
},

HashMap__isNumericKey: function(key) {
  return typeof key === "number" && (key & 0x3ffffff) === key;
},

HashMap__computeHashCode: function(key) {
  return $.get$hashCode$(key) & 0x3ffffff;
},

HashMap__hasTableEntry: function(table, key) {
  return table[key] != null;
},

HashMap__getTableEntry: function(table, key) {
  var entry = table[key];
  return entry === table ? null : entry;
},

HashMap__setTableEntry: function(table, key, value) {
  if (value == null)
    table[key] = table;
  else
    table[key] = value;
},

HashMap__deleteTableEntry: function(table, key) {
  delete table[key];
},

HashMap__getBucket: function(table, key) {
  return table[$.HashMap__computeHashCode(key)];
},

HashMap__findBucketIndex: function(bucket, key) {
  var $length, i;
  if (bucket == null)
    return -1;
  $length = bucket.length;
  for (i = 0; i < $length; i += 2)
    if ($.$eq(bucket[i], key))
      return i;
  return -1;
},

HashMapKeyIterable$: function(_map, E) {
  var t1 = new $.HashMapKeyIterable(_map);
  $.setRuntimeTypeInfo(t1, [E]);
  return t1;
},

HashMapKeyIterator$: function(_map, _keys) {
  return new $.HashMapKeyIterator(_map, _keys, 0, null);
},

LinkedHashMap__computeHashCode: function(key) {
  return $.get$hashCode$(key) & 0x3ffffff;
},

LinkedHashMap__getTableEntry: function(table, key) {
  return table[key];
},

LinkedHashMap__setTableEntry: function(table, key, value) {
  table[key] = value;
},

LinkedHashMap__deleteTableEntry: function(table, key) {
  delete table[key];
},

LinkedHashMap__findBucketIndex: function(bucket, key) {
  var $length, i;
  if (bucket == null)
    return -1;
  $length = bucket.length;
  for (i = 0; i < $length; ++i)
    if ($.$eq(bucket[i].get$_key(), key))
      return i;
  return -1;
},

LinkedHashMapCell$: function(_key, _value) {
  return new $.LinkedHashMapCell(_key, _value, null, null);
},

LinkedHashMapKeyIterable$: function(_map, E) {
  var t1 = new $.LinkedHashMapKeyIterable(_map);
  $.setRuntimeTypeInfo(t1, [E]);
  return t1;
},

LinkedHashMapKeyIterator$: function(_map, _modifications) {
  var t1 = new $.LinkedHashMapKeyIterator(_map, _modifications, null, null);
  t1.LinkedHashMapKeyIterator$2(_map, _modifications);
  return t1;
},

HashMap$: function(K, V) {
  var t1 = new $.HashMap(0, null, null, null, null);
  $.setRuntimeTypeInfo(t1, [K, V]);
  return t1;
},

LinkedHashMap$: function(K, V) {
  var t1 = new $.LinkedHashMap(0, null, null, null, null, null, 0);
  $.setRuntimeTypeInfo(t1, [K, V]);
  return t1;
},

Maps_mapToString: function(m) {
  return $.ToString_mapToString(m);
},

Queue_Queue: function(E) {
  return $.ListQueue$(null, E);
},

ListQueue$: function(initialCapacity, E) {
  var t1 = new $.ListQueue(null, 0, 0, 0);
  $.setRuntimeTypeInfo(t1, [E]);
  t1.ListQueue$1(initialCapacity, E);
  return t1;
},

ListQueue__isPowerOf2: function(number) {
  var t1 = $.$sub$n(number, 1);
  if (typeof number !== "number")
    throw number.$and();
  if (typeof t1 !== "number")
    throw $.iae(t1);
  return (number & t1) >>> 0 === 0;
},

ListQueue__nextPowerOf2: function(number) {
  var nextNumber;
  number = $.JSNull_methods.$shl(number, 2) - 1;
  for (; true; number = nextNumber) {
    nextNumber = (number & number - 1) >>> 0;
    if (nextNumber === 0)
      return number;
  }
},

_ListQueueIterator$: function(queue) {
  return new $._ListQueueIterator(queue, queue._tail, queue._modificationCount, queue._head, null);
}}],
["dart.core", "dart:core", , {
NoSuchMethodError_toString_closure: {"": "Closure;box_0",
  call$2: function(key, value) {
    var t1, t2;
    t1 = this.box_0;
    if ($.$gt$n(t1.i_1, 0)) {
      t2 = t1.sb_0;
      t2.write$1(t2, ", ");
    }
    t2 = t1.sb_0;
    t2.write$1(t2, key);
    t2 = t1.sb_0;
    t2.write$1(t2, ": ");
    t2 = t1.sb_0;
    t2.write$1(t2, $.Error_safeToString(value));
    t1.i_1 = $.$add$ns(t1.i_1, 1);
  }
},

DateTime: {"": "Object;millisecondsSinceEpoch,isUtc",
  $eq: function(_, other) {
    if (other == null)
      return false;
    if (typeof other !== "object" || other === null || !$.getInterceptor(other).$isDateTime)
      return false;
    return $.$eq(this.millisecondsSinceEpoch, other.millisecondsSinceEpoch) && $.$eq(this.isUtc, other.isUtc);
  },
  get$hashCode: function(_) {
    return this.millisecondsSinceEpoch;
  },
  toString$0: function(_) {
    var t1, y, m, d, h, min, sec, ms;
    t1 = new $.DateTime_toString_twoDigits();
    y = new $.DateTime_toString_fourDigits().call$1(this.get$year());
    m = t1.call$1(this.get$month());
    d = t1.call$1(this.get$day());
    h = t1.call$1(this.get$hour());
    min = t1.call$1(this.get$minute());
    sec = t1.call$1(this.get$second());
    ms = new $.DateTime_toString_threeDigits().call$1(this.get$millisecond());
    if (this.isUtc === true)
      return $.S(y) + "-" + $.S(m) + "-" + $.S(d) + " " + $.S(h) + ":" + $.S(min) + ":" + $.S(sec) + "." + $.S(ms) + "Z";
    else
      return $.S(y) + "-" + $.S(m) + "-" + $.S(d) + " " + $.S(h) + ":" + $.S(min) + ":" + $.S(sec) + "." + $.S(ms);
  },
  add$1: function(_, duration) {
    var ms, t1, t2, t3;
    ms = this.millisecondsSinceEpoch;
    if (typeof ms !== "number")
      return this.add$1$bailout(1, duration, ms);
    t1 = $.JSNumber_methods.$add(ms, duration.get$inMilliseconds());
    t2 = this.isUtc;
    t3 = new $.DateTime(t1, t2);
    t3.DateTime$fromMillisecondsSinceEpoch$2$isUtc(t1, t2);
    return t3;
  },
  add$1$bailout: function(state0, duration, ms) {
    var t1, t2, t3;
    t1 = $.$add$ns(ms, duration.get$inMilliseconds());
    t2 = this.isUtc;
    t3 = new $.DateTime(t1, t2);
    t3.DateTime$fromMillisecondsSinceEpoch$2$isUtc(t1, t2);
    return t3;
  },
  difference$1: function(other) {
    return $.Duration$(0, 0, 0, $.$sub$n(this.millisecondsSinceEpoch, other.millisecondsSinceEpoch), 0, 0);
  },
  get$year: function() {
    return $.Primitives_getYear(this);
  },
  get$month: function() {
    return $.Primitives_getMonth(this);
  },
  get$day: function() {
    return $.Primitives_getDay(this);
  },
  get$hour: function() {
    return $.Primitives_getHours(this);
  },
  get$minute: function() {
    return $.Primitives_getMinutes(this);
  },
  get$second: function() {
    return $.Primitives_getSeconds(this);
  },
  get$millisecond: function() {
    return $.Primitives_getMilliseconds(this);
  },
  DateTime$_now$0: function() {
    $.Primitives_lazyAsJsDate(this);
  },
  DateTime$fromMillisecondsSinceEpoch$2$isUtc: function(millisecondsSinceEpoch, isUtc) {
    if ($.abs$0$n(millisecondsSinceEpoch) > 8640000000000000)
      throw $.wrapException($.ArgumentError$(millisecondsSinceEpoch));
    if (isUtc == null)
      throw $.wrapException($.ArgumentError$(isUtc));
  },
  $isDateTime: true
},

DateTime_toString_fourDigits: {"": "Closure;",
  call$1: function(n) {
    var t1, absN, sign;
    t1 = $.getInterceptor$n(n);
    absN = t1.abs$0(n);
    sign = t1.$lt(n, 0) ? "-" : "";
    if (absN >= 1000)
      return $.S(n);
    if (absN >= 100)
      return sign + "0" + $.S(absN);
    if (absN >= 10)
      return sign + "00" + $.S(absN);
    return sign + "000" + $.S(absN);
  }
},

DateTime_toString_threeDigits: {"": "Closure;",
  call$1: function(n) {
    var t1 = $.getInterceptor$n(n);
    if (t1.$ge(n, 100))
      return $.S(n);
    if (t1.$ge(n, 10))
      return "0" + $.S(n);
    return "00" + $.S(n);
  }
},

DateTime_toString_twoDigits: {"": "Closure;",
  call$1: function(n) {
    if ($.$ge$n(n, 10))
      return $.S(n);
    return "0" + $.S(n);
  }
},

Duration: {"": "Object;_duration<",
  $add: function(_, other) {
    return $.Duration$(0, 0, this._duration + other.get$_duration(), 0, 0, 0);
  },
  $sub: function(_, other) {
    return $.Duration$(0, 0, this._duration - other.get$_duration(), 0, 0, 0);
  },
  $mul: function(_, factor) {
    if (typeof factor !== "number")
      throw $.iae(factor);
    return $.Duration$(0, 0, $.JSNumber_methods.round$0(this._duration * factor), 0, 0, 0);
  },
  $lt: function(_, other) {
    return this._duration < other.get$_duration();
  },
  $gt: function(_, other) {
    return this._duration > other.get$_duration();
  },
  $le: function(_, other) {
    var t1 = other.get$_duration();
    if (typeof t1 !== "number")
      throw $.iae(t1);
    return $.JSNumber_methods.$le(this._duration, t1);
  },
  $ge: function(_, other) {
    return this._duration >= other.get$_duration();
  },
  get$inHours: function() {
    return $.JSNumber_methods.$tdiv(this._duration, 3600000000);
  },
  get$inMinutes: function() {
    return $.JSNumber_methods.$tdiv(this._duration, 60000000);
  },
  get$inSeconds: function() {
    return $.JSNumber_methods.$tdiv(this._duration, 1000000);
  },
  get$inMilliseconds: function() {
    return $.JSNumber_methods.$tdiv(this._duration, 1000);
  },
  get$inMicroseconds: function() {
    return this._duration;
  },
  $eq: function(_, other) {
    if (other == null)
      return false;
    if (typeof other !== "object" || other === null || !$.getInterceptor(other).$isDuration)
      return false;
    return this._duration === other._duration;
  },
  get$hashCode: function(_) {
    return $.JSNumber_methods.get$hashCode(this._duration);
  },
  toString$0: function(_) {
    var t1, twoDigitMinutes, twoDigitSeconds, sixDigitUs;
    t1 = new $.Duration_toString_twoDigits();
    if (this.get$inMicroseconds() < 0)
      return "-" + $.S($.Duration$(0, 0, -this.get$inMicroseconds(), 0, 0, 0));
    twoDigitMinutes = t1.call$1($.JSNumber_methods.remainder$1(this.get$inMinutes(), 60));
    twoDigitSeconds = t1.call$1($.JSNumber_methods.remainder$1(this.get$inSeconds(), 60));
    sixDigitUs = new $.Duration_toString_sixDigits().call$1($.JSNumber_methods.remainder$1(this.get$inMicroseconds(), 1000000));
    return $.S(this.get$inHours()) + ":" + $.S(twoDigitMinutes) + ":" + $.S(twoDigitSeconds) + "." + $.S(sixDigitUs);
  },
  $isDuration: true
},

Duration_toString_sixDigits: {"": "Closure;",
  call$1: function(n) {
    var t1 = $.getInterceptor$n(n);
    if (t1.$ge(n, 100000))
      return $.S(n);
    if (t1.$ge(n, 10000))
      return "0" + $.S(n);
    if (t1.$ge(n, 1000))
      return "00" + $.S(n);
    if (t1.$ge(n, 100))
      return "000" + $.S(n);
    if (t1.$gt(n, 10))
      return "0000" + $.S(n);
    return "00000" + $.S(n);
  }
},

Duration_toString_twoDigits: {"": "Closure;",
  call$1: function(n) {
    if ($.$ge$n(n, 10))
      return $.S(n);
    return "0" + $.S(n);
  }
},

Error: {"": "Object;"},

NullThrownError: {"": "Error;",
  toString$0: function(_) {
    return "Throw of null.";
  }
},

ArgumentError: {"": "Error;message",
  toString$0: function(_) {
    var t1 = this.message;
    if (t1 != null)
      return "Illegal argument(s): " + $.S(t1);
    return "Illegal argument(s)";
  }
},

RangeError: {"": "ArgumentError;message",
  toString$0: function(_) {
    return "RangeError: " + $.S(this.message);
  }
},

NoSuchMethodError: {"": "Error;_liblib1$_receiver,_memberName,_arguments,_namedArguments,_existingArgumentNames",
  toString$0: function(_) {
    var t1, t2, t3, t4;
    t1 = {};
    t1.sb_0 = $.StringBuffer$("");
    t1.i_1 = 0;
    for (t2 = this._arguments; t3 = t1.i_1, t4 = $.getInterceptor$n(t3), t4.$lt(t3, t2.length); t1.i_1 = $.$add$ns(t1.i_1, 1)) {
      if (t4.$gt(t3, 0)) {
        t3 = t1.sb_0;
        t3._contents = t3._contents + ", ";
      }
      t3 = t1.sb_0;
      t4 = t1.i_1;
      if (t4 >>> 0 !== t4 || t4 >= t2.length)
        throw $.ioore(t4);
      t4 = $.Error_safeToString(t2[t4]);
      t3._contents = t3._contents + t4;
    }
    t2 = this._namedArguments;
    t2.forEach$1(t2, new $.NoSuchMethodError_toString_closure(t1));
    return "NoSuchMethodError : method not found: '" + $.S(this._memberName) + "'\nReceiver: " + $.Error_safeToString(this._liblib1$_receiver) + "\nArguments: [" + $.S(t1.sb_0) + "]";
  }
},

UnsupportedError: {"": "Error;message",
  toString$0: function(_) {
    return "Unsupported operation: " + this.message;
  }
},

UnimplementedError: {"": "Error;message",
  toString$0: function(_) {
    var t1 = this.message;
    return t1 != null ? "UnimplementedError: " + t1 : "UnimplementedError";
  }
},

StateError: {"": "Error;message",
  toString$0: function(_) {
    return "Bad state: " + this.message;
  }
},

ConcurrentModificationError: {"": "Error;modifiedObject",
  toString$0: function(_) {
    var t1 = this.modifiedObject;
    if (t1 == null)
      return "Concurrent modification during iteration.";
    return "Concurrent modification during iteration: " + $.Error_safeToString(t1) + ".";
  }
},

StackOverflowError: {"": "Object;",
  toString$0: function(_) {
    return "Stack Overflow";
  }
},

CyclicInitializationError: {"": "Error;variableName",
  toString$0: function(_) {
    return "Reading static variable '" + this.variableName + "' during its initialization";
  }
},

_ExceptionImplementation: {"": "Object;message",
  toString$0: function(_) {
    var t1 = this.message;
    if (t1 == null)
      return "Exception";
    return "Exception: " + $.S(t1);
  },
  $isException: true
},

FormatException: {"": "Object;message",
  toString$0: function(_) {
    return "FormatException: " + $.S(this.message);
  },
  $isException: true
},

Expando: {"": "Object;name>",
  toString$0: function(_) {
    return "Expando:" + this.name;
  },
  $index: function(_, object) {
    var values = $.Primitives_getProperty(object, "expando$values");
    return values == null ? null : $.Primitives_getProperty(values, this._getKey$0());
  },
  $indexSet: function(_, object, value) {
    var values = $.Primitives_getProperty(object, "expando$values");
    if (values == null) {
      values = new $.Object();
      $.Primitives_setProperty(object, "expando$values", values);
    }
    $.Primitives_setProperty(values, this._getKey$0(), value);
  },
  _getKey$0: function() {
    var key, t1;
    key = $.Primitives_getProperty(this, "expando$key");
    if (key == null) {
      t1 = $.Expando__keyCount;
      $.Expando__keyCount = $.$add$ns(t1, 1);
      key = "expando$key$" + $.S(t1);
      $.Primitives_setProperty(this, "expando$key", key);
    }
    return key;
  }
},

Iterator: {"": "Object;"},

Map: {"": "Object;", $isMap: true, $asMap: null},

Object: {"": ";",
  $eq: function(_, other) {
    return this === other;
  },
  get$hashCode: function(_) {
    return $.Primitives_objectHashCode(this);
  },
  toString$0: function(_) {
    return $.Primitives_objectToString(this);
  }
},

Stopwatch: {"": "Object;_liblib1$_start,_stop",
  start$0: function(_) {
    var t1, t2, t3;
    if (this.get$isRunning())
      return;
    if (this._liblib1$_start == null)
      this._liblib1$_start = $.Stopwatch__now();
    else {
      t1 = $.Stopwatch__now();
      t2 = this._stop;
      t3 = this._liblib1$_start;
      if (t2 == null)
        throw t2.$sub();
      if (t3 == null)
        throw $.iae(t3);
      this._liblib1$_start = t1 - (t2 - t3);
      this._stop = null;
    }
  },
  reset$0: function(_) {
    if (this._liblib1$_start == null)
      return;
    this._liblib1$_start = $.Stopwatch__now();
    if (this._stop != null)
      this._stop = this._liblib1$_start;
  },
  get$elapsedTicks: function() {
    var t1, t2;
    t1 = this._liblib1$_start;
    if (t1 == null)
      return 0;
    t2 = this._stop;
    if (t2 == null) {
      t1 = $.Stopwatch__now();
      t2 = this._liblib1$_start;
      if (t2 == null)
        throw $.iae(t2);
      t2 = t1 - t2;
      t1 = t2;
    } else {
      if (t2 == null)
        throw t2.$sub();
      if (t1 == null)
        throw $.iae(t1);
      t1 = t2 - t1;
    }
    return t1;
  },
  get$frequency: function(_) {
    return $.Stopwatch__frequency();
  },
  get$isRunning: function() {
    return this._liblib1$_start != null && this._stop == null;
  }
},

StringBuffer: {"": "Object;_contents",
  get$length: function(_) {
    return this._contents.length;
  },
  get$isEmpty: function(_) {
    return this._contents.length === 0;
  },
  write$1: function(_, obj) {
    if (typeof obj !== "string")
      return this.write$1$bailout(1, obj);
    this._contents = this._contents + obj;
  },
  write$1$bailout: function(state0, obj) {
    var str = typeof obj === "string" ? obj : $.S(obj);
    this._contents = this._contents + str;
  },
  toString$0: function(_) {
    return this._contents;
  },
  StringBuffer$1: function($content) {
    this._contents = $content;
  }
},

DateTime_DateTime$now: function() {
  return $.DateTime$_now();
},

DateTime$fromMillisecondsSinceEpoch: function(millisecondsSinceEpoch, isUtc) {
  var t1 = new $.DateTime(millisecondsSinceEpoch, isUtc);
  t1.DateTime$fromMillisecondsSinceEpoch$2$isUtc(millisecondsSinceEpoch, isUtc);
  return t1;
},

DateTime$_now: function() {
  var t1 = new $.DateTime($.Primitives_dateNow(), false);
  t1.DateTime$_now$0();
  return t1;
},

double_parse: function(source, handleError) {
  return $.Primitives_parseDouble(source, handleError);
},

Duration$: function(days, hours, microseconds, milliseconds, minutes, seconds) {
  var t1 = $.$mul$n(milliseconds, 1000);
  if (typeof t1 !== "number")
    throw $.iae(t1);
  return new $.Duration(days * 86400000000 + hours * 3600000000 + minutes * 60000000 + seconds * 1000000 + t1 + microseconds);
},

Error_safeToString: function(object) {
  var t1;
  if (typeof object === "number" && Math.floor(object) === object || typeof object === "number" || typeof object === "boolean" || null == object)
    return $.toString$0(object);
  if (typeof object === "string") {
    t1 = $.JSString_methods.replaceAll$2(object, "\\", "\\\\");
    $.checkString("\\n");
    t1 = $.stringReplaceAllUnchecked(t1, "\n", "\\n");
    $.checkString("\\r");
    t1 = $.stringReplaceAllUnchecked(t1, "\r", "\\r");
    $.checkString("\\\"");
    return "\"" + $.stringReplaceAllUnchecked(t1, "\"", "\\\"") + "\"";
  }
  return $.Primitives_objectToString(object);
},

NullThrownError$: function() {
  return new $.NullThrownError();
},

ArgumentError$: function(message) {
  return new $.ArgumentError(message);
},

RangeError$value: function(value) {
  return new $.RangeError("value " + $.S(value));
},

RangeError$range: function(value, start, end) {
  return new $.RangeError("value " + $.S(value) + " not in range " + $.S(start) + ".." + $.S(end));
},

NoSuchMethodError$: function(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames) {
  return new $.NoSuchMethodError(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames);
},

UnsupportedError$: function(message) {
  return new $.UnsupportedError(message);
},

UnimplementedError$: function(message) {
  return new $.UnimplementedError(message);
},

StateError$: function(message) {
  return new $.StateError(message);
},

ConcurrentModificationError$: function(modifiedObject) {
  return new $.ConcurrentModificationError(modifiedObject);
},

StackOverflowError$: function() {
  return new $.StackOverflowError();
},

CyclicInitializationError$: function(variableName) {
  return new $.CyclicInitializationError(variableName);
},

Exception_Exception: function(message) {
  return $._ExceptionImplementation$(message);
},

_ExceptionImplementation$: function(message) {
  return new $._ExceptionImplementation(message);
},

FormatException$: function(message) {
  return new $.FormatException(message);
},

Expando$: function($name) {
  return new $.Expando($name);
},

List_List: function($length, E) {
  if ($length == null)
    return $.Primitives_newGrowableList(0);
  if (typeof $length !== "number" || Math.floor($length) !== $length || $length < 0)
    throw $.wrapException($.ArgumentError$("Length must be a positive integer: " + $.S($length) + "."));
  return $.Primitives_newFixedList($length);
},

List_List$filled: function($length, fill, E) {
  var result, t1, i;
  if ($length < 0)
    throw $.wrapException($.ArgumentError$("Length must be a positive integer: " + $length + "."));
  result = $.Primitives_newFixedList($length);
  if ($length !== 0 && true)
    for (t1 = result.length, i = 0; i < t1; ++i)
      result[i] = fill;
  return result;
},

List_List$from: function(other, growable, E) {
  var list, t1, $length, fixedList, t2, i, t3;
  list = $.List_List(null, E);
  $.setRuntimeTypeInfo(list, [E]);
  for (t1 = $.get$iterator$ax(other); t1.moveNext$0() === true;)
    list.push(t1.get$current());
  if (growable)
    return list;
  $length = list.length;
  fixedList = $.List_List($length, E);
  $.setRuntimeTypeInfo(fixedList, [E]);
  for (t1 = list.length, t2 = fixedList.length, i = 0; i < $length; ++i) {
    if (i >= t1)
      throw $.ioore(i);
    t3 = list[i];
    if (i >= t2)
      throw $.ioore(i);
    fixedList[i] = t3;
  }
  return fixedList;
},

Map_Map: function(K, V) {
  return $.HashMap$(K, V);
},

print: function(object) {
  $.Primitives_printString($.toString$0(object));
},

Stopwatch$: function() {
  return new $.Stopwatch(null, null);
},

Stopwatch__frequency: function() {
  return 1000000;
},

Stopwatch__now: function() {
  return $.Primitives_numMicroseconds();
},

String_String$fromCharCodes: function(charCodes) {
  return $.Primitives_stringFromCharCodes(charCodes);
},

StringBuffer$: function($content) {
  var t1 = new $.StringBuffer("");
  t1.StringBuffer$1($content);
  return t1;
},

Uri_decodeComponent: function(encodedComponent) {
  return $.Uri__uriDecode(encodedComponent, $.decodeUtf8$closure, false);
},

Uri__hexCharPairToByte: function(s, pos) {
  var t1, $byte, i, t2, charCode;
  for (t1 = s.length, $byte = 0, i = 0; i < 2; ++i) {
    t2 = pos + i;
    if (t2 < 0)
      $.throwExpression(new $.RangeError("value " + t2));
    if (t2 >= t1)
      $.throwExpression(new $.RangeError("value " + t2));
    charCode = s.charCodeAt(t2);
    if (48 <= charCode && charCode <= 57)
      $byte = $byte * 16 + charCode - 48;
    else {
      charCode = (charCode | 32) >>> 0;
      if (97 <= charCode && charCode <= 102)
        $byte = $byte * 16 + charCode - 87;
      else
        throw $.wrapException(new $.ArgumentError("Invalid URL encoding"));
    }
  }
  return $byte;
},

Uri__uriDecode: function(text, decode, plusToSpace) {
  var result, codepoints, t1, t2, i, ch, charCodes, t3, str;
  result = $.StringBuffer$("");
  codepoints = $.List_List(null, $.JSInt);
  $.setRuntimeTypeInfo(codepoints, [$.JSInt]);
  for (t1 = text.length, t2 = t1 - 2, i = 0; i < t1;) {
    if (i < 0)
      $.throwExpression(new $.RangeError("value " + i));
    if (i >= t1)
      $.throwExpression(new $.RangeError("value " + i));
    ch = text.charCodeAt(i);
    if (ch !== 37) {
      if (plusToSpace && ch === 43)
        result._contents = result._contents + " ";
      else {
        charCodes = $.List_List$filled(1, ch, $.JSInt);
        charCodes.$builtinTypeInfo = [$.JSInt];
        t3 = $.Primitives_stringFromCharCodes(charCodes);
        result._contents = result._contents + t3;
      }
      ++i;
    } else {
      $.JSArray_methods.set$length(codepoints, 0);
      for (; ch === 37;) {
        ++i;
        if (i > t2)
          throw $.wrapException(new $.ArgumentError("Truncated URI"));
        codepoints.push($.Uri__hexCharPairToByte(text, i));
        i += 2;
        if (i === t1)
          break;
        if (i < 0)
          $.throwExpression(new $.RangeError("value " + i));
        if (i >= t1)
          $.throwExpression(new $.RangeError("value " + i));
        ch = text.charCodeAt(i);
      }
      str = decode.call$1(codepoints);
      str = typeof str === "string" ? str : $.S(str);
      result._contents = result._contents + str;
    }
  }
  return result.toString$0(result);
}}],
["dart.dom.html", "dart:html", , {
Interceptor_ListMixin: {"": "Interceptor+ListMixin;", $isList: true, $asList: function () { return [$.JSString]; }, $isIterable: true, $asIterable: function () { return [$.JSString]; }},

Interceptor_ListMixin_ImmutableListMixin: {"": "Interceptor_ListMixin+ImmutableListMixin;", $isList: true, $asList: function () { return [$.JSString]; }, $isIterable: true, $asIterable: function () { return [$.JSString]; }},

_ChildrenElementList: {"": "ListBase;_element,_childElements",
  get$isEmpty: function(_) {
    return this._element.firstElementChild == null;
  },
  get$length: function(_) {
    return this._childElements.length;
  },
  $index: function(_, index) {
    var t1 = this._childElements;
    if (index >>> 0 !== index || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  $indexSet: function(_, index, value) {
    var t1 = this._childElements;
    if (index >>> 0 !== index || index >= t1.length)
      throw $.ioore(index);
    this._element.replaceChild(value, t1[index]);
  },
  set$length: function(_, newLength) {
    throw $.wrapException(new $.UnsupportedError("Cannot resize element lists"));
  },
  add$1: function(_, value) {
    this._element.appendChild(value);
    return value;
  },
  get$iterator: function(_) {
    return $.get$iterator$ax(this.toList$0(this));
  },
  removeLast$0: function(_) {
    var result = this.get$last(this);
    if (result != null)
      this._element.removeChild(result);
    return result;
  },
  get$first: function(_) {
    var result = this._element.firstElementChild;
    if (result == null)
      throw $.wrapException(new $.StateError("No elements"));
    return result;
  },
  get$last: function(_) {
    var result = this._element.lastElementChild;
    if (result == null)
      throw $.wrapException($.StateError$("No elements"));
    return result;
  },
  $asList: function () { return [$.Element]; },
  $asIterable: function () { return [$.Element]; }
},

Entry_remove_closure: {"": "Closure;completer_0",
  call$0: function() {
    var t1 = this.completer_0;
    t1.complete$0(t1);
  }
},

Entry_remove_closure0: {"": "Closure;completer_1",
  call$1: function(error) {
    this.completer_1.completeError$1(error);
  }
},

Interceptor_ListMixin0: {"": "Interceptor+ListMixin;", $isList: true, $asList: function () { return [$.File]; }, $isIterable: true, $asIterable: function () { return [$.File]; }},

Interceptor_ListMixin_ImmutableListMixin0: {"": "Interceptor_ListMixin0+ImmutableListMixin;", $isList: true, $asList: function () { return [$.File]; }, $isIterable: true, $asIterable: function () { return [$.File]; }},

Interceptor_ListMixin1: {"": "Interceptor+ListMixin;", $isList: true, $asList: function () { return [$.Node]; }, $isIterable: true, $asIterable: function () { return [$.Node]; }},

Interceptor_ListMixin_ImmutableListMixin1: {"": "Interceptor_ListMixin1+ImmutableListMixin;", $isList: true, $asList: function () { return [$.Node]; }, $isIterable: true, $asIterable: function () { return [$.Node]; }},

Interceptor_ListMixin2: {"": "Interceptor+ListMixin;", $isList: true, $asList: function () { return [$.Node]; }, $isIterable: true, $asIterable: function () { return [$.Node]; }},

Interceptor_ListMixin_ImmutableListMixin2: {"": "Interceptor_ListMixin2+ImmutableListMixin;", $isList: true, $asList: function () { return [$.Node]; }, $isIterable: true, $asIterable: function () { return [$.Node]; }},

HttpRequest_getString_closure: {"": "Closure;",
  call$1: function(xhr) {
    return $.get$responseText$x(xhr);
  }
},

HttpRequest_request_closure1: {"": "Closure;xhr_0",
  call$2: function(header, value) {
    this.xhr_0.setRequestHeader(header, value);
  }
},

HttpRequest_request_closure: {"": "Closure;completer_1,xhr_2",
  call$1: function(e) {
    var t1, t2, t3;
    t1 = this.xhr_2;
    t2 = t1.status;
    if (t2 == null)
      throw t2.$ge();
    t2 = t2 >= 200 && t2 < 300 || t2 === 0 || t2 === 304;
    t3 = this.completer_1;
    if (t2)
      t3.complete$1(t3, t1);
    else
      t3.completeError$1(e);
  }
},

HttpRequest_request_closure0: {"": "Closure;completer_3",
  call$1: function(e) {
    this.completer_3.completeError$1(e);
  }
},

Interceptor_ListMixin3: {"": "Interceptor+ListMixin;", $isList: true, $asList: function () { return [$.MimeType]; }, $isIterable: true, $asIterable: function () { return [$.MimeType]; }},

Interceptor_ListMixin_ImmutableListMixin3: {"": "Interceptor_ListMixin3+ImmutableListMixin;", $isList: true, $asList: function () { return [$.MimeType]; }, $isIterable: true, $asIterable: function () { return [$.MimeType]; }},

_ChildNodeListLazy: {"": "ListBase;_this",
  get$first: function(_) {
    var result = this._this.firstChild;
    if (result == null)
      throw $.wrapException(new $.StateError("No elements"));
    return result;
  },
  get$last: function(_) {
    var result = this._this.lastChild;
    if (result == null)
      throw $.wrapException($.StateError$("No elements"));
    return result;
  },
  add$1: function(_, value) {
    this._this.appendChild(value);
  },
  removeLast$0: function(_) {
    var result = this.get$last(this);
    if (result != null)
      this._this.removeChild(result);
    return result;
  },
  $indexSet: function(_, index, value) {
    var t1, t2;
    t1 = this._this;
    t2 = t1.childNodes;
    if (index >>> 0 !== index || index >= t2.length)
      throw $.ioore(index);
    t1.replaceChild(value, t2[index]);
  },
  get$iterator: function(_) {
    return $.NodeList_methods.get$iterator(this._this.childNodes);
  },
  get$length: function(_) {
    return this._this.childNodes.length;
  },
  set$length: function(_, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot set length on immutable List."));
  },
  $index: function(_, index) {
    var t1 = this._this.childNodes;
    if (index >>> 0 !== index || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  $asList: function () { return [$.Node]; },
  $asIterable: function () { return [$.Node]; }
},

Interceptor_ListMixin4: {"": "Interceptor+ListMixin;", $isList: true, $asList: function () { return [$.Node]; }, $isIterable: true, $asIterable: function () { return [$.Node]; }},

Interceptor_ListMixin_ImmutableListMixin4: {"": "Interceptor_ListMixin4+ImmutableListMixin;", $isList: true, $asList: function () { return [$.Node]; }, $isIterable: true, $asIterable: function () { return [$.Node]; }},

Interceptor_ListMixin5: {"": "Interceptor+ListMixin;", $isList: true, $asList: function () { return [$.Plugin]; }, $isIterable: true, $asIterable: function () { return [$.Plugin]; }},

Interceptor_ListMixin_ImmutableListMixin5: {"": "Interceptor_ListMixin5+ImmutableListMixin;", $isList: true, $asList: function () { return [$.Plugin]; }, $isIterable: true, $asIterable: function () { return [$.Plugin]; }},

EventTarget_ListMixin: {"": "EventTarget+ListMixin;", $isList: true, $asList: function () { return [$.SourceBuffer]; }, $isIterable: true, $asIterable: function () { return [$.SourceBuffer]; }},

EventTarget_ListMixin_ImmutableListMixin: {"": "EventTarget_ListMixin+ImmutableListMixin;", $isList: true, $asList: function () { return [$.SourceBuffer]; }, $isIterable: true, $asIterable: function () { return [$.SourceBuffer]; }},

Interceptor_ListMixin6: {"": "Interceptor+ListMixin;", $isList: true, $asList: function () { return [$.SpeechGrammar]; }, $isIterable: true, $asIterable: function () { return [$.SpeechGrammar]; }},

Interceptor_ListMixin_ImmutableListMixin6: {"": "Interceptor_ListMixin6+ImmutableListMixin;", $isList: true, $asList: function () { return [$.SpeechGrammar]; }, $isIterable: true, $asIterable: function () { return [$.SpeechGrammar]; }},

Storage_keys_closure: {"": "Closure;keys_0",
  call$2: function(k, v) {
    return this.keys_0.push(k);
  }
},

Storage_values_closure: {"": "Closure;values_0",
  call$2: function(k, v) {
    return this.values_0.push(v);
  }
},

closure: {"": "Closure;",
  call$1: function(node) {
    throw $.wrapException($.UnsupportedError$("The MDV package is not available. You can enable it with `import 'package:mdv/mdv.dart' as mdv;` and `mdv.initialize()`"));
  }
},

Interceptor_ListMixin7: {"": "Interceptor+ListMixin;", $isList: true, $asList: function () { return [$.TextTrackCue]; }, $isIterable: true, $asIterable: function () { return [$.TextTrackCue]; }},

Interceptor_ListMixin_ImmutableListMixin7: {"": "Interceptor_ListMixin7+ImmutableListMixin;", $isList: true, $asList: function () { return [$.TextTrackCue]; }, $isIterable: true, $asIterable: function () { return [$.TextTrackCue]; }},

EventTarget_ListMixin0: {"": "EventTarget+ListMixin;", $isList: true, $asList: function () { return [$.TextTrack]; }, $isIterable: true, $asIterable: function () { return [$.TextTrack]; }},

EventTarget_ListMixin_ImmutableListMixin0: {"": "EventTarget_ListMixin0+ImmutableListMixin;", $isList: true, $asList: function () { return [$.TextTrack]; }, $isIterable: true, $asIterable: function () { return [$.TextTrack]; }},

Interceptor_ListMixin8: {"": "Interceptor+ListMixin;", $isList: true, $asList: function () { return [$.Touch]; }, $isIterable: true, $asIterable: function () { return [$.Touch]; }},

Interceptor_ListMixin_ImmutableListMixin8: {"": "Interceptor_ListMixin8+ImmutableListMixin;", $isList: true, $asList: function () { return [$.Touch]; }, $isIterable: true, $asIterable: function () { return [$.Touch]; }},

Interceptor_ListMixin9: {"": "Interceptor+ListMixin;", $isList: true, $asList: function () { return [$.Rect]; }, $isIterable: true, $asIterable: function () { return [$.Rect]; }},

Interceptor_ListMixin_ImmutableListMixin9: {"": "Interceptor_ListMixin9+ImmutableListMixin;", $isList: true, $asList: function () { return [$.Rect]; }, $isIterable: true, $asIterable: function () { return [$.Rect]; }},

Interceptor_ListMixin10: {"": "Interceptor+ListMixin;", $isList: true, $asList: function () { return [$.CssRule]; }, $isIterable: true, $asIterable: function () { return [$.CssRule]; }},

Interceptor_ListMixin_ImmutableListMixin10: {"": "Interceptor_ListMixin10+ImmutableListMixin;", $isList: true, $asList: function () { return [$.CssRule]; }, $isIterable: true, $asIterable: function () { return [$.CssRule]; }},

_CSSValue_ListMixin: {"": "_CSSValue+ListMixin;", $isList: true, $asList: function () { return [$._CSSValue]; }, $isIterable: true, $asIterable: function () { return [$._CSSValue]; }},

_CSSValue_ListMixin_ImmutableListMixin: {"": "_CSSValue_ListMixin+ImmutableListMixin;", $isList: true, $asList: function () { return [$._CSSValue]; }, $isIterable: true, $asIterable: function () { return [$._CSSValue]; }},

Interceptor_ListMixin11: {"": "Interceptor+ListMixin;", $isList: true, $asList: function () { return [$.Entry]; }, $isIterable: true, $asIterable: function () { return [$.Entry]; }},

Interceptor_ListMixin_ImmutableListMixin11: {"": "Interceptor_ListMixin11+ImmutableListMixin;", $isList: true, $asList: function () { return [$.Entry]; }, $isIterable: true, $asIterable: function () { return [$.Entry]; }},

Interceptor_ListMixin12: {"": "Interceptor+ListMixin;", $isList: true, $asList: function () { return [$._EntrySync]; }, $isIterable: true, $asIterable: function () { return [$._EntrySync]; }},

Interceptor_ListMixin_ImmutableListMixin12: {"": "Interceptor_ListMixin12+ImmutableListMixin;", $isList: true, $asList: function () { return [$._EntrySync]; }, $isIterable: true, $asIterable: function () { return [$._EntrySync]; }},

Interceptor_ListMixin13: {"": "Interceptor+ListMixin;", $isList: true, $asList: function () { return [$.Gamepad]; }, $isIterable: true, $asIterable: function () { return [$.Gamepad]; }},

Interceptor_ListMixin_ImmutableListMixin13: {"": "Interceptor_ListMixin13+ImmutableListMixin;", $isList: true, $asList: function () { return [$.Gamepad]; }, $isIterable: true, $asIterable: function () { return [$.Gamepad]; }},

Interceptor_ListMixin14: {"": "Interceptor+ListMixin;", $isList: true, $asList: function () { return [$.Node]; }, $isIterable: true, $asIterable: function () { return [$.Node]; }},

Interceptor_ListMixin_ImmutableListMixin14: {"": "Interceptor_ListMixin14+ImmutableListMixin;", $isList: true, $asList: function () { return [$.Node]; }, $isIterable: true, $asIterable: function () { return [$.Node]; }},

Interceptor_ListMixin15: {"": "Interceptor+ListMixin;", $isList: true, $asList: function () { return [$.SpeechInputResult]; }, $isIterable: true, $asIterable: function () { return [$.SpeechInputResult]; }},

Interceptor_ListMixin_ImmutableListMixin15: {"": "Interceptor_ListMixin15+ImmutableListMixin;", $isList: true, $asList: function () { return [$.SpeechInputResult]; }, $isIterable: true, $asIterable: function () { return [$.SpeechInputResult]; }},

Interceptor_ListMixin16: {"": "Interceptor+ListMixin;", $isList: true, $asList: function () { return [$.SpeechRecognitionResult]; }, $isIterable: true, $asIterable: function () { return [$.SpeechRecognitionResult]; }},

Interceptor_ListMixin_ImmutableListMixin16: {"": "Interceptor_ListMixin16+ImmutableListMixin;", $isList: true, $asList: function () { return [$.SpeechRecognitionResult]; }, $isIterable: true, $asIterable: function () { return [$.SpeechRecognitionResult]; }},

Interceptor_ListMixin17: {"": "Interceptor+ListMixin;", $isList: true, $asList: function () { return [$.StyleSheet]; }, $isIterable: true, $asIterable: function () { return [$.StyleSheet]; }},

Interceptor_ListMixin_ImmutableListMixin17: {"": "Interceptor_ListMixin17+ImmutableListMixin;", $isList: true, $asList: function () { return [$.StyleSheet]; }, $isIterable: true, $asIterable: function () { return [$.StyleSheet]; }},

_EventStream: {"": "Stream;_liblib$_target,_eventType,_useCapture",
  listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
    return $._EventStreamSubscription$(this._liblib$_target, this._eventType, onData, this._useCapture);
  },
  listen$1: function(onData) {
    return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
  }
},

_EventStreamSubscription: {"": "StreamSubscription;_pauseCount,_liblib$_target,_eventType,_onData,_useCapture",
  cancel$0: function(_) {
    if (this.get$_canceled())
      return;
    this._unlisten$0();
    this._liblib$_target = null;
    this._onData = null;
  },
  get$_canceled: function() {
    return this._liblib$_target == null;
  },
  get$isPaused: function() {
    return this._pauseCount > 0;
  },
  _tryResume$0: function() {
    var t1 = this._onData;
    if (t1 != null && !this.get$isPaused())
      $.$$dom_addEventListener$3$x(this._liblib$_target, this._eventType, t1, this._useCapture);
  },
  _unlisten$0: function() {
    var t1 = this._onData;
    if (t1 != null)
      $.$$dom_removeEventListener$3$x(this._liblib$_target, this._eventType, t1, this._useCapture);
  },
  _EventStreamSubscription$4: function(_target, _eventType, _onData, _useCapture) {
    this._tryResume$0();
  }
},

EventStreamProvider: {"": "Object;_eventType",
  forTarget$2$useCapture: function(e, useCapture) {
    return $._EventStream$(e, this._eventType, useCapture);
  },
  forTarget$1: function(e) {
    return this.forTarget$2$useCapture(e, false);
  }
},

_CustomEventStreamProvider: {"": "Object;_eventTypeGetter",
  _eventTypeGetter$1: function(arg0) {
    return this._eventTypeGetter.call$1(arg0);
  },
  forTarget$2$useCapture: function(e, useCapture) {
    return $._EventStream$(e, this._eventTypeGetter$1(e), useCapture);
  },
  forTarget$1: function(e) {
    return this.forTarget$2$useCapture(e, false);
  }
},

ImmutableListMixin: {"": "Object;",
  get$iterator: function(receiver) {
    return $.FixedSizeListIterator$(receiver);
  },
  add$1: function(receiver, value) {
    throw $.wrapException(new $.UnsupportedError("Cannot add to immutable List."));
  },
  removeLast$0: function(receiver) {
    throw $.wrapException($.UnsupportedError$("Cannot remove from immutable List."));
  },
  $isList: true,
  $asList: null,
  $isIterable: true,
  $asIterable: null
},

Point: {"": "Object;x>,y>",
  toString$0: function(_) {
    return "(" + $.S(this.x) + ", " + $.S(this.y) + ")";
  },
  $eq: function(_, other) {
    if (other == null)
      return false;
    if (typeof other !== "object" || other === null || !$.getInterceptor(other).$isPoint)
      return false;
    return $.$eq(this.x, other.x) && $.$eq(this.y, other.y);
  },
  get$hashCode: function(_) {
    return $.JenkinsSmiHash_hash2($.get$hashCode$(this.x), $.get$hashCode$(this.y));
  },
  $add: function(_, other) {
    var t1, t2, t3;
    t1 = this.x;
    if (typeof t1 !== "number")
      return this.$$add$bailout(1, other, t1);
    t2 = $.getInterceptor$x(other);
    t3 = t2.get$x(other);
    if (typeof t3 !== "number")
      return this.$$add$bailout(2, other, t1, t2, t3);
    t3 = t1 + t3;
    t1 = this.y;
    if (typeof t1 !== "number")
      return this.$$add$bailout(3, other, t1, t2, t3);
    t2 = t2.get$y(other);
    if (typeof t2 !== "number")
      return this.$$add$bailout(4, 0, t1, t2, t3);
    return new $.Point(t3, t1 + t2);
  },
  $$add$bailout: function(state0, other, t1, t2, t3) {
    switch (state0) {
      case 0:
        t1 = this.x;
      case 1:
        state0 = 0;
        t2 = $.getInterceptor$x(other);
        t3 = t2.get$x(other);
      case 2:
        state0 = 0;
        t3 = $.$add$ns(t1, t3);
        t1 = this.y;
      case 3:
        state0 = 0;
        t2 = t2.get$y(other);
      case 4:
        state0 = 0;
        return new $.Point(t3, $.$add$ns(t1, t2));
    }
  },
  $sub: function(_, other) {
    var t1, t2, t3;
    t1 = this.x;
    if (typeof t1 !== "number")
      return this.$$sub$bailout(1, other, t1);
    t2 = $.getInterceptor$x(other);
    t3 = t2.get$x(other);
    if (typeof t3 !== "number")
      return this.$$sub$bailout(2, other, t1, t2, t3);
    t3 = t1 - t3;
    t1 = this.y;
    if (typeof t1 !== "number")
      return this.$$sub$bailout(3, other, t1, t2, t3);
    t2 = t2.get$y(other);
    if (typeof t2 !== "number")
      return this.$$sub$bailout(4, 0, t1, t2, t3);
    return new $.Point(t3, t1 - t2);
  },
  $$sub$bailout: function(state0, other, t1, t2, t3) {
    switch (state0) {
      case 0:
        t1 = this.x;
      case 1:
        state0 = 0;
        t2 = $.getInterceptor$x(other);
        t3 = t2.get$x(other);
      case 2:
        state0 = 0;
        t3 = $.$sub$n(t1, t3);
        t1 = this.y;
      case 3:
        state0 = 0;
        t2 = t2.get$y(other);
      case 4:
        state0 = 0;
        return new $.Point(t3, $.$sub$n(t1, t2));
    }
  },
  $mul: function(_, factor) {
    return $.Point$($.$mul$n(this.x, factor), $.$mul$n(this.y, factor));
  },
  floor$0: function(_) {
    return $.Point$($.floor$0$nx(this.x), $.floor$0$nx(this.y));
  },
  round$0: function(_) {
    return $.Point$($.round$0$nx(this.x), $.round$0$nx(this.y));
  },
  $isPoint: true
},

Rect: {"": "Object;left>,top>,width>,height>",
  toString$0: function(_) {
    return "(" + $.S(this.left) + ", " + $.S(this.top) + ", " + $.S(this.width) + ", " + $.S(this.height) + ")";
  },
  $eq: function(_, other) {
    var t1;
    if (other == null)
      return false;
    if (typeof other !== "object" || other === null || !$.getInterceptor(other).$isRect)
      return false;
    t1 = $.getInterceptor$x(other);
    return $.$eq(this.left, t1.get$left(other)) && $.$eq(this.top, t1.get$top(other)) && $.$eq(this.width, t1.get$width(other)) && $.$eq(this.height, t1.get$height(other));
  },
  get$hashCode: function(_) {
    return $.JenkinsSmiHash_hash4($.get$hashCode$(this.left), $.get$hashCode$(this.top), $.get$hashCode$(this.width), $.get$hashCode$(this.height));
  },
  floor$0: function(_) {
    return $.Rect$($.floor$0$nx(this.left), $.floor$0$nx(this.top), $.floor$0$nx(this.width), $.floor$0$nx(this.height));
  },
  round$0: function(_) {
    return $.Rect$($.round$0$nx(this.left), $.round$0$nx(this.top), $.round$0$nx(this.width), $.round$0$nx(this.height));
  },
  $isRect: true,
  $asRect: null
},

FixedSizeListIterator: {"": "Object;_array,_liblib$_length,_position,_liblib$_current",
  moveNext$0: function() {
    var t1, nextPosition;
    t1 = this._position;
    if (typeof t1 !== "number")
      return this.moveNext$0$bailout(1, t1);
    nextPosition = t1 + 1;
    t1 = this._liblib$_length;
    if (t1 == null)
      throw $.iae(t1);
    if (nextPosition < t1) {
      t1 = this._array;
      if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !$.isJsIndexable(t1, t1[$.dispatchPropertyName])))
        return this.moveNext$0$bailout(2, t1, nextPosition);
      if (nextPosition >>> 0 !== nextPosition || nextPosition >= t1.length)
        throw $.ioore(nextPosition);
      this._liblib$_current = t1[nextPosition];
      this._position = nextPosition;
      return true;
    }
    this._liblib$_current = null;
    this._position = t1;
    return false;
  },
  moveNext$0$bailout: function(state0, t1, nextPosition) {
    switch (state0) {
      case 0:
        t1 = this._position;
      case 1:
        state0 = 0;
        nextPosition = $.$add$ns(t1, 1);
        t1 = this._liblib$_length;
        if (t1 == null)
          throw $.iae(t1);
      case 2:
        if (state0 === 2 || state0 === 0 && $.$lt$n(nextPosition, t1))
          switch (state0) {
            case 0:
              t1 = this._array;
            case 2:
              state0 = 0;
              this._liblib$_current = $.$index$asx(t1, nextPosition);
              this._position = nextPosition;
              return true;
          }
        this._liblib$_current = null;
        this._position = t1;
        return false;
    }
  },
  get$current: function() {
    return this._liblib$_current;
  }
},

window: function() {
  return window;
},

document: function() {
  return document;
},

query: function(selector) {
  return $.document().querySelector(selector);
},

AnchorElement_AnchorElement: function(href) {
  var e = $.document().createElement("a");
  return e;
},

CanvasElement_CanvasElement: function(height, width) {
  var e = $.document().createElement("canvas");
  return e;
},

DivElement_DivElement: function() {
  return $.document().createElement("div");
},

Element__determineMouseWheelEventType: function(e) {
  if (e.onwheel !== undefined)
    return "wheel";
  else if (e.onmousewheel !== undefined)
    return "mousewheel";
  else
    return "DOMMouseScroll";
},

HttpRequest_getString: function(url, onProgress, withCredentials) {
  return $.HttpRequest_request(url, null, null, onProgress, null, null, null, withCredentials).then$1(new $.HttpRequest_getString_closure());
},

HttpRequest_request: function(url, method, mimeType, onProgress, requestHeaders, responseType, sendData, withCredentials) {
  var completer, xhr;
  completer = $.Completer_Completer();
  xhr = $.HttpRequest_HttpRequest();
  $.HttpRequest_methods.open$3$async(xhr, "GET", url, true);
  $.HttpRequest_methods.get$onLoad(xhr).listen$1(new $.HttpRequest_request_closure(completer, xhr));
  $.HttpRequest_methods.get$onError(xhr).listen$1(new $.HttpRequest_request_closure0(completer));
  xhr.send();
  return completer.future;
},

HttpRequest_HttpRequest: function() {
  return $.HttpRequest__create_1();
},

HttpRequest__create_1: function() {
  return new XMLHttpRequest();
},

ImageElement_ImageElement: function(height, src, width) {
  var e = $.document().createElement("img");
  return e;
},

InputElement_InputElement: function(type) {
  var e, exception;
  e = $.document().createElement("input");
  if (type != null)
    try {
      $.set$type$x(e, type);
    } catch (exception) {
      $.unwrapException(exception);
    }

  return e;
},

LabelElement_LabelElement: function() {
  return $.document().createElement("label");
},

_ChildNodeListLazy$: function(_this) {
  return new $._ChildNodeListLazy(_this);
},

ParagraphElement_ParagraphElement: function() {
  return $.document().createElement("p");
},

Text_Text: function(data) {
  return $.document().createTextNode(data);
},

WebSocket_WebSocket: function(url, protocol_OR_protocols) {
  var t1, t2;
  t1 = typeof url !== "string";
  if ((typeof url === "string" || url == null) && true)
    return $.WebSocket__create_1(url);
  t2 = $.checkSubtype(protocol_OR_protocols, "$isList", [$.JSString], "$asList");
  if (!t2)
    ;
  t2 = typeof url === "string" || url == null;
  if (t2)
    return $.WebSocket__create_2(url, protocol_OR_protocols);
  t1 = typeof url === "string" || url == null;
  if (t1)
    return $.WebSocket__create_3(url, protocol_OR_protocols);
  throw $.wrapException($.ArgumentError$("Incorrect number or type of arguments"));
},

WebSocket__create_1: function(url) {
  return new WebSocket(url);
},

WebSocket__create_2: function(url, protocol_OR_protocols) {
  return new WebSocket(url, protocol_OR_protocols);
},

WebSocket__create_3: function(url, protocol_OR_protocols) {
  return new WebSocket(url, protocol_OR_protocols);
},

_EventStream$: function(_target, _eventType, _useCapture) {
  return new $._EventStream(_target, _eventType, _useCapture);
},

_EventStreamSubscription$: function(_target, _eventType, _onData, _useCapture) {
  var t1 = new $._EventStreamSubscription(0, _target, _eventType, _onData, _useCapture);
  t1._EventStreamSubscription$4(_target, _eventType, _onData, _useCapture);
  return t1;
},

Point$: function(x, y) {
  return new $.Point(x, y);
},

Rect$: function(left, $top, width, height) {
  return new $.Rect(left, $top, width, height);
},

FixedSizeListIterator$: function(array) {
  return new $.FixedSizeListIterator(array, $.get$length$asx(array), -1, null);
}}],
["dart.dom.indexed_db", "dart:indexed_db", , {
_completeRequest_closure: {"": "Closure;request_0,completer_1",
  call$1: function(e) {
    var t1 = this.completer_1;
    t1.complete$1(t1, $.get$result$x(this.request_0));
  }
},

_completeRequest_closure0: {"": "Closure;completer_2",
  call$1: function(e) {
    this.completer_2.completeError$1(e);
  }
},

_convertNativeToDart_IDBAny: function(object) {
  return $.convertNativeToDart_AcceptStructuredClone(object, false);
},

_completeRequest: function(request) {
  var completer, t1;
  completer = $.Completer_Completer$sync();
  t1 = $.getInterceptor$x(request);
  t1.get$onSuccess(request).listen$1(new $._completeRequest_closure(request, completer));
  t1.get$onError(request).listen$1(new $._completeRequest_closure0(completer));
  return completer.future;
}}],
["dart.dom.svg", "dart:svg", , {
Interceptor_ListMixin18: {"": "Interceptor+ListMixin;", $isList: true, $asList: function () { return [$.Length]; }, $isIterable: true, $asIterable: function () { return [$.Length]; }},

Interceptor_ListMixin_ImmutableListMixin18: {"": "Interceptor_ListMixin18+ImmutableListMixin;", $isList: true, $asList: function () { return [$.Length]; }, $isIterable: true, $asIterable: function () { return [$.Length]; }},

Interceptor_ListMixin19: {"": "Interceptor+ListMixin;", $isList: true, $asList: function () { return [$.Number]; }, $isIterable: true, $asIterable: function () { return [$.Number]; }},

Interceptor_ListMixin_ImmutableListMixin19: {"": "Interceptor_ListMixin19+ImmutableListMixin;", $isList: true, $asList: function () { return [$.Number]; }, $isIterable: true, $asIterable: function () { return [$.Number]; }},

Interceptor_ListMixin20: {"": "Interceptor+ListMixin;", $isList: true, $asList: function () { return [$.PathSeg]; }, $isIterable: true, $asIterable: function () { return [$.PathSeg]; }},

Interceptor_ListMixin_ImmutableListMixin20: {"": "Interceptor_ListMixin20+ImmutableListMixin;", $isList: true, $asList: function () { return [$.PathSeg]; }, $isIterable: true, $asIterable: function () { return [$.PathSeg]; }},

Interceptor_ListMixin21: {"": "Interceptor+ListMixin;", $isList: true, $asList: function () { return [$.JSString]; }, $isIterable: true, $asIterable: function () { return [$.JSString]; }},

Interceptor_ListMixin_ImmutableListMixin21: {"": "Interceptor_ListMixin21+ImmutableListMixin;", $isList: true, $asList: function () { return [$.JSString]; }, $isIterable: true, $asIterable: function () { return [$.JSString]; }},

Interceptor_ListMixin22: {"": "Interceptor+ListMixin;", $isList: true, $asList: function () { return [$.Transform]; }, $isIterable: true, $asIterable: function () { return [$.Transform]; }},

Interceptor_ListMixin_ImmutableListMixin22: {"": "Interceptor_ListMixin22+ImmutableListMixin;", $isList: true, $asList: function () { return [$.Transform]; }, $isIterable: true, $asIterable: function () { return [$.Transform]; }},

Interceptor_ListMixin23: {"": "Interceptor+ListMixin;", $isList: true, $asList: function () { return [$.ElementInstance]; }, $isIterable: true, $asIterable: function () { return [$.ElementInstance]; }},

Interceptor_ListMixin_ImmutableListMixin23: {"": "Interceptor_ListMixin23+ImmutableListMixin;", $isList: true, $asList: function () { return [$.ElementInstance]; }, $isIterable: true, $asIterable: function () { return [$.ElementInstance]; }}}],
["dart.dom.web_sql", "dart:web_sql", , {
Interceptor_ListMixin24: {"": "Interceptor+ListMixin;", $isList: true, $asList: function () { return [$.Map]; }, $isIterable: true, $asIterable: function () { return [$.Map]; }},

Interceptor_ListMixin_ImmutableListMixin24: {"": "Interceptor_ListMixin24+ImmutableListMixin;", $isList: true, $asList: function () { return [$.Map]; }, $isIterable: true, $asIterable: function () { return [$.Map]; }}}],
["dart.isolate", "dart:isolate", , {
ReceivePort: {"": "Object;"},

port: function() {
  return $._Isolate_port();
},

ReceivePort_ReceivePort: function() {
  return $.ReceivePortImpl$();
},

_Isolate_port: function() {
  if ($.lazyPort == null)
    $.lazyPort = $.ReceivePort_ReceivePort();
  return $.lazyPort;
}}],
["dart.json", "dart:json", , {
_convertJsonToDart_closure: {"": "Closure;",
  call$2: function(key, value) {
    return value;
  }
},

_convertJsonToDart_walk: {"": "Closure;revive_0",
  call$1: function(e) {
    var list, t1, i, keys, map, key, proto;
    if (e == null || typeof e != "object")
      return e;
    if (Object.getPrototypeOf(e) === Array.prototype) {
      list = e;
      for (t1 = this.revive_0, i = 0; i < list.length; ++i)
        list[i] = t1.call$2(i, this.call$1(list[i]));
      return list;
    }
    keys = Object.keys(e);
    map = $.makeLiteralMap([]);
    for (t1 = this.revive_0, i = 0; i < keys.length; ++i) {
      key = keys[i];
      map.$indexSet(map, key, t1.call$2(key, this.call$1(e[key])));
    }
    proto = e.__proto__;
    if (typeof proto !== "undefined" && proto !== Object.prototype)
      map.$indexSet(map, "__proto__", t1.call$2("__proto__", this.call$1(proto)));
    return map;
  }
},

JsonUnsupportedObjectError: {"": "Error;unsupportedObject,cause",
  toString$0: function(_) {
    if (this.cause != null)
      return "Calling toJson method on object failed.";
    else
      return "Object toJson method returns non-serializable value.";
  }
},

JsonCyclicError: {"": "JsonUnsupportedObjectError;unsupportedObject,cause",
  toString$0: function(_) {
    return "Cyclic error in JSON stringify";
  }
},

_JsonStringifier: {"": "Object;sb<,seen",
  checkCycle$1: function(object) {
    var t1, t2, i, t3;
    for (t1 = this.seen, t2 = t1.length, i = 0; i < t2; ++i) {
      t3 = t1[i];
      if (t3 == null ? object == null : t3 === object)
        throw $.wrapException(new $.JsonCyclicError(object, null));
    }
    t1.push(object);
  },
  stringifyValue$1: function(object) {
    var customJson, e, t1, exception;
    if (!this.stringifyJsonValue$1(object)) {
      this.checkCycle$1(object);
      try {
        customJson = object.toJson$0();
        if (!this.stringifyJsonValue$1(customJson))
          throw $.wrapException(new $.JsonUnsupportedObjectError(object, null));
        t1 = this.seen;
        if (0 >= t1.length)
          throw $.ioore(0);
        t1.pop();
      } catch (exception) {
        t1 = $.unwrapException(exception);
        e = t1;
        throw $.wrapException(new $.JsonUnsupportedObjectError(object, e));
      }

    }
  },
  stringifyJsonValue$1: function(object) {
    var t1, i, t2;
    t1 = {};
    if (typeof object === "number") {
      t1 = this.sb;
      t1.write$1(t1, $._JsonStringifier_numberToString(object));
      return true;
    } else if (object === true) {
      t1 = this.sb;
      t1.write$1(t1, "true");
      return true;
    } else if (object === false) {
      t1 = this.sb;
      t1.write$1(t1, "false");
      return true;
    } else if (object == null) {
      t1 = this.sb;
      t1.write$1(t1, "null");
      return true;
    } else if (typeof object === "string") {
      t1 = this.sb;
      t1.write$1(t1, "\"");
      $._JsonStringifier_escape(t1, object);
      t1.write$1(t1, "\"");
      return true;
    } else if (typeof object === "object" && object !== null && (object.constructor === Array || !!$.getInterceptor(object).$isList)) {
      if (typeof object !== "string" && (typeof object !== "object" || object === null || object.constructor !== Array && !$.isJsIndexable(object, object[$.dispatchPropertyName])))
        return this.stringifyJsonValue$1$bailout(1, object);
      this.checkCycle$1(object);
      t1 = this.sb;
      t1.write$1(t1, "[");
      if (object.length > 0) {
        this.stringifyValue$1(object[0]);
        for (i = 1; i < object.length; ++i) {
          t1._contents = t1._contents + ",";
          if (i >= object.length)
            throw $.ioore(i);
          this.stringifyValue$1(object[i]);
        }
      }
      t1.write$1(t1, "]");
      t1 = this.seen;
      if (0 >= t1.length)
        throw $.ioore(0);
      t1.pop();
      return true;
    } else if (typeof object === "object" && object !== null && !!$.getInterceptor(object).$isMap) {
      this.checkCycle$1(object);
      t2 = this.sb;
      t2.write$1(t2, "{");
      t1.first_0 = true;
      $.forEach$1$ax(object, new $._JsonStringifier_stringifyJsonValue_closure(t1, this));
      t2.write$1(t2, "}");
      t2 = this.seen;
      if (0 >= t2.length)
        throw $.ioore(0);
      t2.pop();
      return true;
    } else
      return false;
  },
  stringifyJsonValue$1$bailout: function(state0, object) {
    switch (state0) {
      case 0:
        t1 = {};
      case 1:
        var t1, t2, t3, i;
        if (state0 === 0 && typeof object === "number") {
          t1 = this.sb;
          t1.write$1(t1, $._JsonStringifier_numberToString(object));
          return true;
        } else
          switch (state0) {
            case 0:
            case 1:
              if (state0 === 0 && object === true) {
                t1 = this.sb;
                t1.write$1(t1, "true");
                return true;
              } else
                switch (state0) {
                  case 0:
                  case 1:
                    if (state0 === 0 && object === false) {
                      t1 = this.sb;
                      t1.write$1(t1, "false");
                      return true;
                    } else
                      switch (state0) {
                        case 0:
                        case 1:
                          if (state0 === 0 && object == null) {
                            t1 = this.sb;
                            t1.write$1(t1, "null");
                            return true;
                          } else
                            switch (state0) {
                              case 0:
                              case 1:
                                if (state0 === 0 && typeof object === "string") {
                                  t1 = this.sb;
                                  t1.write$1(t1, "\"");
                                  $._JsonStringifier_escape(t1, object);
                                  t1.write$1(t1, "\"");
                                  return true;
                                } else
                                  switch (state0) {
                                    case 0:
                                    case 1:
                                      if (state0 === 1 || state0 === 0 && typeof object === "object" && object !== null && (object.constructor === Array || !!$.getInterceptor(object).$isList))
                                        switch (state0) {
                                          case 0:
                                          case 1:
                                            state0 = 0;
                                            this.checkCycle$1(object);
                                            t1 = this.sb;
                                            t1.write$1(t1, "[");
                                            t2 = $.getInterceptor$asx(object);
                                            t3 = t2.get$length(object);
                                            if (typeof t3 !== "number")
                                              throw t3.$gt();
                                            if ($.$gt$n(t3, 0)) {
                                              this.stringifyValue$1(t2.$index(object, 0));
                                              i = 1;
                                              while (true) {
                                                t3 = t2.get$length(object);
                                                if (typeof t3 !== "number")
                                                  throw $.iae(t3);
                                                if (!(i < t3))
                                                  break;
                                                t1._contents = t1._contents + ",";
                                                this.stringifyValue$1(t2.$index(object, i));
                                                ++i;
                                              }
                                            }
                                            t1.write$1(t1, "]");
                                            t1 = this.seen;
                                            if (0 >= t1.length)
                                              throw $.ioore(0);
                                            t1.pop();
                                            return true;
                                        }
                                      else if (typeof object === "object" && object !== null && !!$.getInterceptor(object).$isMap) {
                                        this.checkCycle$1(object);
                                        t2 = this.sb;
                                        t2.write$1(t2, "{");
                                        t1.first_0 = true;
                                        $.forEach$1$ax(object, new $._JsonStringifier_stringifyJsonValue_closure(t1, this));
                                        t2.write$1(t2, "}");
                                        t2 = this.seen;
                                        if (0 >= t2.length)
                                          throw $.ioore(0);
                                        t2.pop();
                                        return true;
                                      } else
                                        return false;
                                  }
                            }
                      }
                }
          }
    }
  }
},

_JsonStringifier_stringifyJsonValue_closure: {"": "Closure;box_0,this_1",
  call$2: function(key, value) {
    var t1, t2, t3;
    t1 = this.box_0;
    t2 = this.this_1;
    if (!t1.first_0) {
      t2 = t2.get$sb();
      t2.write$1(t2, ",\"");
    } else {
      t2 = t2.get$sb();
      t2.write$1(t2, "\"");
    }
    t2 = this.this_1;
    $._JsonStringifier_escape(t2.get$sb(), key);
    t3 = t2.get$sb();
    t3.write$1(t3, "\":");
    t2.stringifyValue$1(value);
    t1.first_0 = false;
  }
},

_convertJsonToDart: function(json, reviver) {
  var revive = new $._convertJsonToDart_closure();
  return revive.call$2("", new $._convertJsonToDart_walk(revive).call$1(json));
},

parse: function(json, reviver) {
  var parsed, e, t1, exception;
  t1 = json;
  if (typeof t1 !== "string")
    throw $.wrapException($.ArgumentError$(json));
  parsed = null;
  try {
    parsed = JSON.parse(json);
  } catch (exception) {
    t1 = $.unwrapException(exception);
    e = t1;
    throw $.wrapException($.FormatException$(String(e)));
  }

  return $._convertJsonToDart(parsed, reviver);
},

stringify: function(object) {
  return $._JsonStringifier_stringify(object);
},

_JsonStringifier$: function(sb) {
  return new $._JsonStringifier(sb, []);
},

_JsonStringifier_stringify: function(object) {
  var output = $.StringBuffer$("");
  $._JsonStringifier$(output).stringifyValue$1(object);
  return output.toString$0(output);
},

_JsonStringifier_numberToString: function(x) {
  return $.JSNumber_methods.toString$0(x);
},

_JsonStringifier_escape: function(sb, s) {
  var t1, $length, charCodes, needsEscape, i, charCode, t2;
  t1 = $.getInterceptor$asx(s);
  $length = t1.get$length(s);
  charCodes = $.List_List(null, $.JSInt);
  $.setRuntimeTypeInfo(charCodes, [$.JSInt]);
  needsEscape = false;
  i = 0;
  while (true) {
    if (typeof $length !== "number")
      throw $.iae($length);
    if (!(i < $length))
      break;
    charCode = t1.codeUnitAt$1(s, i);
    if (charCode < 32) {
      charCodes.push(92);
      switch (charCode) {
        case 8:
          charCodes.push(98);
          break;
        case 9:
          charCodes.push(116);
          break;
        case 10:
          charCodes.push(110);
          break;
        case 12:
          charCodes.push(102);
          break;
        case 13:
          charCodes.push(114);
          break;
        default:
          charCodes.push(117);
          t2 = $.JSInt_methods.$shr(charCode, 12) & 15;
          charCodes.push(t2 < 10 ? 48 + t2 : 87 + t2);
          t2 = $.JSInt_methods.$shr(charCode, 8) & 15;
          charCodes.push(t2 < 10 ? 48 + t2 : 87 + t2);
          t2 = $.JSInt_methods.$shr(charCode, 4) & 15;
          charCodes.push(t2 < 10 ? 48 + t2 : 87 + t2);
          t2 = charCode & 15;
          charCodes.push(t2 < 10 ? 48 + t2 : 87 + t2);
          break;
      }
      needsEscape = true;
    } else if (charCode === 34 || charCode === 92) {
      charCodes.push(92);
      charCodes.push(charCode);
      needsEscape = true;
    } else
      charCodes.push(charCode);
    ++i;
  }
  sb.write$1(sb, needsEscape ? $.String_String$fromCharCodes(charCodes) : s);
}}],
["dart.math", "dart:math", , {
min: function(a, b) {
  if (a > b)
    return b;
  if (a < b)
    return a;
  if (typeof b === "number") {
    if (typeof a === "number")
      if (a === 0)
        return (a + b) * a * b;
    if (a === 0 && $.JSDouble_methods.get$isNegative(b) || $.JSDouble_methods.get$isNaN(b))
      return b;
    return a;
  }
  return a;
  throw $.wrapException($.ArgumentError$(b));
  throw $.wrapException($.ArgumentError$(a));
},

max: function(a, b) {
  if (a > b)
    return a;
  if (a < b)
    return b;
  if (typeof b === "number") {
    if (typeof a === "number")
      if (a === 0)
        return a + b;
    if ($.JSDouble_methods.get$isNaN(b))
      return b;
    return a;
  }
  if (b === 0 && $.JSNumber_methods.get$isNegative(a))
    return b;
  return a;
  throw $.wrapException($.ArgumentError$(b));
  throw $.wrapException($.ArgumentError$(a));
},

sin: function(x) {
  return Math.sin($.checkNum(x));
},

cos: function(x) {
  return Math.cos($.checkNum(x));
},

tan: function(x) {
  return Math.tan($.checkNum(x));
}}],
["dart.typed_data", "dart:typed_data", , {
TypedData_ListMixin: {"": "TypedData+ListMixin;", $isList: true, $asList: function () { return [$.JSDouble]; }, $isIterable: true, $asIterable: function () { return [$.JSDouble]; }},

TypedData_ListMixin_FixedLengthListMixin: {"": "TypedData_ListMixin+FixedLengthListMixin;"},

TypedData_ListMixin0: {"": "TypedData+ListMixin;", $isList: true, $asList: function () { return [$.JSDouble]; }, $isIterable: true, $asIterable: function () { return [$.JSDouble]; }},

TypedData_ListMixin_FixedLengthListMixin0: {"": "TypedData_ListMixin0+FixedLengthListMixin;"},

TypedData_ListMixin1: {"": "TypedData+ListMixin;", $isList: true, $asList: function () { return [$.JSInt]; }, $isIterable: true, $asIterable: function () { return [$.JSInt]; }},

TypedData_ListMixin_FixedLengthListMixin1: {"": "TypedData_ListMixin1+FixedLengthListMixin;"},

TypedData_ListMixin2: {"": "TypedData+ListMixin;", $isList: true, $asList: function () { return [$.JSInt]; }, $isIterable: true, $asIterable: function () { return [$.JSInt]; }},

TypedData_ListMixin_FixedLengthListMixin2: {"": "TypedData_ListMixin2+FixedLengthListMixin;"},

TypedData_ListMixin3: {"": "TypedData+ListMixin;", $isList: true, $asList: function () { return [$.JSInt]; }, $isIterable: true, $asIterable: function () { return [$.JSInt]; }},

TypedData_ListMixin_FixedLengthListMixin3: {"": "TypedData_ListMixin3+FixedLengthListMixin;"},

TypedData_ListMixin4: {"": "TypedData+ListMixin;", $isList: true, $asList: function () { return [$.JSInt]; }, $isIterable: true, $asIterable: function () { return [$.JSInt]; }},

TypedData_ListMixin_FixedLengthListMixin4: {"": "TypedData_ListMixin4+FixedLengthListMixin;"},

TypedData_ListMixin5: {"": "TypedData+ListMixin;", $isList: true, $asList: function () { return [$.JSInt]; }, $isIterable: true, $asIterable: function () { return [$.JSInt]; }},

TypedData_ListMixin_FixedLengthListMixin5: {"": "TypedData_ListMixin5+FixedLengthListMixin;"},

TypedData_ListMixin6: {"": "TypedData+ListMixin;", $isList: true, $asList: function () { return [$.JSInt]; }, $isIterable: true, $asIterable: function () { return [$.JSInt]; }},

TypedData_ListMixin_FixedLengthListMixin6: {"": "TypedData_ListMixin6+FixedLengthListMixin;"},

_ensureNativeList: function(list) {
  return list;
},

Float32List_Float32List: function($length) {
  return $.Float32List__create1($length);
},

Float32List_Float32List$fromList: function(list) {
  return $.Float32List__create1($._ensureNativeList(list));
},

Float32List__create1: function(arg) {
  return new Float32Array(arg);
},

Uint16List_Uint16List$fromList: function(list) {
  return $.Uint16List__create1($._ensureNativeList(list));
},

Uint16List__create1: function(arg) {
  return new Uint16Array(arg);
},

Uint8List_Uint8List: function($length) {
  return $.Uint8List__create1($length);
},

Uint8List_Uint8List$fromList: function(list) {
  return $.Uint8List__create1($._ensureNativeList(list));
},

Uint8List__create1: function(arg) {
  return new Uint8Array(arg);
}}],
["dart.utf", "dart:utf", , {
_ListRange: {"": "IterableBase;_source,_liblib6$_offset,_liblib6$_length",
  get$iterator: function(_) {
    var t1 = this._liblib6$_offset;
    return $._ListRangeIteratorImpl$(this._source, t1, $.$add$ns(t1, this._liblib6$_length));
  },
  get$length: function(_) {
    return this._liblib6$_length;
  },
  _ListRange$3: function(source, offset, $length) {
    var t1, t2, t3;
    t1 = this._liblib6$_offset;
    t2 = $.getInterceptor$n(t1);
    if (t2.$lt(t1, 0) || t2.$gt(t1, $.get$length$asx(this._source)))
      throw $.wrapException($.RangeError$value(t1));
    t2 = this._liblib6$_length;
    if (t2 != null && $.$lt$n(t2, 0))
      throw $.wrapException($.RangeError$value(t2));
    t3 = $.getInterceptor$ns(t2);
    if ($.$gt$n(t3.$add(t2, t1), $.get$length$asx(this._source)))
      throw $.wrapException($.RangeError$value(t3.$add(t2, t1)));
  },
  $asIterable: function () { return [null]; }
},

_ListRangeIteratorImpl: {"": "Object;_source,_liblib6$_offset,_liblib6$_end",
  get$current: function() {
    var t1, t2;
    t1 = this._source;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !$.isJsIndexable(t1, t1[$.dispatchPropertyName])))
      return this.get$current$bailout(1, t1);
    t2 = this._liblib6$_offset;
    if (t2 >>> 0 !== t2 || t2 >= t1.length)
      throw $.ioore(t2);
    return t1[t2];
  },
  get$current$bailout: function(state0, t1) {
    return $.$index$asx(t1, this._liblib6$_offset);
  },
  moveNext$0: function() {
    var t1, t2;
    t1 = this._liblib6$_offset;
    if (typeof t1 !== "number")
      return this.moveNext$0$bailout(1, t1);
    ++t1;
    this._liblib6$_offset = t1;
    t2 = this._liblib6$_end;
    if (typeof t2 !== "number")
      throw $.iae(t2);
    return t1 < t2;
  },
  moveNext$0$bailout: function(state0, t1) {
    var t2;
    t1 = $.$add$ns(t1, 1);
    this._liblib6$_offset = t1;
    t2 = this._liblib6$_end;
    if (typeof t2 !== "number")
      throw $.iae(t2);
    return $.$lt$n(t1, t2);
  },
  get$remaining: function() {
    return $.$sub$n($.$sub$n(this._liblib6$_end, this._liblib6$_offset), 1);
  }
},

Utf8Decoder: {"": "Object;utf8EncodedBytesIterator,replacementCodepoint,_liblib6$_current",
  decodeRest$0: function() {
    var codepoints, t1, i, i0, t2, truncCodepoints;
    codepoints = $.List_List(this.utf8EncodedBytesIterator.get$remaining(), $.JSInt);
    $.setRuntimeTypeInfo(codepoints, [$.JSInt]);
    for (t1 = codepoints.length, i = 0; this.moveNext$0(); i = i0) {
      i0 = i + 1;
      t2 = this._liblib6$_current;
      if (i >= t1)
        throw $.ioore(i);
      codepoints[i] = t2;
    }
    if (i === t1)
      return codepoints;
    else {
      truncCodepoints = $.List_List(i, $.JSInt);
      $.setRuntimeTypeInfo(truncCodepoints, [$.JSInt]);
      $.JSArray_methods.setRange$3(truncCodepoints, 0, i, codepoints);
      return truncCodepoints;
    }
  },
  get$current: function() {
    return this._liblib6$_current;
  },
  moveNext$0: function() {
    var t1, t2, t3, t4, t5, value, additionalBytes, j, nextValue, validSequence, nonOverlong, inRange;
    this._liblib6$_current = null;
    t1 = this.utf8EncodedBytesIterator;
    t2 = t1._liblib6$_offset;
    if (typeof t2 !== "number")
      return this.moveNext$0$bailout(1, t1, t2);
    ++t2;
    t1._liblib6$_offset = t2;
    t3 = t1._liblib6$_end;
    if (typeof t3 !== "number")
      throw $.iae(t3);
    if (!(t2 < t3))
      return false;
    t2 = t1._source;
    if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !$.isJsIndexable(t2, t2[$.dispatchPropertyName])))
      return this.moveNext$0$bailout(2, t1, t2, t3);
    t4 = t1._liblib6$_offset;
    t5 = $.getInterceptor(t2);
    if (t4 >>> 0 !== t4 || t4 >= t2.length)
      throw $.ioore(t4);
    value = t2[t4];
    if (typeof value !== "number")
      return this.moveNext$0$bailout(3, t1, t2, t3, t5, value);
    if (value < 0) {
      t1 = this.replacementCodepoint;
      if (t1 != null) {
        this._liblib6$_current = t1;
        return true;
      } else
        throw $.wrapException(new $.ArgumentError("Invalid UTF8 at " + t4));
    } else if (value <= 127) {
      this._liblib6$_current = value;
      return true;
    } else if (value < 192) {
      t1 = this.replacementCodepoint;
      if (t1 != null) {
        this._liblib6$_current = t1;
        return true;
      } else
        throw $.wrapException(new $.ArgumentError("Invalid UTF8 at " + t4));
    } else if (value < 224) {
      value -= 192;
      additionalBytes = 1;
    } else if (value < 240) {
      value -= 224;
      additionalBytes = 2;
    } else if (value < 248) {
      value -= 240;
      additionalBytes = 3;
    } else if (value < 252) {
      value -= 248;
      additionalBytes = 4;
    } else {
      if (value < 254)
        value -= 252;
      else {
        t1 = this.replacementCodepoint;
        if (t1 != null) {
          this._liblib6$_current = t1;
          return true;
        } else
          throw $.wrapException(new $.ArgumentError("Invalid UTF8 at " + t4));
      }
      additionalBytes = 5;
    }
    j = 0;
    while (true) {
      if (j < additionalBytes) {
        t4 = t1._liblib6$_offset;
        if (typeof t4 !== "number")
          return this.moveNext$0$bailout(4, t1, t2, t3, t5, value, additionalBytes, j, t4);
        ++t4;
        t1._liblib6$_offset = t4;
        t4 = t4 < t3;
      } else
        t4 = false;
      if (!t4)
        break;
      t4 = t1._liblib6$_offset;
      if (t4 >>> 0 !== t4 || t4 >= t2.length)
        throw $.ioore(t4);
      nextValue = t2[t4];
      if (typeof nextValue !== "number")
        return this.moveNext$0$bailout(5, t1, t2, t3, t5, value, additionalBytes, j, 0, nextValue);
      if (nextValue > 127 && nextValue < 192)
        value = (value << 6 | nextValue & 63) >>> 0;
      else {
        if (nextValue >= 192)
          t1._liblib6$_offset = t4 - 1;
        break;
      }
      ++j;
    }
    if (j === additionalBytes)
      validSequence = value < 55296 || value > 57343;
    else
      validSequence = false;
    if (!(additionalBytes === 1 && value > 127))
      if (!(additionalBytes === 2 && value > 2047)) {
        t2 = additionalBytes === 3 && value > 65535;
        nonOverlong = t2;
      } else
        nonOverlong = true;
    else
      nonOverlong = true;
    inRange = value <= 1114111;
    if (validSequence && nonOverlong && inRange) {
      this._liblib6$_current = value;
      return true;
    } else {
      t2 = this.replacementCodepoint;
      if (t2 != null) {
        this._liblib6$_current = t2;
        return true;
      } else {
        t1 = t1._liblib6$_offset;
        if (typeof t1 !== "number")
          return this.moveNext$0$bailout(7, t1, 0, 0, 0, 0, 0, j);
        throw $.wrapException(new $.ArgumentError("Invalid UTF8 at " + $.S(t1 - j)));
      }
    }
  },
  moveNext$0$bailout: function(state0, t1, t2, t3, t4, value, additionalBytes, j, t5, nextValue) {
    switch (state0) {
      case 0:
        this._liblib6$_current = null;
        t1 = this.utf8EncodedBytesIterator;
        t2 = t1._liblib6$_offset;
      case 1:
        state0 = 0;
        t2 = $.$add$ns(t2, 1);
        t1._liblib6$_offset = t2;
        t3 = t1._liblib6$_end;
        if (typeof t3 !== "number")
          throw $.iae(t3);
        if (!$.$lt$n(t2, t3))
          return false;
        t2 = t1._source;
      case 2:
        state0 = 0;
        t4 = $.getInterceptor$asx(t2);
        value = t4.$index(t2, t1._liblib6$_offset);
      case 3:
        state0 = 0;
        t5 = $.getInterceptor$n(value);
        if (t5.$lt(value, 0)) {
          t2 = this.replacementCodepoint;
          if (t2 != null) {
            this._liblib6$_current = t2;
            return true;
          } else
            throw $.wrapException(new $.ArgumentError("Invalid UTF8 at " + $.S(t1._liblib6$_offset)));
        } else if (t5.$le(value, 127)) {
          this._liblib6$_current = value;
          return true;
        } else if (t5.$lt(value, 192)) {
          t2 = this.replacementCodepoint;
          if (t2 != null) {
            this._liblib6$_current = t2;
            return true;
          } else
            throw $.wrapException(new $.ArgumentError("Invalid UTF8 at " + $.S(t1._liblib6$_offset)));
        } else if (t5.$lt(value, 224)) {
          value = t5.$sub(value, 192);
          additionalBytes = 1;
        } else if (t5.$lt(value, 240)) {
          value = t5.$sub(value, 224);
          additionalBytes = 2;
        } else if (t5.$lt(value, 248)) {
          value = t5.$sub(value, 240);
          additionalBytes = 3;
        } else if (t5.$lt(value, 252)) {
          value = t5.$sub(value, 248);
          additionalBytes = 4;
        } else {
          if (t5.$lt(value, 254))
            value = t5.$sub(value, 252);
          else {
            t2 = this.replacementCodepoint;
            if (t2 != null) {
              this._liblib6$_current = t2;
              return true;
            } else
              throw $.wrapException(new $.ArgumentError("Invalid UTF8 at " + $.S(t1._liblib6$_offset)));
          }
          additionalBytes = 5;
        }
        j = 0;
      default:
        L0:
          while (true)
            switch (state0) {
              case 0:
              case 4:
                if (state0 === 4 || state0 === 0 && j < additionalBytes)
                  switch (state0) {
                    case 0:
                      t5 = t1._liblib6$_offset;
                    case 4:
                      state0 = 0;
                      t5 = $.$add$ns(t5, 1);
                      t1._liblib6$_offset = t5;
                      t5 = $.$lt$n(t5, t3);
                  }
                else
                  t5 = false;
                if (!t5)
                  break L0;
                nextValue = t4.$index(t2, t1._liblib6$_offset);
              case 5:
                state0 = 0;
                t5 = $.getInterceptor$n(nextValue);
              case 6:
                if (state0 === 0 && t5.$gt(nextValue, 127) && t5.$lt(nextValue, 192)) {
                  if (typeof value !== "number")
                    throw value.$shl();
                  if (typeof nextValue !== "number")
                    throw nextValue.$and();
                  value = (value << 6 | nextValue & 63) >>> 0;
                } else
                  switch (state0) {
                    case 0:
                    case 6:
                      if (state0 === 6 || state0 === 0 && t5.$ge(nextValue, 192))
                        switch (state0) {
                          case 0:
                            t2 = t1._liblib6$_offset;
                          case 6:
                            state0 = 0;
                            t1._liblib6$_offset = $.$sub$n(t2, 1);
                        }
                      break L0;
                  }
                ++j;
            }
        if (j === additionalBytes) {
          t2 = $.getInterceptor$n(value);
          validSequence = t2.$lt(value, 55296) || t2.$gt(value, 57343);
        } else
          validSequence = false;
        if (!(additionalBytes === 1 && $.$gt$n(value, 127)))
          if (!(additionalBytes === 2 && $.$gt$n(value, 2047))) {
            t2 = additionalBytes === 3 && $.$gt$n(value, 65535);
            nonOverlong = t2;
          } else
            nonOverlong = true;
        else
          nonOverlong = true;
        inRange = $.$le$n(value, 1114111);
      case 7:
        var validSequence, nonOverlong, inRange;
        if (state0 === 0 && validSequence && nonOverlong && inRange) {
          this._liblib6$_current = value;
          return true;
        } else
          switch (state0) {
            case 0:
              t2 = this.replacementCodepoint;
            case 7:
              if (state0 === 0 && t2 != null) {
                this._liblib6$_current = t2;
                return true;
              } else
                switch (state0) {
                  case 0:
                    t1 = t1._liblib6$_offset;
                  case 7:
                    state0 = 0;
                    throw $.wrapException(new $.ArgumentError("Invalid UTF8 at " + $.S($.$sub$n(t1, j))));
                }
          }
    }
  }
},

_ListRange$: function(source, offset, $length) {
  var t1 = $length == null ? $.$sub$n($.get$length$asx(source), offset) : $length;
  t1 = new $._ListRange(source, offset, t1);
  t1._ListRange$3(source, offset, $length);
  return t1;
},

_ListRangeIteratorImpl$: function(_source, offset, _end) {
  return new $._ListRangeIteratorImpl(_source, $.$sub$n(offset, 1), _end);
},

decodeUtf8: function(bytes, offset, $length, replacementCodepoint) {
  return $.String_String$fromCharCodes($.Utf8Decoder$(bytes, offset, $length, replacementCodepoint).decodeRest$0());
},

Utf8Decoder$: function(utf8EncodedBytes, offset, $length, replacementCodepoint) {
  var t1 = $._ListRange$(utf8EncodedBytes, offset, $length);
  return new $.Utf8Decoder(t1.get$iterator(t1), replacementCodepoint, null);
}}],
["fpsstats", "package:stats/stats.dart", , {
Stats: {"": "Object;_timer,_ms,_msMin,_msMax,_fps,_fpsMin,_fpsMax,_frames,_mode,container,fpsDiv,msDiv,msText,msGraph,fpsGraph,fpsText",
  _onContainerMouseDown$1: function(e) {
    var t1;
    $.preventDefault$0$x(e);
    t1 = $.$add$ns(this.get$mode(this), 1);
    this.set$mode(this, t1);
    if (typeof t1 !== "number")
      throw t1.$mod();
    this.set$mode(this, $.JSNumber_methods.$mod(t1, 2));
  },
  get$_onContainerMouseDown: function() {
    return new $.BoundClosure$1(this, "_onContainerMouseDown$1", null);
  },
  _createUi$0: function() {
    var t1, t2, bar;
    t1 = $.DivElement_DivElement();
    t2 = $.getInterceptor$x(t1);
    t2.set$id(t1, "stats");
    t2.get$onMouseDown(t1).listen$1(this.get$_onContainerMouseDown());
    t1.style.cssText = "width:80px;opacity:0.9;cursor:pointer";
    this.container = t1;
    t1 = $.DivElement_DivElement();
    $.set$id$x(t1, "fps");
    t1.style.cssText = "padding:0 0 3px 3px;text-align:left;background-color:#002";
    this.fpsDiv = t1;
    $.append$1$x(this.container, this.fpsDiv);
    t1 = $.DivElement_DivElement();
    $.set$id$x(t1, "fpsText");
    t1.style.cssText = "color:#0ff;font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px";
    t1.textContent = "FPS";
    this.fpsText = t1;
    $.append$1$x(this.fpsDiv, this.fpsText);
    t1 = $.DivElement_DivElement();
    $.set$id$x(t1, "fpsGraph");
    t1.style.cssText = "position:relative;width:74px;height:30px;background-color:#0ff";
    this.fpsGraph = t1;
    $.append$1$x(this.fpsDiv, this.fpsGraph);
    for (; $.$lt$n($.get$length$asx($.get$children$x(this.fpsGraph)), 74);) {
      bar = document.createElement("span");
      bar.style.cssText = "width:1px;height:30px;float:left;background-color:#113";
      $.append$1$x(this.fpsGraph, bar);
    }
    t1 = $.DivElement_DivElement();
    $.set$id$x(t1, "ms");
    t1.style.cssText = "padding:0 0 3px 3px;text-align:left;background-color:#020;display:none";
    this.msDiv = t1;
    $.append$1$x(this.container, this.msDiv);
    t1 = $.DivElement_DivElement();
    $.set$id$x(t1, "msText");
    t1.style.cssText = "color:#0f0;font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px";
    t1.textContent = "MS";
    this.msText = t1;
    $.append$1$x(this.msDiv, this.msText);
    t1 = $.DivElement_DivElement();
    $.set$id$x(t1, "msGraph");
    t1.style.cssText = "position:relative;width:74px;height:30px;background-color:#0f0";
    this.msGraph = t1;
    $.append$1$x(this.msDiv, this.msGraph);
    for (; $.$lt$n($.get$length$asx($.get$children$x(this.msGraph)), 74);) {
      bar = document.createElement("span");
      bar.style.cssText = "width:1px;height:30px;float:left;background-color:#131";
      $.append$1$x(this.msGraph, bar);
    }
  },
  set$mode: function(_, value) {
    if (!$.$eq(this._mode, value)) {
      this._mode = value;
      switch (this.get$mode(this)) {
        case 0:
          $.set$display$x($.get$style$x(this.fpsDiv), "block");
          $.set$display$x($.get$style$x(this.msDiv), "none");
          break;
        case 1:
          $.set$display$x($.get$style$x(this.fpsDiv), "none");
          $.set$display$x($.get$style$x(this.msDiv), "block");
          break;
      }
    }
  },
  get$mode: function(_) {
    return this._mode;
  },
  begin$0: function() {
    var t1 = this._timer;
    t1.start$0(t1);
  },
  end$0: function(_) {
    var t1, time, t2, t3, t4, first, truncated;
    t1 = this._timer;
    time = $.JSNumber_methods.$tdiv(t1.get$elapsedTicks() * 1000, t1.get$frequency(t1));
    this._ms = $.JSNumber_methods.$tdiv(t1.get$elapsedTicks() * 1000, t1.get$frequency(t1));
    this._msMin = $.min(this._msMin, this._ms);
    this._msMax = $.max(this._msMax, this._ms);
    $.set$text$x(this.msText, $.S(this._ms) + " MS (" + $.S(this._msMin) + " - " + $.S(this._msMax) + ")");
    t2 = this.msGraph;
    t3 = $.min(30, 30 - this._ms / 200 * 30);
    t4 = $.getInterceptor$x(t2);
    first = $.get$first$ax(t4.get$children(t2));
    $.add$1$ax(t4.get$children(t2), first);
    $.set$height$x($.get$style$x(first), $.S($.JSNumber_methods.toInt$0(t3)) + "px");
    this._frames = this._frames + 1;
    if (time > 1000) {
      t2 = $.JSNumber_methods.toInt$0($.JSNumber_methods.roundToDouble$0(this._frames * 1000 / this._ms));
      if ($.JSNumber_methods.get$isNaN(t2))
        $.throwExpression($.UnsupportedError$("NaN"));
      if ($.JSNumber_methods.get$isInfinite(t2))
        $.throwExpression($.UnsupportedError$("Infinity"));
      truncated = $.JSNumber_methods.truncateToDouble$0(t2);
      this._fps = truncated == -0.0 ? 0 : truncated;
      this._fpsMin = $.min(this._fpsMin, this._fps);
      this._fpsMax = $.max(this._fpsMax, this._fps);
      $.set$text$x(this.fpsText, $.S(this._fps) + " FPS (" + $.S(this._fpsMin) + " - " + $.S(this._fpsMax) + ")");
      t2 = this.fpsGraph;
      t3 = $.min(30, 30 - this._fps / 100 * 30);
      t4 = $.getInterceptor$x(t2);
      first = $.get$first$ax(t4.get$children(t2));
      $.add$1$ax(t4.get$children(t2), first);
      $.set$height$x($.get$style$x(first), $.S($.JSNumber_methods.toInt$0(t3)) + "px");
      t1.reset$0(t1);
      this._frames = 0;
    }
    return time;
  },
  Stats$0: function() {
    this._createUi$0();
  }
},

Stats$: function() {
  var t1 = new $.Stats($.Stopwatch$(), 0, 1000, 0, 0, 1000, 0, 0, 0, null, null, null, null, null, null, null);
  t1.Stats$0();
  return t1;
}}],
["game_loop_common", "package:game_loop/game_loop_common.dart", , {
GameLoop: {"": "Object;",
  get$time: function() {
    return $.GameLoop_timeStampToSeconds($.DateTime_DateTime$now().millisecondsSinceEpoch);
  },
  processTimers$0: function() {
    var t1, _timersLength, t2, i, lastElement;
    t1 = this._timers;
    _timersLength = t1.length;
    for (t2 = this.updateTimeStep, i = 0; i < _timersLength; ++i)
      t1[i]._update$1(t2);
    for (i = _timersLength - 1; i >= 0; --i) {
      t2 = t1.length;
      lastElement = t2 - 1;
      if (i >= t2)
        throw $.ioore(i);
      t1[i].get$_isDead();
    }
  },
  onUpdate$1: function(arg0) {
    return this.onUpdate.call$1(arg0);
  }
},

DigitalButton: {"": "Object;buttonId,framePressed@,frameReleased?,timePressed?,timeReleased?",
  get$down: function() {
    return this.framePressed > this.frameReleased;
  }
},

DigitalButtonEvent: {"": "Object;down<,frame,buttonId,time",
  toString$0: function(_) {
    return "Button: " + $.S(this.buttonId) + " DOWN: " + this.down + " [" + this.frame + "@" + $.S(this.time) + "]";
  }
},

DigitalInput: {"": "Object;gameLoop<",
  digitalButtonEvent$1: function($event) {
    var t1, button;
    t1 = this.buttons;
    button = t1.$index(t1, $event.buttonId);
    if (button == null)
      return;
    if ($event.down) {
      if (!button.get$down()) {
        button.set$framePressed($event.frame);
        button.set$timePressed($event.time);
      }
    } else {
      button.set$frameReleased($event.frame);
      button.set$timeReleased($event.time);
    }
  },
  pressed$1: function(buttonId) {
    var t1, button;
    t1 = this.buttons;
    button = t1.$index(t1, buttonId);
    if (button == null)
      return false;
    return button.get$framePressed() === this.gameLoop.get$frame();
  },
  DigitalInput$2: function(gameLoop, buttonIds) {
    var t1, t2, buttonId;
    for (t1 = $.JSArray_methods.get$iterator(buttonIds), t2 = this.buttons; t1.moveNext$0();) {
      buttonId = t1._current;
      t2.$indexSet(t2, buttonId, new $.DigitalButton(buttonId, 0, 0, 0, 0));
    }
  }
},

GameLoopTimer: {"": "Object;gameLoop<"},

GameLoop_timeStampToSeconds: function(timeStamp) {
  if (typeof timeStamp !== "number")
    return $.GameLoop_timeStampToSeconds$bailout(1, timeStamp);
  return timeStamp / 1000;
},

GameLoop_timeStampToSeconds$bailout: function(state0, timeStamp) {
  return $.$div$n(timeStamp, 1000);
}}],
["game_loop_html", "package:game_loop/game_loop_html.dart", , {
GameLoopGamepad: {"": "Object;gameLoop<,buttons,sticks"},

GameLoopHtml: {"": "GameLoop;element,_frameCounter,_initialized,_interrupt,_previousFrameTime,_frameTime,_resizePending,_nextResize,maxAccumulatedTime,_accumulatedTime,_gameTime,_renderInterpolationFactor,resizeLimit,_pointerLock,_keyboard,_mouse,_gamepad0,_lastMousePos,_touchSet,_rafId,_touchEvents,_keyboardEvents,_mouseEvents,onRender,onResize,onFullscreenChange,onPointerLockChange,onTouchStart,onTouchEnd,updateTimeStep,lib8$GameLoop$maxAccumulatedTime,_timers,onUpdate",
  get$frame: function() {
    return this._frameCounter;
  },
  get$gameTime: function() {
    return this._gameTime;
  },
  get$renderInterpolationFactor: function() {
    return this._renderInterpolationFactor;
  },
  get$pointerLock: function() {
    return this._pointerLock;
  },
  get$mouse: function() {
    return this._mouse;
  },
  _processInputEvents$0: function() {
    this._processKeyboardEvents$0();
    this._processMouseEvents$0();
    this._processTouchEvents$0();
  },
  _processKeyboardEvents$0: function() {
    var t1, t2, keyboardEvent, t3, t4, t5, buttonId;
    for (t1 = this._keyboardEvents, t2 = $.JSArray_methods.get$iterator(t1); t2.moveNext$0();) {
      keyboardEvent = t2._current;
      t3 = $.getInterceptor$x(keyboardEvent);
      t4 = t3.get$type(keyboardEvent);
      t5 = t3.get$timeStamp(keyboardEvent);
      if (t5 == null)
        throw t5.$div();
      buttonId = t3.get$keyCode(keyboardEvent);
      t3 = this._frameCounter;
      this._keyboard.digitalButtonEvent$1(new $.DigitalButtonEvent(t4 === "keydown", t3, buttonId, t5 / 1000));
    }
    $.JSArray_methods.clear$0(t1);
  },
  _processMouseEvents$0: function() {
    var docElem, t1, box, t2, canvasX, canvasY, t3, mouseEvent, t4, t5, t6, time, mouseX, mouseY, x, y, clampX, withinCanvas, t7, t8, t9, t10, t11, clampY, dx, dy, buttonId;
    this.get$mouse()._resetAccumulators$0();
    docElem = $.document().documentElement;
    t1 = this.element;
    box = t1.getBoundingClientRect();
    t2 = $.getInterceptor$x(box);
    canvasX = $.floor$0$nx($.$sub$n($.$add$ns(t2.get$left(box), $.window().pageXOffset), docElem.clientLeft));
    if (typeof canvasX !== "number")
      return this._processMouseEvents$0$bailout(1, docElem, t1, t2, box, canvasX);
    canvasY = $.floor$0$nx($.$sub$n($.$add$ns(t2.get$top(box), $.window().pageYOffset), docElem.clientTop));
    if (typeof canvasY !== "number")
      return this._processMouseEvents$0$bailout(2, 0, t1, 0, 0, canvasX, canvasY);
    for (t2 = this._mouseEvents, t3 = $.JSArray_methods.get$iterator(t2); t3.moveNext$0();) {
      mouseEvent = t3._current;
      t4 = $.getInterceptor$x(mouseEvent);
      t5 = t4.get$type(mouseEvent);
      t6 = t4.get$timeStamp(mouseEvent);
      if (t6 == null)
        throw t6.$div();
      time = t6 / 1000;
      if (t5 === "mousemove") {
        mouseX = $.get$x$x(t4.get$page(mouseEvent));
        mouseY = $.get$y$x(t4.get$page(mouseEvent));
        t5 = $.getInterceptor$n(mouseX);
        x = t5.$sub(mouseX, canvasX);
        t6 = $.getInterceptor$n(mouseY);
        y = t6.$sub(mouseY, canvasY);
        if (t5.$lt(mouseX, canvasX)) {
          clampX = 0;
          withinCanvas = false;
        } else {
          t1.get$client;
          t7 = t1.clientLeft;
          t8 = t1.clientTop;
          t9 = t1.clientWidth;
          t10 = t1.clientHeight;
          t11 = new $.Rect(t7, t8, t9, t10).width;
          if (typeof t11 !== "number")
            throw $.iae(t11);
          if (t5.$gt(mouseX, canvasX + t11)) {
            clampX = new $.Rect(t7, t8, t9, t10).width;
            withinCanvas = false;
          } else {
            clampX = x;
            withinCanvas = true;
          }
        }
        if (t6.$lt(mouseY, canvasY)) {
          clampY = 0;
          withinCanvas = false;
        } else {
          t1.get$client;
          t5 = t1.clientLeft;
          t7 = t1.clientTop;
          t8 = t1.clientWidth;
          t9 = t1.clientHeight;
          t10 = new $.Rect(t5, t7, t8, t9).height;
          if (typeof t10 !== "number")
            throw $.iae(t10);
          if (t6.$gt(mouseY, canvasY + t10)) {
            clampY = new $.Rect(t5, t7, t8, t9).height;
            withinCanvas = false;
          } else
            clampY = y;
        }
        t5 = t4.get$client(mouseEvent);
        t5 = t5.get$x(t5);
        t6 = this._lastMousePos;
        dx = $.$sub$n(t5, t6.get$x(t6));
        t6 = t4.get$client(mouseEvent);
        t6 = t6.get$y(t6);
        t5 = this._lastMousePos;
        dy = $.$sub$n(t6, t5.get$y(t5));
        this._lastMousePos = t4.get$client(mouseEvent);
        t4 = this._frameCounter;
        this._mouse.gameLoopMouseEvent$1(new $.GameLoopMouseEvent(x, y, dx, dy, clampX, clampY, time, withinCanvas, t4));
      } else {
        t6 = this._mouse;
        if (t5 === "mousewheel") {
          $.interceptedTypeCast(mouseEvent, "$isWheelEvent");
          t5 = t4.get$deltaX(mouseEvent);
          t4 = t4.get$deltaY(mouseEvent);
          t6._accumulateWheel$2;
          t6._wheelDx = t6._wheelDx + t5;
          t6._wheelDy = t6._wheelDy + t4;
        } else {
          buttonId = t4.get$button(mouseEvent);
          t6.digitalButtonEvent$1(new $.DigitalButtonEvent(t5 === "mousedown", this._frameCounter, buttonId, time));
        }
      }
    }
    $.JSArray_methods.clear$0(t2);
  },
  _processMouseEvents$0$bailout: function(state0, docElem, t1, t2, box, canvasX, canvasY) {
    switch (state0) {
      case 0:
        this.get$mouse()._resetAccumulators$0();
        docElem = $.document().documentElement;
        t1 = this.element;
        box = t1.getBoundingClientRect();
        t2 = $.getInterceptor$x(box);
        canvasX = $.floor$0$nx($.$sub$n($.$add$ns(t2.get$left(box), $.window().pageXOffset), docElem.clientLeft));
      case 1:
        state0 = 0;
        canvasY = $.floor$0$nx($.$sub$n($.$add$ns(t2.get$top(box), $.window().pageYOffset), docElem.clientTop));
      case 2:
        var t3, t4, t5, mouseEvent, t6, t7, t8, time, mouseX, mouseY, x, y, clampX, withinCanvas, clampY, dx, dy, buttonId;
        state0 = 0;
        for (t2 = this._mouseEvents, t3 = $.JSArray_methods.get$iterator(t2), t4 = $.getInterceptor$ns(canvasX), t5 = $.getInterceptor$ns(canvasY); t3.moveNext$0();) {
          mouseEvent = t3._current;
          t6 = $.getInterceptor$x(mouseEvent);
          t7 = t6.get$type(mouseEvent);
          t8 = t6.get$timeStamp(mouseEvent);
          if (t8 == null)
            throw t8.$div();
          time = t8 / 1000;
          if (t7 === "mousemove") {
            mouseX = $.get$x$x(t6.get$page(mouseEvent));
            mouseY = $.get$y$x(t6.get$page(mouseEvent));
            t7 = $.getInterceptor$n(mouseX);
            x = t7.$sub(mouseX, canvasX);
            t8 = $.getInterceptor$n(mouseY);
            y = t8.$sub(mouseY, canvasY);
            if (t7.$lt(mouseX, canvasX)) {
              clampX = 0;
              withinCanvas = false;
            } else {
              t1.get$client;
              if (t7.$gt(mouseX, t4.$add(canvasX, new $.Rect(t1.clientLeft, t1.clientTop, t1.clientWidth, t1.clientHeight).width))) {
                t1.get$client;
                clampX = new $.Rect(t1.clientLeft, t1.clientTop, t1.clientWidth, t1.clientHeight).width;
                withinCanvas = false;
              } else {
                clampX = x;
                withinCanvas = true;
              }
            }
            if (t8.$lt(mouseY, canvasY)) {
              clampY = 0;
              withinCanvas = false;
            } else {
              t1.get$client;
              if (t8.$gt(mouseY, t5.$add(canvasY, new $.Rect(t1.clientLeft, t1.clientTop, t1.clientWidth, t1.clientHeight).height))) {
                t1.get$client;
                clampY = new $.Rect(t1.clientLeft, t1.clientTop, t1.clientWidth, t1.clientHeight).height;
                withinCanvas = false;
              } else
                clampY = y;
            }
            t7 = t6.get$client(mouseEvent);
            t7 = t7.get$x(t7);
            t8 = this._lastMousePos;
            dx = $.$sub$n(t7, t8.get$x(t8));
            t8 = t6.get$client(mouseEvent);
            t8 = t8.get$y(t8);
            t7 = this._lastMousePos;
            dy = $.$sub$n(t8, t7.get$y(t7));
            this._lastMousePos = t6.get$client(mouseEvent);
            t6 = this._frameCounter;
            this._mouse.gameLoopMouseEvent$1(new $.GameLoopMouseEvent(x, y, dx, dy, clampX, clampY, time, withinCanvas, t6));
          } else {
            t8 = this._mouse;
            if (t7 === "mousewheel") {
              $.interceptedTypeCast(mouseEvent, "$isWheelEvent");
              t7 = t6.get$deltaX(mouseEvent);
              t6 = t6.get$deltaY(mouseEvent);
              t8._accumulateWheel$2;
              t8._wheelDx = t8._wheelDx + t7;
              t8._wheelDy = t8._wheelDy + t6;
            } else {
              buttonId = t6.get$button(mouseEvent);
              t8.digitalButtonEvent$1(new $.DigitalButtonEvent(t7 === "mousedown", this._frameCounter, buttonId, time));
            }
          }
        }
        $.JSArray_methods.clear$0(t2);
    }
  },
  _processTouchEvents$0: function() {
    var t1, t2, touchEvent, t3;
    for (t1 = this._touchEvents, t2 = $.JSArray_methods.get$iterator(t1); t2.moveNext$0();) {
      touchEvent = t2._current;
      t3 = $.getInterceptor$x(touchEvent);
      switch (t3.get$type(touchEvent)) {
        case 3:
          this._touchSet._start$1(t3.get$event(touchEvent));
          break;
        case 2:
          this._touchSet._liblib3$_end$1(t3.get$event(touchEvent));
          break;
        case 1:
          this._touchSet._move$1(t3.get$event(touchEvent));
          break;
        default:
          throw $.wrapException(new $.StateError("Invalid _GameLoopTouchEven type."));
      }
    }
    $.JSArray_methods.clear$0(t1);
  },
  _requestAnimationFrame$1: function(_, _0) {
    var t1, t2;
    if (this._previousFrameTime == null) {
      this._frameTime = this.get$time();
      this._previousFrameTime = this._frameTime;
      this._processInputEvents$0();
      this._rafId = $.Window_methods.requestAnimationFrame$1($.window(), this.get$_requestAnimationFrame(this));
      return;
    }
    if (this._interrupt) {
      this._rafId = null;
      return;
    }
    this._rafId = $.Window_methods.requestAnimationFrame$1($.window(), this.get$_requestAnimationFrame(this));
    this._frameCounter = this._frameCounter + 1;
    this._previousFrameTime = this._frameTime;
    this._frameTime = this.get$time();
    t1 = this._frameTime;
    if (typeof t1 !== "number")
      return this._requestAnimationFrame$1$bailout(1, t1);
    t2 = this._previousFrameTime;
    if (typeof t2 !== "number")
      return this._requestAnimationFrame$1$bailout(2, t1, t2);
    this._accumulatedTime = this._accumulatedTime + (t1 - t2);
    t1 = this.maxAccumulatedTime;
    if (this._accumulatedTime > t1)
      this._accumulatedTime = t1;
    this._processInputEvents$0();
    for (t1 = this.updateTimeStep; this._accumulatedTime >= t1;) {
      this.processTimers$0();
      this._gameTime = this._gameTime + t1;
      if (this.onUpdate != null)
        this.onUpdate$1(this);
      this._accumulatedTime = this._accumulatedTime - t1;
    }
    if (this._resizePending)
      t2 = false;
    else
      t2 = false;
    if (t2) {
      this.onResize$1(this, this);
      t2 = this._frameTime;
      if (typeof t2 !== "number")
        return this._requestAnimationFrame$1$bailout(3, t1, t2);
      this._nextResize = t2 + this.resizeLimit;
      this._resizePending = false;
    }
    if (this.onRender != null) {
      this._renderInterpolationFactor = this._accumulatedTime / t1;
      this.onRender$1(this);
    }
  },
  _requestAnimationFrame$1$bailout: function(state0, t1, t2) {
    switch (state0) {
      case 0:
        if (this._previousFrameTime == null) {
          this._frameTime = this.get$time();
          this._previousFrameTime = this._frameTime;
          this._processInputEvents$0();
          this._rafId = $.Window_methods.requestAnimationFrame$1($.window(), this.get$_requestAnimationFrame(this));
          return;
        }
        if (this._interrupt) {
          this._rafId = null;
          return;
        }
        this._rafId = $.Window_methods.requestAnimationFrame$1($.window(), this.get$_requestAnimationFrame(this));
        this._frameCounter = this._frameCounter + 1;
        this._previousFrameTime = this._frameTime;
        this._frameTime = this.get$time();
        t1 = this._frameTime;
      case 1:
        state0 = 0;
        t2 = this._previousFrameTime;
      case 2:
        state0 = 0;
        timeDelta = $.$sub$n(t1, t2);
        t2 = this._accumulatedTime;
        if (typeof timeDelta !== "number")
          throw $.iae(timeDelta);
        this._accumulatedTime = t2 + timeDelta;
        t1 = this.maxAccumulatedTime;
        if (this._accumulatedTime > t1)
          this._accumulatedTime = t1;
        this._processInputEvents$0();
        for (t1 = this.updateTimeStep; this._accumulatedTime >= t1;) {
          this.processTimers$0();
          this._gameTime = this._gameTime + t1;
          if (this.onUpdate != null)
            this.onUpdate$1(this);
          this._accumulatedTime = this._accumulatedTime - t1;
        }
        if (this._resizePending)
          t2 = false;
        else
          t2 = false;
      case 3:
        var timeDelta;
        if (state0 === 3 || state0 === 0 && t2)
          switch (state0) {
            case 0:
              this.onResize$1(this, this);
              t2 = this._frameTime;
            case 3:
              state0 = 0;
              this._nextResize = $.$add$ns(t2, this.resizeLimit);
              this._resizePending = false;
          }
        if (this.onRender != null) {
          this._renderInterpolationFactor = this._accumulatedTime / t1;
          this.onRender$1(this);
        }
    }
  },
  get$_requestAnimationFrame: function(_receiver) {
    return new $.BoundClosure$i1(this, "_requestAnimationFrame$1", _receiver);
  },
  _fullscreenChange$1: function(_) {
    return;
    this.onFullscreenChange$1(this, this);
  },
  get$_fullscreenChange: function() {
    return new $.BoundClosure$1(this, "_fullscreenChange$1", null);
  },
  _fullscreenError$1: function(_) {
    return;
    this.onFullscreenChange$1(this, this);
  },
  get$_fullscreenError: function() {
    return new $.BoundClosure$1(this, "_fullscreenError$1", null);
  },
  _touchStartEvent$1: function($event) {
    this._touchEvents.push($._GameLoopTouchEvent$($event, 3));
    $.preventDefault$0$x($event);
  },
  get$_touchStartEvent: function() {
    return new $.BoundClosure$1(this, "_touchStartEvent$1", null);
  },
  _touchMoveEvent$1: function($event) {
    this._touchEvents.push($._GameLoopTouchEvent$($event, 1));
    $.preventDefault$0$x($event);
  },
  get$_touchMoveEvent: function() {
    return new $.BoundClosure$1(this, "_touchMoveEvent$1", null);
  },
  _touchEndEvent$1: function($event) {
    this._touchEvents.push($._GameLoopTouchEvent$($event, 2));
    $.preventDefault$0$x($event);
  },
  get$_touchEndEvent: function() {
    return new $.BoundClosure$1(this, "_touchEndEvent$1", null);
  },
  _keyDown$1: function($event) {
    this._keyboardEvents.push($event);
  },
  get$_keyDown: function() {
    return new $.BoundClosure$1(this, "_keyDown$1", null);
  },
  _keyUp$1: function($event) {
    this._keyboardEvents.push($event);
  },
  get$_keyUp: function() {
    return new $.BoundClosure$1(this, "_keyUp$1", null);
  },
  _mouseDown$1: function($event) {
    this._mouseEvents.push($event);
  },
  get$_mouseDown: function() {
    return new $.BoundClosure$1(this, "_mouseDown$1", null);
  },
  _mouseUp$1: function($event) {
    this._mouseEvents.push($event);
  },
  get$_mouseUp: function() {
    return new $.BoundClosure$1(this, "_mouseUp$1", null);
  },
  _mouseMove$1: function($event) {
    this._mouseEvents.push($event);
  },
  get$_mouseMove: function() {
    return new $.BoundClosure$1(this, "_mouseMove$1", null);
  },
  _mouseWheel$1: function($event) {
    this._mouseEvents.push($event);
    $.preventDefault$0$x($event);
  },
  get$_mouseWheel: function() {
    return new $.BoundClosure$1(this, "_mouseWheel$1", null);
  },
  _resize$1: function(_) {
    if (!this._resizePending)
      this._resizePending = true;
  },
  get$_resize: function() {
    return new $.BoundClosure$1(this, "_resize$1", null);
  },
  start$0: function(_) {
    var t1, t2;
    if (!this._initialized) {
      $.HtmlDocument_methods.get$onFullscreenError($.document()).listen$1(this.get$_fullscreenError());
      $.HtmlDocument_methods.get$onFullscreenChange($.document()).listen$1(this.get$_fullscreenChange());
      t1 = this.element;
      t2 = $.getInterceptor$x(t1);
      t2.get$onTouchStart(t1).listen$1(this.get$_touchStartEvent());
      t2.get$onTouchEnd(t1).listen$1(this.get$_touchEndEvent());
      t2.get$onTouchCancel(t1).listen$1(this.get$_touchEndEvent());
      t2.get$onTouchMove(t1).listen$1(this.get$_touchMoveEvent());
      $.Window_methods.get$onKeyDown($.window()).listen$1(this.get$_keyDown());
      $.Window_methods.get$onKeyUp($.window()).listen$1(this.get$_keyUp());
      $.Window_methods.get$onResize($.window()).listen$1(this.get$_resize());
      t2.get$onMouseMove(t1).listen$1(this.get$_mouseMove());
      t2.get$onMouseDown(t1).listen$1(this.get$_mouseDown());
      t2.get$onMouseUp(t1).listen$1(this.get$_mouseUp());
      t2.get$onMouseWheel(t1).listen$1(this.get$_mouseWheel());
      this._initialized = true;
    }
    this._interrupt = false;
    this._rafId = $.Window_methods.requestAnimationFrame$1($.window(), this.get$_requestAnimationFrame(this));
  },
  stop$0: function(_) {
    var t1 = this._rafId;
    if (t1 != null) {
      $.Window_methods.cancelAnimationFrame$1($.window(), t1);
      this._rafId = null;
    }
    this._interrupt = true;
  },
  onRender$1: function(arg0) {
    return this.onRender.call$1(arg0);
  },
  onResize$1: function($receiver, arg0) {
    return this.onResize.call$1(arg0);
  },
  onFullscreenChange$1: function($receiver, arg0) {
    return this.onFullscreenChange.call$1(arg0);
  },
  GameLoopHtml$1: function(element) {
    this._keyboard = $.Keyboard$(this);
    this._mouse = $.Mouse$(this);
    this._gamepad0 = $.GameLoopGamepad$(this);
    this._pointerLock = $.PointerLock$(this);
    this._touchSet = $.GameLoopTouchSet$(this);
  }
},

Keyboard: {"": "DigitalInput;gameLoop,buttons,interceptor"},

GameLoopMouseEvent: {"": "Object;x>,y>,dx,dy,clampX,clampY,time,withinCanvas,frame"},

Mouse: {"": "DigitalInput;_dx,_dy,_x,_y,_clampX,_clampY,_wheelDx,_wheelDy,_withinCanvas,_time,_frame,gameLoop,buttons,interceptor",
  get$x: function(_) {
    return this._x;
  },
  get$y: function(_) {
    return this._y;
  },
  get$withinCanvas: function() {
    return this._withinCanvas;
  },
  gameLoopMouseEvent$1: function($event) {
    var t1, t2;
    this._x = $event.x;
    this._y = $event.y;
    this._time = $event.time;
    this._frame = $event.frame;
    t1 = this._dx;
    t2 = $event.dx;
    if (typeof t2 !== "number")
      throw $.iae(t2);
    this._dx = t1 + t2;
    t2 = this._dy;
    t1 = $event.dy;
    if (typeof t1 !== "number")
      throw $.iae(t1);
    this._dy = t2 + t1;
    this._clampX = $event.clampX;
    this._clampY = $event.clampY;
    this._withinCanvas = $event.withinCanvas;
  },
  _resetAccumulators$0: function() {
    this._wheelDx = 0;
    this._wheelDy = 0;
    this._dx = 0;
    this._dy = 0;
  }
},

PointerLock: {"": "Object;gameLoop<,lockOnClick",
  requestLock$0: function() {
    this.gameLoop.element.webkitRequestPointerLock();
  },
  _onClick$1: function($event) {
    if (this.lockOnClick)
      this.requestLock$0();
  },
  get$_onClick: function() {
    return new $.BoundClosure$1(this, "_onClick$1", null);
  },
  _onPointerLockChange$1: function($event) {
  },
  get$_onPointerLockChange: function() {
    return new $.BoundClosure$1(this, "_onPointerLockChange$1", null);
  },
  PointerLock$1: function(gameLoop) {
    $.get$onClick$x(this.gameLoop.element).listen$1(this.get$_onClick());
    $.HtmlDocument_methods.get$onPointerLockChange($.document()).listen$1(this.get$_onPointerLockChange());
  }
},

_GameLoopTouchEvent: {"": "Object;event>,type>"},

GameLoopTouchPosition: {"": "Object;x>,y>,dx,dy,time,frame"},

GameLoopTouch: {"": "Object;id,positions<"},

GameLoopTouchSet: {"": "Object;activeTouches<,gameLoop<",
  _addPosition$2: function(glTouch, touch) {
    var t1, t2, position;
    t1 = $.getInterceptor$x(touch);
    t2 = this.gameLoop;
    position = $.GameLoopTouchPosition$($.get$x$x(t1.get$page(touch)), $.get$y$x(t1.get$page(touch)), 0, 0, t2.get$gameTime(), t2.get$frame());
    glTouch.get$positions().push(position);
  },
  _start$1: function($event) {
    var t1 = $.getInterceptor$x($event);
    $.forEach$1$ax(t1.get$changedTouches($event), new $.GameLoopTouchSet__start_closure(this));
    this._verifyTouchList$1(t1.get$touches($event));
  },
  _liblib3$_end$1: function($event) {
    var t1 = $.getInterceptor$x($event);
    $.forEach$1$ax(t1.get$changedTouches($event), new $.GameLoopTouchSet__end_closure(this));
    this._verifyTouchList$1(t1.get$touches($event));
  },
  _move$1: function($event) {
    var t1 = $.getInterceptor$x($event);
    $.forEach$1$ax(t1.get$changedTouches($event), new $.GameLoopTouchSet__move_closure(this));
    this._verifyTouchList$1(t1.get$touches($event));
  },
  _inTouchList$2: function(touches, identifier) {
    var t1, i, t2;
    for (t1 = touches.length, i = 0; i < t1; ++i) {
      t2 = touches[i].identifier;
      if (t2 == null ? identifier == null : t2 === identifier)
        return true;
    }
    return false;
  },
  _verifyTouchList$1: function(touches) {
    var t1, t2;
    t1 = touches.length;
    t2 = this.activeTouches;
    if (t1 !== t2.get$length(t2))
      $.print("" + t1 + " " + t2.get$length(t2));
    t2.forEach$1(t2, new $.GameLoopTouchSet__verifyTouchList_closure(this, touches));
  }
},

GameLoopTouchSet__start_closure: {"": "Closure;this_0",
  call$1: function(touch) {
    var t1, t2, glTouch, t3, t4;
    t1 = $.getInterceptor$x(touch);
    t2 = t1.get$identifier(touch);
    glTouch = $.GameLoopTouch$(t2);
    t3 = this.this_0;
    t4 = t3.get$activeTouches();
    if (t4.$index(t4, t2) != null)
      return;
    t2 = t3.get$activeTouches();
    t2.$indexSet(t2, t1.get$identifier(touch), glTouch);
    t3._addPosition$2(glTouch, touch);
    t1 = t3.get$gameLoop();
  }
},

GameLoopTouchSet__end_closure: {"": "Closure;this_0",
  call$1: function(touch) {
    var t1, t2, t3, glTouch;
    t1 = this.this_0;
    t2 = t1.get$activeTouches();
    t3 = $.getInterceptor$x(touch);
    glTouch = t2.$index(t2, t3.get$identifier(touch));
    if (glTouch == null)
      return;
    t2 = t1.get$activeTouches();
    t2.remove$1(t2, t3.get$identifier(touch));
    t1._addPosition$2(glTouch, touch);
    t1 = t1.get$gameLoop();
  }
},

GameLoopTouchSet__move_closure: {"": "Closure;this_0",
  call$1: function(touch) {
    var t1, t2;
    t1 = this.this_0;
    t2 = t1.get$activeTouches();
    t1._addPosition$2(t2.$index(t2, $.get$identifier$x(touch)), touch);
  }
},

GameLoopTouchSet__verifyTouchList_closure: {"": "Closure;this_0,touches_1",
  call$2: function(identifier, touch) {
    if (!this.this_0._inTouchList$2(this.touches_1, identifier))
      $.print("Did not find " + $.S(identifier));
  }
},

GameLoopGamepad$: function(gameLoop) {
  return new $.GameLoopGamepad(gameLoop, null, null);
},

GameLoopHtml$: function(element) {
  var t1, t2, t3, t4, t5;
  t1 = $.Point$(0, 0);
  t2 = $.List_List(null, $._GameLoopTouchEvent);
  $.setRuntimeTypeInfo(t2, [$._GameLoopTouchEvent]);
  t3 = $.List_List(null, $.KeyboardEvent);
  $.setRuntimeTypeInfo(t3, [$.KeyboardEvent]);
  t4 = $.List_List(null, $.MouseEvent);
  $.setRuntimeTypeInfo(t4, [$.MouseEvent]);
  t5 = $.List_List(null, $.GameLoopTimer);
  $.setRuntimeTypeInfo(t5, [$.GameLoopTimer]);
  t5 = new $.GameLoopHtml(element, 0, false, false, null, 0, false, 0, 0.03, 0, 0, 0, 0.05, null, null, null, null, t1, null, null, t2, t3, t4, null, null, null, null, null, null, 0.015, 0.03, t5, null);
  t5.GameLoopHtml$1(element);
  return t5;
},

Keyboard$: function(gameLoop) {
  var t1 = new $.Keyboard(gameLoop, $.Map_Map($.JSInt, $.DigitalButton), null);
  t1.DigitalInput$2(gameLoop, $.get$Keyboard__buttonIds());
  return t1;
},

Mouse$: function(gameLoop) {
  var t1 = new $.Mouse(0, 0, 0, 0, 0, 0, 0, 0, false, 0, 0, gameLoop, $.Map_Map($.JSInt, $.DigitalButton), null);
  t1.DigitalInput$2(gameLoop, $.get$Mouse__buttonIds());
  return t1;
},

PointerLock$: function(gameLoop) {
  var t1 = new $.PointerLock(gameLoop, true);
  t1.PointerLock$1(gameLoop);
  return t1;
},

_GameLoopTouchEvent$: function($event, type) {
  return new $._GameLoopTouchEvent($event, type);
},

GameLoopTouchPosition$: function(x, y, dx, dy, time, frame) {
  return new $.GameLoopTouchPosition(x, y, dx, dy, time, frame);
},

GameLoopTouch$: function(id) {
  var t1 = $.List_List(null, $.GameLoopTouchPosition);
  $.setRuntimeTypeInfo(t1, [$.GameLoopTouchPosition]);
  return new $.GameLoopTouch(id, t1);
},

GameLoopTouchSet$: function(gameLoop) {
  return new $.GameLoopTouchSet($.Map_Map($.JSInt, $.GameLoopTouch), gameLoop);
}}],
["html_common", "dart:html_common", , {
convertDartToNative_Dictionary_closure: {"": "Closure;object_0",
  call$2: function(key, value) {
    this.object_0[key] = value;
  }
},

_convertDartToNative_PrepareForStructuredClone_findSlot: {"": "Closure;values_1,copies_2",
  call$1: function(value) {
    var t1, $length, i, t2;
    t1 = this.values_1;
    $length = t1.length;
    for (i = 0; i < $length; ++i) {
      t2 = t1[i];
      if (t2 == null ? value == null : t2 === value)
        return i;
    }
    t1.push(value);
    this.copies_2.push(null);
    return $length;
  }
},

_convertDartToNative_PrepareForStructuredClone_readSlot: {"": "Closure;copies_3",
  call$1: function(i) {
    var t1 = this.copies_3;
    if (i >>> 0 !== i || i >= t1.length)
      throw $.ioore(i);
    return t1[i];
  }
},

_convertDartToNative_PrepareForStructuredClone_writeSlot: {"": "Closure;copies_4",
  call$2: function(i, x) {
    var t1 = this.copies_4;
    if (i >>> 0 !== i || i >= t1.length)
      throw $.ioore(i);
    t1[i] = x;
  }
},

_convertDartToNative_PrepareForStructuredClone_cleanupSlots: {"": "Closure;",
  call$0: function() {
  }
},

_convertDartToNative_PrepareForStructuredClone_walk: {"": "Closure;findSlot_5,readSlot_6,writeSlot_7",
  call$1: function(e) {
    var t1, slot, t2, $length, copy, i;
    t1 = {};
    if (e == null)
      return e;
    if (typeof e === "boolean")
      return e;
    if (typeof e === "number")
      return e;
    if (typeof e === "string")
      return e;
    if (typeof e === "object" && e !== null && !!$.getInterceptor(e).$isDateTime)
      return $.convertDartToNative_DateTime(e);
    if (typeof e === "object" && e !== null && !!$.getInterceptor(e).$isFile)
      return e;
    if (typeof e === "object" && e !== null && !!$.getInterceptor(e).$isBlob)
      return e;
    if (typeof e === "object" && e !== null && !!$.getInterceptor(e).$isFileList)
      return e;
    if (typeof e === "object" && e !== null && !!$.getInterceptor(e).$isImageData)
      return e;
    if (typeof e === "object" && e !== null && !!$.getInterceptor(e).$isByteBuffer)
      return e;
    if (typeof e === "object" && e !== null && !!$.getInterceptor(e).$isTypedData)
      return e;
    if (typeof e === "object" && e !== null && !!$.getInterceptor(e).$isMap) {
      slot = this.findSlot_5.call$1(e);
      t1.copy_0 = this.readSlot_6.call$1(slot);
      t2 = t1.copy_0;
      if (t2 != null)
        return t2;
      t1.copy_0 = {};
      this.writeSlot_7.call$2(slot, t1.copy_0);
      $.forEach$1$ax(e, new $._convertDartToNative_PrepareForStructuredClone_walk_closure(t1, this));
      return t1.copy_0;
    }
    if (typeof e === "object" && e !== null && (e.constructor === Array || !!$.getInterceptor(e).$isList)) {
      if (typeof e !== "string" && (typeof e !== "object" || e === null || e.constructor !== Array && !$.isJsIndexable(e, e[$.dispatchPropertyName])))
        return this.call$1$bailout(1, e);
      $length = e.length;
      slot = this.findSlot_5.call$1(e);
      copy = this.readSlot_6.call$1(slot);
      if (copy != null) {
        if (true === copy) {
          copy = new Array($length);
          this.writeSlot_7.call$2(slot, copy);
        }
        return copy;
      }
      copy = new Array($length);
      this.writeSlot_7.call$2(slot, copy);
      for (i = 0; i < $length; ++i) {
        if (i >= e.length)
          throw $.ioore(i);
        t1 = this.call$1(e[i]);
        if (i >= copy.length)
          throw $.ioore(i);
        copy[i] = t1;
      }
      return copy;
    }
    throw $.wrapException($.UnimplementedError$("structured clone of other type"));
  },
  call$1$bailout: function(state0, e) {
    switch (state0) {
      case 0:
        t1 = {};
        if (e == null)
          return e;
        if (typeof e === "boolean")
          return e;
        if (typeof e === "number")
          return e;
        if (typeof e === "string")
          return e;
        if (typeof e === "object" && e !== null && !!$.getInterceptor(e).$isDateTime)
          return $.convertDartToNative_DateTime(e);
        if (typeof e === "object" && e !== null && !!$.getInterceptor(e).$isFile)
          return e;
        if (typeof e === "object" && e !== null && !!$.getInterceptor(e).$isBlob)
          return e;
        if (typeof e === "object" && e !== null && !!$.getInterceptor(e).$isFileList)
          return e;
        if (typeof e === "object" && e !== null && !!$.getInterceptor(e).$isImageData)
          return e;
        if (typeof e === "object" && e !== null && !!$.getInterceptor(e).$isByteBuffer)
          return e;
        if (typeof e === "object" && e !== null && !!$.getInterceptor(e).$isTypedData)
          return e;
        if (typeof e === "object" && e !== null && !!$.getInterceptor(e).$isMap) {
          slot = this.findSlot_5.call$1(e);
          t1.copy_0 = this.readSlot_6.call$1(slot);
          t2 = t1.copy_0;
          if (t2 != null)
            return t2;
          t1.copy_0 = {};
          this.writeSlot_7.call$2(slot, t1.copy_0);
          $.forEach$1$ax(e, new $._convertDartToNative_PrepareForStructuredClone_walk_closure(t1, this));
          return t1.copy_0;
        }
      case 1:
        var t1, slot, t2, $length, copy, i;
        if (state0 === 1 || state0 === 0 && typeof e === "object" && e !== null && (e.constructor === Array || !!$.getInterceptor(e).$isList))
          switch (state0) {
            case 0:
            case 1:
              state0 = 0;
              t1 = $.getInterceptor$asx(e);
              $length = t1.get$length(e);
              slot = this.findSlot_5.call$1(e);
              copy = this.readSlot_6.call$1(slot);
              if (copy != null) {
                if (true === copy) {
                  copy = new Array($length);
                  this.writeSlot_7.call$2(slot, copy);
                }
                return copy;
              }
              copy = new Array($length);
              this.writeSlot_7.call$2(slot, copy);
              if (typeof $length !== "number")
                throw $.iae($length);
              i = 0;
              for (; i < $length; ++i) {
                t2 = this.call$1(t1.$index(e, i));
                if (i >= copy.length)
                  throw $.ioore(i);
                copy[i] = t2;
              }
              return copy;
          }
        throw $.wrapException($.UnimplementedError$("structured clone of other type"));
    }
  }
},

_convertDartToNative_PrepareForStructuredClone_walk_closure: {"": "Closure;box_0,walk_8",
  call$2: function(key, value) {
    this.box_0.copy_0[key] = this.walk_8.call$1(value);
  }
},

convertNativeToDart_AcceptStructuredClone_findSlot: {"": "Closure;values_0,copies_1",
  call$1: function(value) {
    var t1, $length, i, t2;
    t1 = this.values_0;
    $length = t1.length;
    for (i = 0; i < $length; ++i) {
      t2 = t1[i];
      if (t2 == null ? value == null : t2 === value)
        return i;
    }
    t1.push(value);
    this.copies_1.push(null);
    return $length;
  }
},

convertNativeToDart_AcceptStructuredClone_readSlot: {"": "Closure;copies_2",
  call$1: function(i) {
    var t1 = this.copies_2;
    if (i >>> 0 !== i || i >= t1.length)
      throw $.ioore(i);
    return t1[i];
  }
},

convertNativeToDart_AcceptStructuredClone_writeSlot: {"": "Closure;copies_3",
  call$2: function(i, x) {
    var t1 = this.copies_3;
    if (i >>> 0 !== i || i >= t1.length)
      throw $.ioore(i);
    t1[i] = x;
  }
},

convertNativeToDart_AcceptStructuredClone_walk: {"": "Closure;mustCopy_4,findSlot_5,readSlot_6,writeSlot_7",
  call$1: function(e) {
    var slot, copy, t1, key, $length, i;
    if (typeof e !== "object" || e === null || e.constructor !== Array || !!e.fixed$length)
      return this.call$1$bailout(1, e);
    if ($.isJavaScriptDate(e))
      return $.convertNativeToDart_DateTime(e);
    if ($.isJavaScriptRegExp(e))
      throw $.wrapException($.UnimplementedError$("structured clone of RegExp"));
    if ($.isJavaScriptSimpleObject(e)) {
      slot = this.findSlot_5.call$1(e);
      copy = this.readSlot_6.call$1(slot);
      if (copy != null)
        return copy;
      copy = $.makeLiteralMap([]);
      this.writeSlot_7.call$2(slot, copy);
      for (t1 = $.JSArray_methods.get$iterator(Object.keys(e)); t1.moveNext$0();) {
        key = t1._current;
        copy.$indexSet(copy, key, this.call$1(e[key]));
      }
      return copy;
    }
    if ($.isJavaScriptArray(e)) {
      slot = this.findSlot_5.call$1(e);
      copy = this.readSlot_6.call$1(slot);
      if (copy != null)
        return copy;
      $length = e.length;
      if (this.mustCopy_4)
        copy = new Array($length);
      else
        copy = e;
      this.writeSlot_7.call$2(slot, copy);
      for (i = 0; i < $length; ++i) {
        if (i >= e.length)
          throw $.ioore(i);
        t1 = this.call$1(e[i]);
        if (i >= copy.length)
          throw $.ioore(i);
        copy[i] = t1;
      }
      return copy;
    }
    return e;
  },
  call$1$bailout: function(state0, e) {
    var slot, copy, t1, key, $length, t2, i;
    if (e == null)
      return e;
    if (typeof e === "boolean")
      return e;
    if (typeof e === "number")
      return e;
    if (typeof e === "string")
      return e;
    if ($.isJavaScriptDate(e))
      return $.convertNativeToDart_DateTime(e);
    if ($.isJavaScriptRegExp(e))
      throw $.wrapException($.UnimplementedError$("structured clone of RegExp"));
    if ($.isJavaScriptSimpleObject(e)) {
      slot = this.findSlot_5.call$1(e);
      copy = this.readSlot_6.call$1(slot);
      if (copy != null)
        return copy;
      copy = $.makeLiteralMap([]);
      this.writeSlot_7.call$2(slot, copy);
      for (t1 = $.JSArray_methods.get$iterator(Object.keys(e)); t1.moveNext$0();) {
        key = t1._current;
        copy.$indexSet(copy, key, this.call$1(e[key]));
      }
      return copy;
    }
    if ($.isJavaScriptArray(e)) {
      slot = this.findSlot_5.call$1(e);
      copy = this.readSlot_6.call$1(slot);
      if (copy != null)
        return copy;
      t1 = $.getInterceptor$asx(e);
      $length = t1.get$length(e);
      copy = this.mustCopy_4 ? new Array($length) : e;
      this.writeSlot_7.call$2(slot, copy);
      if (typeof $length !== "number")
        throw $.iae($length);
      t2 = $.getInterceptor$ax(copy);
      i = 0;
      for (; i < $length; ++i)
        t2.$indexSet(copy, i, this.call$1(t1.$index(e, i)));
      return copy;
    }
    return e;
  }
},

FilteredElementList: {"": "ListBase;_node,_childNodes",
  get$_filtered: function() {
    var t1 = this._childNodes;
    return $.List_List$from(t1.where$1(t1, new $.FilteredElementList__filtered_closure()), true, $.Element);
  },
  forEach$1: function(_, f) {
    $.JSArray_methods.forEach$1(this.get$_filtered(), f);
  },
  $indexSet: function(_, index, value) {
    var t1 = this.get$_filtered();
    if (index >>> 0 !== index || index >= t1.length)
      throw $.ioore(index);
    $.replaceWith$1$x(t1[index], value);
  },
  set$length: function(_, newLength) {
    var len;
    if (typeof newLength !== "number")
      return this.set$length$bailout(1, newLength);
    len = this.get$_filtered().length;
    if (newLength >= len)
      return;
    else if (newLength < 0)
      throw $.wrapException(new $.ArgumentError("Invalid list length"));
    this.removeRange$2(this, newLength, len);
  },
  set$length$bailout: function(state0, newLength) {
    var len, t1;
    len = this.get$_filtered().length;
    t1 = $.getInterceptor$n(newLength);
    if (t1.$ge(newLength, len))
      return;
    else if (t1.$lt(newLength, 0))
      throw $.wrapException(new $.ArgumentError("Invalid list length"));
    this.removeRange$2(this, newLength, len);
  },
  add$1: function(_, value) {
    this._childNodes._this.appendChild(value);
  },
  removeRange$2: function(_, start, end) {
    $.JSArray_methods.forEach$1($.JSArray_methods.sublist$2(this.get$_filtered(), start, end), new $.FilteredElementList_removeRange_closure());
  },
  removeLast$0: function(_) {
    var result = this.get$last(this);
    if (result != null)
      $.remove$0$ax(result);
    return result;
  },
  get$length: function(_) {
    return this.get$_filtered().length;
  },
  $index: function(_, index) {
    var t1 = this.get$_filtered();
    if (index >>> 0 !== index || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  get$iterator: function(_) {
    return $.JSArray_methods.get$iterator(this.get$_filtered());
  },
  $asListBase: null,
  $asList: null,
  $asIterable: null
},

FilteredElementList__filtered_closure: {"": "Closure;",
  call$1: function(n) {
    return typeof n === "object" && n !== null && !!$.getInterceptor(n).$isElement;
  }
},

FilteredElementList_removeRange_closure: {"": "Closure;",
  call$1: function(el) {
    return $.remove$0$ax(el);
  }
},

convertNativeToDart_Dictionary: function(object) {
  var dict, t1, key;
  if (object == null)
    return;
  dict = $.makeLiteralMap([]);
  for (t1 = $.JSArray_methods.get$iterator(Object.getOwnPropertyNames(object)); t1.moveNext$0();) {
    key = t1._current;
    dict.$indexSet(dict, key, object[key]);
  }
  return dict;
},

convertDartToNative_Dictionary: function(dict) {
  var object;
  if (dict == null)
    return;
  object = {};
  $.forEach$1$ax(dict, new $.convertDartToNative_Dictionary_closure(object));
  return object;
},

convertNativeToDart_DateTime: function(date) {
  return $.DateTime$fromMillisecondsSinceEpoch(date.getTime(), true);
},

convertDartToNative_DateTime: function(date) {
  return new Date(date.millisecondsSinceEpoch);
},

convertDartToNative_SerializedScriptValue: function(value) {
  return $._convertDartToNative_PrepareForStructuredClone(value);
},

convertNativeToDart_SerializedScriptValue: function(object) {
  return $.convertNativeToDart_AcceptStructuredClone(object, true);
},

_convertDartToNative_PrepareForStructuredClone: function(value) {
  var copies, copy;
  copies = [];
  copy = new $._convertDartToNative_PrepareForStructuredClone_walk(new $._convertDartToNative_PrepareForStructuredClone_findSlot([], copies), new $._convertDartToNative_PrepareForStructuredClone_readSlot(copies), new $._convertDartToNative_PrepareForStructuredClone_writeSlot(copies)).call$1(value);
  new $._convertDartToNative_PrepareForStructuredClone_cleanupSlots().call$0();
  return copy;
},

convertNativeToDart_AcceptStructuredClone: function(object, mustCopy) {
  var copies = [];
  return new $.convertNativeToDart_AcceptStructuredClone_walk(mustCopy, new $.convertNativeToDart_AcceptStructuredClone_findSlot([], copies), new $.convertNativeToDart_AcceptStructuredClone_readSlot(copies), new $.convertNativeToDart_AcceptStructuredClone_writeSlot(copies)).call$1(object);
},

isJavaScriptDate: function(value) {
  return value instanceof Date;
},

isJavaScriptRegExp: function(value) {
  return value instanceof RegExp;
},

isJavaScriptArray: function(value) {
  return value instanceof Array;
},

isJavaScriptSimpleObject: function(value) {
  return Object.getPrototypeOf(value) === Object.prototype;
},

Device_userAgent: function() {
  return $.window().navigator.userAgent;
},

Device_isOpera: function() {
  if ($.Device__isOpera == null)
    $.Device__isOpera = $.contains$2$asx($.Device_userAgent(), "Opera", 0);
  return $.Device__isOpera;
},

Device_isWebKit: function() {
  if ($.Device__isWebKit == null)
    $.Device__isWebKit = $.Device_isOpera() !== true && $.contains$2$asx($.Device_userAgent(), "WebKit", 0) === true;
  return $.Device__isWebKit;
},

JenkinsSmiHash_combine: function(hash, value) {
  if (typeof value !== "number")
    throw $.iae(value);
  hash = 536870911 & hash + value;
  hash = 536870911 & hash + ((524287 & hash) << 10 >>> 0);
  return (hash ^ $.JSInt_methods.$shr(hash, 6)) >>> 0;
},

JenkinsSmiHash_finish: function(hash) {
  hash = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
  hash = (hash ^ $.JSInt_methods.$shr(hash, 11)) >>> 0;
  return 536870911 & hash + ((16383 & hash) << 15 >>> 0);
},

JenkinsSmiHash_hash2: function(a, b) {
  return $.JenkinsSmiHash_finish($.JenkinsSmiHash_combine($.JenkinsSmiHash_combine(0, a), b));
},

JenkinsSmiHash_hash4: function(a, b, c, d) {
  return $.JenkinsSmiHash_finish($.JenkinsSmiHash_combine($.JenkinsSmiHash_combine($.JenkinsSmiHash_combine($.JenkinsSmiHash_combine(0, a), b), c), d));
}}],
["lost_context", "lost_context.dart", , {
initDebugLostContext_onContextLost: {"": "Closure;gameLoop_0",
  call$1: function(e) {
    var t1;
    $.preventDefault$0$x(e);
    t1 = this.gameLoop_0;
    t1.stop$0(t1);
    $.print("webgl context: lost");
  }
},

initDebugLostContext_onContextRestored: {"": "Closure;gl_1,gameLoop_2,initContextCall_3",
  call$1: function(e) {
    this.initContextCall_3.call$2(this.gl_1, this.gameLoop_2);
    $.print("webgl context: restored");
  }
},

initDebugLostContext_closure: {"": "Closure;ext_4",
  call$1: function(e) {
    $.loseContext$0$x(this.ext_4);
  }
},

initDebugLostContext_closure0: {"": "Closure;ext_5",
  call$1: function(e) {
    $.restoreContext$0$x(this.ext_5);
  }
},

initDebugLostContext: function(gl, canvas, gameLoop, initContextCall) {
  var t1, ext, control, loseContextButton, restoreContextButton;
  t1 = $.getInterceptor$x(canvas);
  t1.get$onWebGlContextLost(canvas).listen$1(new $.initDebugLostContext_onContextLost(gameLoop));
  t1.get$onWebGlContextRestored(canvas).listen$1(new $.initDebugLostContext_onContextRestored(gl, gameLoop, initContextCall));
  $.print("initDebugLostContext: webglcontextlost trapped");
  $.print("initDebugLostContext: webglcontextrestored trapped");
  ext = $.getExtension$1$x(gl, "WEBGL_lose_context");
  if (ext == null) {
    $.print("WEBGL_lose_context: NOT AVAILABLE");
    return;
  }
  $.print("WEBGL_lose_context: available");
  control = $.query("#control");
  loseContextButton = $.InputElement_InputElement(null);
  t1 = $.getInterceptor$x(loseContextButton);
  t1.set$type(loseContextButton, "button");
  t1.set$value(loseContextButton, "lose context");
  t1.get$onClick(loseContextButton).listen$1(new $.initDebugLostContext_closure(ext));
  control.appendChild(loseContextButton);
  restoreContextButton = $.InputElement_InputElement(null);
  t1 = $.getInterceptor$x(restoreContextButton);
  t1.set$type(restoreContextButton, "button");
  t1.set$value(restoreContextButton, "restore context");
  t1.get$onClick(restoreContextButton).listen$1(new $.initDebugLostContext_closure0(ext));
  control.appendChild(restoreContextButton);
}}],
["negentropia_home.dart", "negentropia_home.dart", , {
initShowPicking_closure: {"": "Closure;showPickingCheck_0",
  call$1: function(e) {
    $.showPicking = $.get$checked$x(this.showPickingCheck_0);
  }
},

initSquares_closure: {"": "Closure;squareProgram2_0",
  call$0: function() {
    this.squareProgram2_0.fetch$3($.shaderCache, $.get$asset().get$shader() + "/clip_vs.txt", $.get$asset().get$shader() + "/clip2_fs.txt");
  }
},

initContext_closure: {"": "Closure;gl_0",
  call$1: function(p) {
    return p.initContext$2(this.gl_0, $.textureTable);
  }
},

draw_closure: {"": "Closure;gameLoop_0",
  call$1: function(p) {
    return p.drawModels$3(this.gameLoop_0, $.get$cam(), $.get$pMatrix());
  }
},

update_closure: {"": "Closure;gameLoop_0",
  call$1: function(p) {
    return $.update$1$x(p, this.gameLoop_0);
  }
},

main_closure: {"": "Closure;gl_0",
  call$1: function(gameLoop) {
    $.update(this.gl_0, gameLoop);
  }
},

main_closure0: {"": "Closure;gl_1",
  call$1: function(gameLoop) {
    $.render(this.gl_1, gameLoop);
  }
},

initGL: function(canvas) {
  var gl;
  $.print("WebGL: initializing");
  gl = $.getContext3d$1$preserveDrawingBuffer$x(canvas, true);
  if (gl != null) {
    $.print("WebGL: initialized");
    return gl;
  }
  $.print("WebGL: initialization failure");
  return;
},

initStats: function() {
  var div, t1;
  div = $.query("#framerate");
  $.stats = $.Stats$();
  t1 = $.get$children$x(div);
  t1.add$1(t1, $.stats.container);
},

initShowPicking: function() {
  var control, showPickingCheck, t1, label, t2;
  control = $.query("#control");
  showPickingCheck = $.InputElement_InputElement(null);
  t1 = $.getInterceptor$x(showPickingCheck);
  t1.set$type(showPickingCheck, "checkbox");
  t1.set$id(showPickingCheck, "show_picking");
  t1.set$checked(showPickingCheck, $.showPicking);
  t1.get$onClick(showPickingCheck).listen$1(new $.initShowPicking_closure(showPickingCheck));
  control.appendChild(showPickingCheck);
  label = $.LabelElement_LabelElement();
  t2 = $.getInterceptor$x(label);
  t2.set$htmlFor(label, t1.get$id(showPickingCheck));
  t2.appendText$1(label, "show picking");
  control.appendChild(label);
},

boot: function() {
  var canvasbox, gl, p, a, sid;
  $.canvas = $.CanvasElement_CanvasElement(null, null);
  $.set$id$x($.canvas, "main_canvas");
  $.set$width$x($.canvas, 780);
  $.set$height$x($.canvas, 500);
  canvasbox = $.query("#canvasbox");
  canvasbox.appendChild($.canvas);
  $.print("canvas '" + $.get$id$x($.canvas) + "' created: width=" + $.S($.get$width$x($.canvas)) + " height=" + $.S($.get$height$x($.canvas)));
  gl = $.initGL($.canvas);
  if (gl == null) {
    $.remove$0$ax($.canvas);
    p = $.ParagraphElement_ParagraphElement();
    p.textContent = "WebGL is currently not available on this system.";
    canvasbox.appendChild(p);
    a = $.AnchorElement_AnchorElement(null);
    $.set$href$x(a, "http://get.webgl.org/");
    a.textContent = "Get more information";
    canvasbox.appendChild(a);
    $.set$backgroundColor$x(canvasbox.style, "lightblue");
    return;
  }
  $.initShowPicking();
  sid = $.Cookie_getCookie("sid");
  $.print("session id sid=" + $.S(sid));
  $.initWebSocket($.query("#wsUri").textContent, sid, 1, $.query("#ws_status"));
  $.initStats();
  return gl;
},

initSquares: function(gl) {
  var squareProgram, squareModel, squareProgram2, squareModel2, squareProgram3, squareModel3;
  squareProgram = $.ShaderProgram$(gl);
  $.programList.push(squareProgram);
  squareProgram.fetch$3($.shaderCache, $.get$asset().get$shader() + "/clip_vs.txt", $.get$asset().get$shader() + "/clip_fs.txt");
  squareModel = $.Model$fromJson(gl, $.get$asset().get$mesh() + "/square.json");
  squareProgram.addModel$1(squareModel);
  squareModel.addInstance$1($.Instance$(squareModel, $.Vector3$(0, 0, 0), 1, null));
  squareProgram2 = $.ShaderProgram$(gl);
  $.programList.push(squareProgram2);
  $.Timer_Timer($.Duration$(0, 0, 0, 0, 0, 2), new $.initSquares_closure(squareProgram2));
  squareModel2 = $.Model$fromJson(gl, $.get$asset().get$mesh() + "/square2.json");
  squareProgram2.addModel$1(squareModel2);
  squareModel2.addInstance$1($.Instance$(squareModel2, $.Vector3$(0, 0, 0), 1, null));
  squareProgram3 = $.ShaderProgram$(gl);
  $.programList.push(squareProgram3);
  squareProgram3.fetch$3($.shaderCache, $.get$asset().get$shader() + "/clip_vs.txt", $.get$asset().get$shader() + "/clip3_fs.txt");
  squareModel3 = $.Model$fromJson(gl, $.get$asset().get$mesh() + "/square3.json");
  squareProgram3.addModel$1(squareModel3);
  squareModel3.addInstance$1($.Instance$(squareModel3, $.Vector3$(0, 0, 0), 1, null));
},

initSkybox: function(gl) {
  var skyboxProgram, skyboxModel;
  skyboxProgram = $.SkyboxProgram$(gl);
  $.programList.push(skyboxProgram);
  skyboxProgram.fetch$3($.shaderCache, $.get$asset().get$shader() + "/skybox_vs.txt", $.get$asset().get$shader() + "/skybox_fs.txt");
  skyboxModel = $.SkyboxModel$fromJson(gl, "/mesh/cube.json", true, 0);
  skyboxModel.addCubemapFace$3(gl, 34069, "/texture/space_rt.jpg");
  skyboxModel.addCubemapFace$3(gl, 34070, "/texture/space_lf.jpg");
  skyboxModel.addCubemapFace$3(gl, 34071, "/texture/space_up.jpg");
  skyboxModel.addCubemapFace$3(gl, 34072, "/texture/space_dn.jpg");
  skyboxModel.addCubemapFace$3(gl, 34073, "/texture/space_fr.jpg");
  skyboxModel.addCubemapFace$3(gl, 34074, "/texture/space_bk.jpg");
  skyboxProgram.addModel$1(skyboxModel);
  skyboxModel.addInstance$1($.SkyboxInstance$(skyboxModel, $.Vector3$(0, 0, 0), 1));
},

initAirship: function(gl) {
  var prog, airshipModel;
  prog = $.ShaderProgram$(gl);
  $.programList.push(prog);
  prog.fetch$3($.shaderCache, $.get$asset().get$shader() + "/simple_vs.txt", $.get$asset().get$shader() + "/simple_fs.txt");
  airshipModel = $.Model$fromOBJ(gl, $.get$asset().get$obj() + "/airship.obj");
  prog.addModel$1(airshipModel);
  airshipModel.addInstance$1($.Instance$(airshipModel, $.Vector3$(-8, 0, 0), 1, $.generatePickColor()));
},

initAirshipTex: function(gl) {
  var prog, objURL, airshipModel, airshipModel2, colonyShipModel, coneModel;
  prog = $.TexShaderProgram$(gl);
  $.programList.push(prog);
  prog.fetch$3($.shaderCache, $.get$asset().get$shader() + "/simpleTex_vs.txt", $.get$asset().get$shader() + "/simpleTex_fs.txt");
  objURL = $.get$asset().get$obj() + "/airship.obj";
  airshipModel = $.TexModel$fromOBJ(gl, objURL, $.textureTable, $.get$asset());
  prog.addModel$1(airshipModel);
  airshipModel.addInstance$1($.TexInstance$(airshipModel, $.Vector3$(0, 0, 0), 1, $.generatePickColor()));
  airshipModel2 = $.TexModel$fromOBJ(gl, objURL, $.textureTable, $.get$asset());
  prog.addModel$1(airshipModel2);
  airshipModel2.addInstance$1($.TexInstance$(airshipModel2, $.Vector3$(8, 0, 0), 1, $.generatePickColor()));
  colonyShipModel = $.TexModel$fromOBJ(gl, $.get$asset().get$obj() + "/Colony Ship Ogame Fleet.obj", $.textureTable, $.get$asset());
  prog.addModel$1(colonyShipModel);
  colonyShipModel.addInstance$1($.TexInstance$(colonyShipModel, $.Vector3$(0, -5, -50), 1, $.generatePickColor()));
  coneModel = $.TexModel$fromOBJ(gl, $.get$asset().get$obj() + "/cone.obj", $.textureTable, $.get$asset());
  prog.addModel$1(coneModel);
  coneModel.addInstance$1($.TexInstance$(coneModel, $.Vector3$(0, 2, -10), 1, $.generatePickColor()));
},

initShips: function(gl) {
  $.initAirship(gl);
  $.initAirshipTex(gl);
},

initPicker: function(gl) {
  var t1, t2, t3;
  t1 = $.programList;
  t2 = $.canvas;
  t3 = $.getInterceptor$x(t2);
  $.picker = $.PickerShader$(gl, t1, t3.get$width(t2), t3.get$height(t2));
  $.programList.push($.picker);
  $.picker.fetch$3($.shaderCache, $.get$asset().get$shader() + "/picker_vs.txt", $.get$asset().get$shader() + "/picker_fs.txt");
},

initContext: function(gl, gameLoop) {
  var t1, t2, t3, t4, before, i, duration;
  t1 = $.List_List(null, $.ShaderProgram);
  $.setRuntimeTypeInfo(t1, [$.ShaderProgram]);
  $.programList = t1;
  $.shaderCache = $.Map_Map($.JSString, $.Shader);
  $.textureTable = $.Map_Map($.JSString, $.Texture);
  $.forEach$1$ax($.programList, new $.initContext_closure(gl));
  $.requestZone();
  $.initSquares(gl);
  $.initShips(gl);
  $.initSkybox(gl);
  $.initPicker(gl);
  t1 = $.getInterceptor$x(gl);
  t1.clearColor$4(gl, 0.5, 0.5, 0.5, 1);
  t1.enable$1(gl, 2929);
  t1.depthFunc$1(gl, 513);
  t1.depthRange$2(gl, 0, 1);
  t2 = $.canvas;
  t3 = $.getInterceptor$x(t2);
  t1.viewport$4(gl, 0, 0, t3.get$width(t2), t3.get$height(t2));
  t2 = $.canvas;
  t3 = $.getInterceptor$x(t2);
  t4 = t3.get$width(t2);
  t2 = t3.get$height(t2);
  if (typeof t4 !== "number")
    throw t4.$div();
  if (typeof t2 !== "number")
    throw $.iae(t2);
  $.canvasAspect = t4 / t2;
  if ($.backfaceCulling) {
    t1.frontFace$1(gl, 2305);
    t1.cullFace$1(gl, 1029);
    t1.enable$1(gl, 2884);
  }
  t1 = $.fullRateFrames;
  if (t1 > 0) {
    $.print("firing " + t1 + " frames at full rate");
    before = $.DateTime_DateTime$now();
    for (i = 0; i < $.fullRateFrames; ++i) {
      t1 = $.stats;
      t1.begin$0;
      t1 = t1._timer;
      t1.start$0(t1);
      $.draw(gl, gameLoop);
      t1 = $.stats;
      t1.end$0(t1);
    }
    duration = $.DateTime_DateTime$now().difference$1(before);
    t1 = $.fullRateFrames;
    t2 = duration.get$inSeconds();
    $.print("duration = " + $.S(duration) + " framerate = " + $.S(t1 / t2) + " fps");
  }
  $.start$0$x(gameLoop);
},

draw: function(gl, gameLoop) {
  var t1, t2;
  $.setPerspectiveMatrix($.get$pMatrix(), $.fieldOfViewYRadians, $.canvasAspect, 1, 1000);
  $.get$cam().render$1(gameLoop);
  t1 = $.getInterceptor$x(gl);
  t1.bindFramebuffer$2(gl, 36160, $.picker.framebuffer);
  t1.clear$1(gl, 16640);
  t1.bindFramebuffer$2(gl, 36160, null);
  t1.clear$1(gl, 16640);
  t1 = $.showPicking;
  t2 = $.picker;
  if (t1 === true) {
    t2.offscreen = true;
    t2.drawModels$3(gameLoop, $.get$cam(), $.get$pMatrix());
    t1 = $.picker;
    t1.offscreen = false;
    t1.drawModels$3(gameLoop, $.get$cam(), $.get$pMatrix());
  } else {
    t2.offscreen = true;
    t1 = $.programList;
    t1.forEach$1;
    $.IterableMixinWorkaround_forEach(t1, new $.draw_closure(gameLoop));
  }
},

render: function(gl, gameLoop) {
  var t1;
  $.stats.begin$0();
  $.draw(gl, gameLoop);
  t1 = $.stats;
  t1.end$0(t1);
},

readColor: function(label, gl, x, y, framebuffer, color) {
  var t1 = $.getInterceptor$x(gl);
  t1.bindFramebuffer$2(gl, 36160, framebuffer);
  t1.readPixels$7(gl, x, y, 1, 1, 6408, 5121, color);
  $.print(label + ": readPixels: x=" + $.S(x) + " y=" + $.S(y) + " color=" + $.S(color));
},

update: function(gl, gameLoop) {
  var m, t1, t2, y, color;
  m = gameLoop.get$mouse();
  if (m.pressed$1(0)) {
    $.print("Mouse.LEFT pressed: withinCanvas=" + m.get$withinCanvas());
    t1 = $.get$height$x($.canvas);
    t2 = m.get$y(m);
    if (typeof t1 !== "number")
      throw t1.$sub();
    if (typeof t2 !== "number")
      throw $.iae(t2);
    y = t1 - t2;
    color = $.Uint8List_Uint8List(4);
    $.readColor("canvas-framebuffer", gl, m.get$x(m), y, null, color);
    $.readColor("offscreen-framebuffer", gl, m.get$x(m), y, $.picker.framebuffer, color);
    $.print("mouse hit: " + $.S($.mouseClickHit($.picker.instanceList, color)));
  }
  t1 = $.get$cam();
  t1.update$1(t1, gameLoop);
  $.forEach$1$ax($.programList, new $.update_closure(gameLoop));
},

main: function() {
  var gl, gameLoop;
  gl = $.boot();
  if (gl == null) {
    $.print("WebGL: not available");
    return;
  }
  gameLoop = $.GameLoopHtml$($.canvas);
  gameLoop.get$pointerLock().lockOnClick = false;
  $.print("gameLoop lockOnClick = " + gameLoop.get$pointerLock().lockOnClick);
  $.print("gameLoop updateStep = " + $.S(gameLoop.updateTimeStep) + " seconds");
  if ($.debugLostContext)
    $.initDebugLostContext(gl, $.canvas, gameLoop, $.initContext$closure);
  gameLoop.onUpdate = new $.main_closure(gl);
  gameLoop.onRender = new $.main_closure0(gl);
  $.initContext(gl, gameLoop);
}}],
["obj", "obj.dart", , {
Part: {"": "Object;name>,smooth?,usemtl@,indexFirst<,indexListSize@"},

Obj: {"": "Object;_partTable<,vertCoord<,textCoord<,normCoord,indices<,mtllib@",
  get$partList: function() {
    var t1 = this._partTable;
    return t1.get$values(t1);
  },
  Obj$fromString$2: function(url, str, box_0) {
    var indexTable, _vertCoord, _textCoord, t1, keys, filtered, copy, t2, t3, i;
    indexTable = $.Map_Map($.JSString, $.JSInt);
    _vertCoord = $.List_List(null, $.JSDouble);
    $.setRuntimeTypeInfo(_vertCoord, [$.JSDouble]);
    _textCoord = $.List_List(null, $.JSDouble);
    $.setRuntimeTypeInfo(_textCoord, [$.JSDouble]);
    box_0.indexCounter_0 = 0;
    box_0.lineNum_1 = 0;
    box_0.currObj_2 = null;
    $.JSArray_methods.forEach$1($.split$1$s(str, "\n"), new $.Obj$fromString_closure(new $.Obj$fromString_parseLine(box_0, this, url, indexTable, _vertCoord, _textCoord)));
    t1 = this._partTable;
    keys = t1.get$keys(t1);
    $.print("DEBUG got keys");
    filtered = keys.where$1(keys, new $.Obj$fromString_closure0(this, url));
    $.print("DEBUG got filtered");
    copy = filtered.toList$0(filtered);
    $.print("DEBUG got copy");
    $.JSArray_methods.forEach$1(copy, t1.get$remove(t1));
    $.print("DEBUG got result");
    t2 = this.textCoord;
    if (t2.length === 0) {
      t3 = this.indices;
      $.print("OBJ: FIXME: adding " + t3.length + " virtual texture coordinates");
      for (i = 0; i < t3.length; ++i) {
        t2.push(0);
        t2.push(0);
      }
    }
    $.print("Obj.fromString: objects = " + t1.get$length(t1));
    $.print("Obj.fromString: vertCoord.length = " + this.vertCoord.length);
    $.print("Obj.fromString: textCoord.length = " + t2.length);
    $.print("Obj.fromString: normCoord.length = " + this.normCoord.length);
    $.print("Obj.fromString: mtllib = " + this.mtllib);
  }
},

Obj$fromString_parseLine: {"": "Closure;box_0,this_1,url_2,indexTable_3,_vertCoord_4,_textCoord_5",
  call$1: function(rawLine) {
    var t1, line, new_mtllib, t2, objName, t3, smooth, v, w, t, f, t4, t5, i, ind, index, t6, vIndex, vOffset, t7, ti, tIndex, tOffset, ni, new_usemtl;
    t1 = this.box_0;
    t1.lineNum_1 = $.$add$ns(t1.lineNum_1, 1);
    line = $.trim$0$s(rawLine);
    if ($.JSString_methods.get$isEmpty(line))
      return;
    if (0 >= line.length)
      throw $.ioore(0);
    if (line[0] === "#")
      return;
    if ($.JSString_methods.startsWith$1(line, "mtllib ")) {
      new_mtllib = $.JSString_methods.substring$1(line, $.get$Obj_prefix_mtllib_len());
      t1 = this.this_1;
      t2 = t1.get$mtllib();
      if (t2 != null)
        $.print("OBJ: mtllib redefinition: from mtllib=" + t2 + " to mtllib=" + new_mtllib);
      t1.set$mtllib(new_mtllib);
      return;
    }
    if ($.JSString_methods.startsWith$1(line, "o ")) {
      objName = $.JSString_methods.substring$1(line, 2);
      t2 = this.this_1;
      t3 = t2.get$_partTable();
      t1.currObj_2 = t3.$index(t3, objName);
      if (t1.currObj_2 == null) {
        t1.currObj_2 = $.Part$(objName, t2.get$indices().length);
        t2 = t2.get$_partTable();
        t2.$indexSet(t2, objName, t1.currObj_2);
      } else
        $.print("OBJ: redefining object " + objName + " at line=" + $.S(t1.lineNum_1) + " from url=" + this.url_2 + ": [" + line + "]");
      return;
    }
    if (t1.currObj_2 == null) {
      $.print("OBJ: non-object pattern at line=" + $.S(t1.lineNum_1) + " from url=" + this.url_2 + ": [" + line + "]");
      return;
    }
    if ($.JSString_methods.startsWith$1(line, "s ")) {
      smooth = $.JSString_methods.substring$1(line, 2);
      t2 = smooth === "0" || $.JSString_methods.startsWith$1($.JSString_methods.toLowerCase$0(smooth), "f");
      t1 = t1.currObj_2;
      if (t2)
        t1.set$smooth(false);
      else
        t1.set$smooth(true);
      return;
    }
    if ($.JSString_methods.startsWith$1(line, "v ")) {
      v = line.split(" ");
      t2 = v.length;
      if (t2 === 4) {
        t1 = this._vertCoord_4;
        if (1 >= t2)
          throw $.ioore(1);
        t1.push($.double_parse(v[1], null));
        if (2 >= v.length)
          throw $.ioore(2);
        t1.push($.double_parse(v[2], null));
        if (3 >= v.length)
          throw $.ioore(3);
        t1.push($.double_parse(v[3], null));
        return;
      }
      if (t2 === 5) {
        if (4 >= t2)
          throw $.ioore(4);
        w = $.double_parse(v[4], null);
        t1 = this._vertCoord_4;
        if (1 >= v.length)
          throw $.ioore(1);
        t1.push($.$div$n($.double_parse(v[1], null), w));
        if (2 >= v.length)
          throw $.ioore(2);
        t1.push($.$div$n($.double_parse(v[2], null), w));
        if (3 >= v.length)
          throw $.ioore(3);
        t1.push($.$div$n($.double_parse(v[3], null), w));
        return;
      }
      $.print("OBJ: wrong number of vertex coordinates: " + (t2 - 1) + " at line=" + $.S(t1.lineNum_1) + " from url=" + this.url_2 + ": [" + line + "]");
      return;
    }
    if ($.JSString_methods.startsWith$1(line, "vt ")) {
      t = line.split(" ");
      t2 = t.length;
      if (t2 !== 3) {
        $.print("OBJ: wrong number of texture coordinates (" + (t2 - 1) + " != 2) at line=" + $.S(t1.lineNum_1) + " from url=" + this.url_2 + ": [" + line + "]");
        return;
      }
      t1 = this._textCoord_5;
      if (1 >= t2)
        throw $.ioore(1);
      t1.push($.double_parse(t[1], null));
      if (2 >= t.length)
        throw $.ioore(2);
      t1.push($.double_parse(t[2], null));
      return;
    }
    if ($.JSString_methods.startsWith$1(line, "vn "))
      return;
    if ($.JSString_methods.startsWith$1(line, "f ")) {
      f = line.split(" ");
      t2 = f.length;
      if (t2 !== 4) {
        $.print("OBJ: wrong number of face indices (" + (t2 - 1) + " != 3) at line=" + $.S(t1.lineNum_1) + " from url=" + this.url_2 + ": [" + line + "]");
        return;
      }
      for (t2 = this.this_1, t3 = this.indexTable_3, t4 = this._textCoord_5, t5 = this._vertCoord_4, i = 1; i < f.length; ++i) {
        ind = f[i];
        index = t3.$index(t3, ind);
        if (index != null) {
          t2.get$indices().push(index);
          t6 = t1.currObj_2;
          t6.set$indexListSize(t6.get$indexListSize() + 1);
          continue;
        }
        v = $.split$1$s(ind, "/");
        if (0 >= v.length)
          throw $.ioore(0);
        vIndex = $.$sub$n($.Primitives_parseInt(v[0], null, null), 1);
        if (typeof vIndex !== "number")
          throw $.iae(vIndex);
        vOffset = 3 * vIndex;
        t6 = t2.get$vertCoord();
        t7 = vOffset + 0;
        if (t7 >>> 0 !== t7 || t7 >= t5.length)
          throw $.ioore(t7);
        t6.push(t5[t7]);
        t7 = t2.get$vertCoord();
        t6 = vOffset + 1;
        if (t6 >>> 0 !== t6 || t6 >= t5.length)
          throw $.ioore(t6);
        t7.push(t5[t6]);
        t6 = t2.get$vertCoord();
        t7 = vOffset + 2;
        if (t7 >>> 0 !== t7 || t7 >= t5.length)
          throw $.ioore(t7);
        t6.push(t5[t7]);
        if (v.length > 1) {
          ti = v[1];
          if (ti != null && $.get$isEmpty$asx(ti) !== true) {
            tIndex = $.$sub$n($.Primitives_parseInt(ti, null, null), 1);
            if (typeof tIndex !== "number")
              throw $.iae(tIndex);
            tOffset = 2 * tIndex;
            t6 = t2.get$textCoord();
            t7 = tOffset + 0;
            if (t7 >>> 0 !== t7 || t7 >= t4.length)
              throw $.ioore(t7);
            t6.push(t4[t7]);
            t7 = t2.get$textCoord();
            t6 = tOffset + 1;
            if (t6 >>> 0 !== t6 || t6 >= t4.length)
              throw $.ioore(t6);
            t7.push(t4[t6]);
          }
        }
        if (v.length > 2) {
          ni = v[2];
          if (ni != null && $.get$isEmpty$asx(ni) !== true)
            $.$sub$n($.Primitives_parseInt(ni, null, null), 1);
        }
        t2.get$indices().push(t1.indexCounter_0);
        t6 = t1.currObj_2;
        t6.set$indexListSize(t6.get$indexListSize() + 1);
        t3.$indexSet(t3, ind, t1.indexCounter_0);
        t1.indexCounter_0 = $.$add$ns(t1.indexCounter_0, 1);
      }
      return;
    }
    if ($.JSString_methods.startsWith$1(line, "usemtl ")) {
      new_usemtl = $.JSString_methods.substring$1(line, $.get$Obj_prefix_usemtl_len());
      t2 = t1.currObj_2;
      if (t2.get$usemtl() != null)
        $.print("OBJ: object=" + $.S($.get$name$x(t2)) + " usemtl redefinition: from usemtl=" + t1.currObj_2.get$usemtl() + " to usemtl=" + new_usemtl);
      t1.currObj_2.set$usemtl(new_usemtl);
      return;
    }
    $.print("OBJ: unknown pattern at line=" + $.S(t1.lineNum_1) + " from url=" + this.url_2 + ": [" + line + "]");
  }
},

Obj$fromString_closure: {"": "Closure;parseLine_6",
  call$1: function(line) {
    return this.parseLine_6.call$1(line);
  }
},

Obj$fromString_closure0: {"": "Closure;this_7,url_8",
  call$1: function($name) {
    var t1, empty;
    t1 = this.this_7.get$_partTable();
    empty = t1.$index(t1, $name).get$indexListSize() < 1;
    if (empty)
      $.print("OBJ: deleting empty object=" + $.S($name) + " loaded from url=" + this.url_8);
    return empty;
  }
},

Material: {"": "Object;name>,map_Kd@,Kd<"},

mtllib_parse__parse_newmtl: {"": "Closure;box_0,lib_1",
  call$5: function(field, param, line, lineNum, url) {
    var t1, t2;
    t1 = this.lib_1;
    t2 = this.box_0;
    t2.currMaterial_0 = t1.$index(t1, param);
    if (t2.currMaterial_0 == null) {
      t2.currMaterial_0 = $.Material$(param);
      t1.$indexSet(t1, param, t2.currMaterial_0);
    }
  }
},

mtllib_parse__parse_map_Kd: {"": "Closure;box_0",
  call$5: function(field, param, line, lineNum, url) {
    var t1 = this.box_0.currMaterial_0;
    if (t1 == null) {
      $.print("mtllib_parse: url=" + $.S(url) + ": line=" + $.S(lineNum) + ": map_Kd=" + $.S(param) + " found for undefined material: [" + $.S(line) + "]");
      return;
    }
    t1.set$map_Kd(param);
  }
},

mtllib_parse__parse_Kd: {"": "Closure;box_0",
  call$5: function(field, param, line, lineNum, url) {
    var t1, rgb, t2, t3;
    t1 = this.box_0;
    if (t1.currMaterial_0 == null) {
      $.print("mtllib_parse: url=" + $.S(url) + ": line=" + $.S(lineNum) + ": Kd=" + $.S(param) + " found for undefined material: [" + $.S(line) + "]");
      return;
    }
    rgb = $.split$1$s(param, " ");
    t2 = t1.currMaterial_0.get$Kd();
    if (0 >= rgb.length)
      throw $.ioore(0);
    t3 = $.double_parse(rgb[0], null);
    if (0 >= t2.length)
      throw $.ioore(0);
    t2[0] = t3;
    t3 = t1.currMaterial_0.get$Kd();
    if (1 >= rgb.length)
      throw $.ioore(1);
    t2 = $.double_parse(rgb[1], null);
    if (1 >= t3.length)
      throw $.ioore(1);
    t3[1] = t2;
    t1 = t1.currMaterial_0.get$Kd();
    if (2 >= rgb.length)
      throw $.ioore(2);
    t2 = $.double_parse(rgb[2], null);
    if (2 >= t1.length)
      throw $.ioore(2);
    t1[2] = t2;
  }
},

mtllib_parse__parse_noop: {"": "Closure;",
  call$5: function(field, param, line, lineNum, url) {
  }
},

mtllib_parse_parseLine: {"": "Closure;box_0,url_2,parserTable_3",
  call$1: function(rawLine) {
    var t1, line, paramIndex, field, param, t2, parser;
    t1 = this.box_0;
    t1.lineNum_1 = $.$add$ns(t1.lineNum_1, 1);
    line = $.trim$0$s(rawLine);
    if ($.JSString_methods.get$isEmpty(line))
      return;
    if (0 >= line.length)
      throw $.ioore(0);
    if (line[0] === "#")
      return;
    paramIndex = $.JSString_methods.indexOf$1(line, " ");
    if ($.$lt$n(paramIndex, 1)) {
      $.print("mtllib_parse: space separator not found on line=" + $.S(t1.lineNum_1) + " from url=" + this.url_2 + ": [" + line + "]");
      return;
    }
    field = $.JSString_methods.substring$2(line, 0, paramIndex);
    param = $.JSString_methods.trim$0($.JSString_methods.substring$1(line, paramIndex));
    t2 = this.parserTable_3;
    parser = t2.$index(t2, field);
    if (parser == null) {
      $.print("mtllib_parse: unknown field=[" + field + "] on line=" + $.S(t1.lineNum_1) + " from url=" + this.url_2 + ": [" + line + "]");
      return;
    }
    parser.call$5(field, param, line, t1.lineNum_1, this.url_2);
  }
},

mtllib_parse_closure: {"": "Closure;parseLine_4",
  call$1: function(line) {
    return this.parseLine_4.call$1(line);
  }
},

Part$: function($name, indexFirst) {
  return new $.Part($name, null, null, indexFirst, 0);
},

Obj$fromString: function(url, str) {
  var t1, t2, t3, t4, t5;
  t1 = $.Map_Map($.JSString, $.Part);
  t2 = $.List_List(null, $.JSDouble);
  $.setRuntimeTypeInfo(t2, [$.JSDouble]);
  t3 = $.List_List(null, $.JSDouble);
  $.setRuntimeTypeInfo(t3, [$.JSDouble]);
  t4 = $.List_List(null, $.JSDouble);
  $.setRuntimeTypeInfo(t4, [$.JSDouble]);
  t5 = $.List_List(null, $.JSInt);
  $.setRuntimeTypeInfo(t5, [$.JSInt]);
  t5 = new $.Obj(t1, t2, t3, t4, t5, null);
  t5.Obj$fromString$2(url, str, {});
  return t5;
},

Material$: function($name) {
  var t1 = $.List_List(3, $.JSDouble);
  $.setRuntimeTypeInfo(t1, [$.JSDouble]);
  return new $.Material($name, null, t1);
},

mtllib_parse: function(str, url) {
  var t1, lib, t2, parserTable;
  t1 = {};
  lib = $.Map_Map($.JSString, $.Material);
  t1.currMaterial_0 = null;
  t2 = new $.mtllib_parse__parse_noop();
  parserTable = $.makeLiteralMap(["newmtl", new $.mtllib_parse__parse_newmtl(t1, lib), "map_Kd", new $.mtllib_parse__parse_map_Kd(t1), "Kd", new $.mtllib_parse__parse_Kd(t1), "Ns", t2, "Ka", t2, "Ks", t2, "Ni", t2, "d", t2, "illum", t2]);
  t1.lineNum_1 = 0;
  $.JSArray_methods.forEach$1($.split$1$s(str, "\n"), new $.mtllib_parse_closure(new $.mtllib_parse_parseLine(t1, url, parserTable)));
  $.print("mtllib_parse: url=" + url + ": materials: " + lib.get$length(lib));
  return lib;
}}],
["shader", "shader.dart", , {
Instance: {"": "Object;model>,center<,scale>,pickColor<,MV",
  update$1: function(_, gameLoop) {
  },
  draw$3: function(gameLoop, prog, cam) {
    var t1, t2, t3, gl;
    t1 = this.MV;
    $.setViewMatrix(t1, cam.eye, cam.center, cam.up);
    t2 = this.center;
    t3 = $.getInterceptor$asx(t2);
    t1.translate$3(t1, t3.$index(t2, 0), t3.$index(t2, 1), t3.$index(t2, 2));
    t2 = this.scale;
    t1.scale$3(t1, t2, t2, t2);
    gl = prog.gl;
    t2 = $.getInterceptor$x(gl);
    t2.uniformMatrix4fv$3(gl, prog.u_MV, false, t1.storage);
    t1 = this.model;
    t2.bindBuffer$2(gl, 34962, t1.get$vertexPositionBuffer());
    t2.vertexAttribPointer$6(gl, prog.a_Position, t1.get$vertexPositionBufferItemSize(), 5126, false, 0, 0);
    t2.bindBuffer$2(gl, 34963, t1.get$vertexIndexBuffer());
    $.JSArray_methods.forEach$1(t1.get$pieceList(), new $.Instance_draw_closure(this, gl));
  }
},

Instance_draw_closure: {"": "Closure;this_0,gl_1",
  call$1: function(piece) {
    $.drawElements$4$x(this.gl_1, 4, piece.get$vertexIndexLength(), 5123, piece.get$vertexIndexOffset() * $.get$model$x(this.this_0).get$vertexIndexBufferItemSize());
  }
},

Piece: {"": "Object;vertexIndexOffset<,vertexIndexLength<"},

Model: {"": "Object;vertexPositionBuffer<,vertexIndexBuffer<,vertexPositionBufferItemSize<,vertexIndexBufferItemSize<,pieceList<,instanceList<",
  _createBuffers$5: function(gl, indices, vertCoord, textCoord, normCoord) {
    var t1 = $.getInterceptor$x(gl);
    this.vertexPositionBuffer = t1.createBuffer$0(gl);
    t1.bindBuffer$2(gl, 34962, this.vertexPositionBuffer);
    t1.bufferDataTyped$3(gl, 34962, $.Float32List_Float32List$fromList(vertCoord), 35044);
    this.vertexIndexBuffer = t1.createBuffer$0(gl);
    t1.bindBuffer$2(gl, 34963, this.vertexIndexBuffer);
    t1.bufferDataTyped$3(gl, 34963, $.Uint16List_Uint16List$fromList(indices), 35044);
    t1.bindBuffer$2(gl, 34962, null);
    t1.bindBuffer$2(gl, 34963, null);
  },
  addPiece$2: function(offset, $length) {
    var pi = $.Piece$(offset, $length);
    this.pieceList.push(pi);
    return pi;
  },
  loadObj$2: function(gl, o) {
    var t1 = o.get$partList();
    t1.forEach$1(t1, new $.Model_loadObj_closure(this));
  },
  addInstance$1: function(i) {
    this.instanceList.push(i);
  },
  drawInstances$3: function(gameLoop, program, cam) {
    $.JSArray_methods.forEach$1(this.instanceList, new $.Model_drawInstances_closure(gameLoop, program, cam));
  },
  update$1: function(_, gameLoop) {
    $.JSArray_methods.forEach$1(this.instanceList, new $.Model_update_closure(gameLoop));
  },
  Model$fromOBJ$2: function(gl, URL) {
    $.HttpRequest_getString(URL, null, null).then$1(new $.Model$fromOBJ_handleResponse(this, gl, URL)).catchError$1(new $.Model$fromOBJ_handleError(URL));
  },
  Model$fromJson$2: function(gl, URL) {
    $.HttpRequest_getString(URL, null, null).then$1(new $.Model$fromJson_handleResponse(this, gl)).catchError$1(new $.Model$fromJson_handleError(URL));
  }
},

Model$fromJson_handleResponse: {"": "Closure;this_0,gl_1",
  call$1: function(response) {
    var m, e, exception, t1, indices, vertCoord;
    m = null;
    try {
      m = $.parse(response, null);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      e = t1;
      $.print("Model.fromJson: failure parsing JSON: " + $.S(e));
      return;
    }

    indices = $.$index$asx(m, "vertInd");
    vertCoord = $.$index$asx(m, "vertCoord");
    t1 = this.this_0;
    t1.addPiece$2(0, $.get$length$asx(indices));
    t1._createBuffers$5(this.gl_1, indices, vertCoord, null, null);
  }
},

Model$fromJson_handleError: {"": "Closure;URL_2",
  call$1: function(err) {
    $.print("Model.fromJson: failure fetching JSON from URL: " + this.URL_2 + ": " + $.S(err));
  }
},

Model_loadObj_closure: {"": "Closure;this_0",
  call$1: function(pa) {
    var pi = this.this_0.addPiece$2(pa.get$indexFirst(), pa.get$indexListSize());
    $.print("Model.fromOBJ: added part " + $.S($.get$name$x(pa)) + " into piece: offset=" + pi.vertexIndexOffset + " length=" + $.S(pi.vertexIndexLength));
  }
},

Model$fromOBJ_handleResponse: {"": "Closure;this_0,gl_1,URL_2",
  call$1: function(response) {
    var t1, obj, t2;
    t1 = this.URL_2;
    $.print("Model.fromOBJ: fetched OBJ from URL: " + t1);
    obj = $.Obj$fromString(t1, response);
    t1 = this.this_0;
    t2 = this.gl_1;
    t1.loadObj$2(t2, obj);
    t1._createBuffers$5(t2, obj.indices, obj.vertCoord, obj.textCoord, obj.normCoord);
  }
},

Model$fromOBJ_handleError: {"": "Closure;URL_3",
  call$1: function(err) {
    $.print("Model.fromOBJ: failure fetching OBJ from URL: " + this.URL_3 + ": " + $.S(err));
  }
},

Model_drawInstances_closure: {"": "Closure;gameLoop_0,program_1,cam_2",
  call$1: function(i) {
    return i.draw$3(this.gameLoop_0, this.program_1, this.cam_2);
  }
},

Model_update_closure: {"": "Closure;gameLoop_0",
  call$1: function(i) {
    return $.update$1$x(i, this.gameLoop_0);
  }
},

mouseClickHit_match: {"": "Closure;color_0",
  call$1: function(i) {
    return $.matchColor(this.color_0, i.get$pickColor());
  }
},

PickerInstance: {"": "Instance;model,center,scale,pickColor,MV",
  draw$3: function(gameLoop, prog, cam) {
    $.uniform4fv$2$x(prog.gl, $.propertyTypeCast(prog, "$isPickerShader").u_Color, this.pickColor);
    $.Instance.prototype.draw$3.call(this, gameLoop, prog, cam);
  },
  $isPickerInstance: true
},

PickerShader: {"": "ShaderProgram;u_Color,programList,instanceList<,framebuffer,offscreen,program,gl,a_Position,u_MV,u_P,shaderReady,modelList",
  _createRenderbuffer$3: function(gl, width, height) {
    var e, texture, exception, t1, renderbuffer;
    texture = $.createTexture$0$x(gl);
    $.bindTexture$2$x(gl, 3553, texture);
    try {
      $.texImage2DTyped$9$x(gl, 3553, 0, 6408, width, height, 0, 6408, 5121, null);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      e = t1;
      $.print("FIXME DEBUG work-around: PickerShader: gl.texImage2D: exception: " + $.S(e));
    }

    renderbuffer = $.createRenderbuffer$0$x(gl);
    $.bindRenderbuffer$2$x(gl, 36161, renderbuffer);
    $.renderbufferStorage$4$x(gl, 36161, 33189, width, height);
    this.framebuffer = $.createFramebuffer$0$x(gl);
    $.bindFramebuffer$2$x(gl, 36160, this.framebuffer);
    $.framebufferTexture2D$5$x(gl, 36160, 36064, 3553, texture, 0);
    $.framebufferRenderbuffer$4$x(gl, 36160, 36096, 36161, renderbuffer);
    $.bindTexture$2$x(gl, 3553, null);
    $.bindRenderbuffer$2$x(gl, 36161, null);
    $.bindFramebuffer$2$x(gl, 36160, null);
  },
  getLocations$0: function() {
    $.ShaderProgram.prototype.getLocations$0.call(this);
    this.u_Color = $.getUniformLocation$2$x(this.gl, this.program, "u_Color");
    $.print("PickerShader: locations ready");
  },
  drawModels$3: function(gameLoop, cam, pMatrix) {
    var t1, t2;
    if (this.offscreen === true)
      $.bindFramebuffer$2$x(this.gl, 36160, this.framebuffer);
    t1 = this.gl;
    t2 = $.getInterceptor$x(t1);
    t2.useProgram$1(t1, this.program);
    t2.enableVertexAttribArray$1(t1, this.a_Position);
    t2.uniformMatrix4fv$3(t1, this.u_P, false, pMatrix.storage);
    $.JSArray_methods.forEach$1(this.instanceList, new $.PickerShader_drawModels_closure(this, gameLoop, cam));
    t2.bindBuffer$2(t1, 34962, null);
    t2.bindBuffer$2(t1, 34963, null);
    t2.bindFramebuffer$2(t1, 36160, null);
  },
  PickerShader$4: function(gl, programList, width, height) {
    $.forEach$1$ax(this.programList, new $.PickerShader_closure(this));
    this._createRenderbuffer$3(gl, width, height);
  },
  $isPickerShader: true
},

PickerShader_closure: {"": "Closure;this_0",
  call$1: function(p) {
    $.JSArray_methods.forEach$1(p.get$modelList(), new $.PickerShader__closure(this.this_0));
  }
},

PickerShader__closure: {"": "Closure;this_1",
  call$1: function(m) {
    var t1 = $.JSArray_methods.where$1(m.get$instanceList(), new $.PickerShader___closure());
    t1.forEach$1(t1, new $.PickerShader___closure0(this.this_1));
  }
},

PickerShader___closure: {"": "Closure;",
  call$1: function(i) {
    return i.get$pickColor() != null;
  }
},

PickerShader___closure0: {"": "Closure;this_2",
  call$1: function(ii) {
    var pi = $.PickerInstance$(ii);
    this.this_2.get$instanceList().push(pi);
  }
},

PickerShader_drawModels_closure: {"": "Closure;this_0,gameLoop_1,cam_2",
  call$1: function(i) {
    return i.draw$3(this.gameLoop_1, this.this_0, this.cam_2);
  }
},

ShaderProgram: {"": "Object;program?,gl<,a_Position,u_MV,u_P,shaderReady?,modelList<",
  initContext$2: function(gl, textureTable) {
  },
  getLocations$0: function() {
    var t1, t2;
    t1 = this.gl;
    t2 = $.getInterceptor$x(t1);
    this.a_Position = t2.getAttribLocation$2(t1, this.program, "a_Position");
    this.u_MV = t2.getUniformLocation$2(t1, this.program, "u_MV");
    this.u_P = t2.getUniformLocation$2(t1, this.program, "u_P");
    $.print("ShaderProgram: locations ready");
  },
  fetch$3: function(shaderCache, vertexShaderURL, fragmentShaderURL) {
    var t1, t2, t3;
    t1 = {};
    $.print("Program.fetch: vsUrl=" + vertexShaderURL + " fsURL=" + fragmentShaderURL);
    t2 = new $.ShaderProgram_fetch_compileShader(this, shaderCache);
    t1.vertexShader_0 = null;
    t1.fragmentShader_1 = null;
    t3 = new $.ShaderProgram_fetch_tryLink(t1, this);
    t1.vertexShader_0 = shaderCache.$index(shaderCache, vertexShaderURL);
    if (t1.vertexShader_0 == null) {
      $.print($.JSString_methods.$add($.JSString_methods.$add("vertexShader: ", vertexShaderURL), ": cache MISS"));
      new $.ShaderProgram_fetch_fetchVertexShader(t1, vertexShaderURL, t2, t3).call$0();
    } else
      $.print($.JSString_methods.$add($.JSString_methods.$add("vertexShader: ", vertexShaderURL), ": cache HIT"));
    if (t1.fragmentShader_1 == null) {
      $.print($.JSString_methods.$add($.JSString_methods.$add("fragmentShader: ", fragmentShaderURL), ": cache MISS"));
      new $.ShaderProgram_fetch_fetchFragmentShader(t1, fragmentShaderURL, t2, t3).call$0();
    } else
      $.print($.JSString_methods.$add($.JSString_methods.$add("fragmentShader: ", fragmentShaderURL), ": cache HIT"));
    t3.call$0();
  },
  addModel$1: function(m) {
    this.modelList.push(m);
  },
  drawModels$3: function(gameLoop, cam, pMatrix) {
    var t1, t2;
    if (!this.shaderReady)
      return;
    t1 = this.gl;
    t2 = $.getInterceptor$x(t1);
    t2.useProgram$1(t1, this.program);
    t2.enableVertexAttribArray$1(t1, this.a_Position);
    t2.uniformMatrix4fv$3(t1, this.u_P, false, pMatrix.storage);
    $.JSArray_methods.forEach$1(this.modelList, new $.ShaderProgram_drawModels_closure(this, gameLoop, cam));
    t2.bindBuffer$2(t1, 34962, null);
    t2.bindBuffer$2(t1, 34963, null);
  },
  update$1: function(_, gameLoop) {
    $.JSArray_methods.forEach$1(this.modelList, new $.ShaderProgram_update_closure(gameLoop));
  }
},

ShaderProgram_fetch_compileShader: {"": "Closure;this_1,shaderCache_2",
  call$3: function(shaderURL, shaderSource, shaderType) {
    var t1, shader, parameter, infoLog;
    t1 = this.this_1;
    shader = $.createShader$1$x(t1.get$gl(), shaderType);
    $.shaderSource$2$x(t1.get$gl(), shader, shaderSource);
    $.compileShader$1$x(t1.get$gl(), shader);
    parameter = $.toString$0($.getShaderParameter$2$x(t1.get$gl(), shader, 35713)) === "true";
    $.print("DEBUG gl.getShaderParameter: shader=" + $.S(shaderURL) + " bool=true parameter=" + parameter);
    $.print("FIXME work-around https://code.google.com/p/dart/issues/detail?id=11487");
    if (!parameter) {
      infoLog = $.getShaderInfoLog$1$x(t1.get$gl(), shader);
      $.print("compileShader: compilation FAILURE: " + $.S(shaderURL) + ": info=" + infoLog);
      if ($.isContextLost$0$x(t1.get$gl()) === true)
        $.print("compileShader: compilation FAILURE: " + $.S(shaderURL) + ": info=" + infoLog + ": context is lost");
      return;
    }
    t1 = this.shaderCache_2;
    t1.$indexSet(t1, shaderURL, shader);
    $.print($.JSString_methods.$add($.JSString_methods.$add("compileShader: ", shaderURL), ": compiled and cached"));
    return shader;
  }
},

ShaderProgram_fetch_tryLink: {"": "Closure;box_0,this_3",
  call$0: function() {
    var t1, t2, p, parameter, infoLog;
    t1 = this.box_0;
    if (t1.vertexShader_0 == null || t1.fragmentShader_1 == null)
      return;
    t2 = this.this_3;
    p = $.createProgram$0$x(t2.get$gl());
    $.attachShader$2$x(t2.get$gl(), p, t1.vertexShader_0);
    $.attachShader$2$x(t2.get$gl(), p, t1.fragmentShader_1);
    $.linkProgram$1$x(t2.get$gl(), p);
    parameter = $.getProgramParameter$2$x(t2.get$gl(), p, 35714);
    $.print("DEBUG gl.getProgramParameter: bool=" + (typeof parameter === "boolean") + " parameter=" + $.S(parameter));
    if (parameter !== true) {
      infoLog = $.getProgramInfoLog$1$x(t2.get$gl(), p);
      $.print("tryLink: shader program link FAILURE: " + infoLog);
      if ($.isContextLost$0$x(t2.get$gl()) === true)
        $.print("tryLink: shader program link FAILURE: " + infoLog + ": context is lost");
      return;
    }
    $.print("ShaderProgram: program linked");
    t2.set$program(p);
    t2.getLocations$0();
    t2.set$shaderReady(true);
  }
},

ShaderProgram_fetch_fetchVertexShader: {"": "Closure;box_0,vertexShaderURL_4,compileShader_5,tryLink_6",
  call$0: function() {
    var requestVert, t1;
    requestVert = $.HttpRequest_HttpRequest();
    t1 = this.vertexShaderURL_4;
    $.HttpRequest_methods.open$2(requestVert, "GET", t1);
    $.HttpRequest_methods.get$onLoad(requestVert).listen$1(new $.ShaderProgram_fetch_fetchVertexShader_closure(this.box_0, t1, this.compileShader_5, this.tryLink_6, requestVert));
    $.HttpRequest_methods.get$onError(requestVert).listen$1(new $.ShaderProgram_fetch_fetchVertexShader_closure0());
    requestVert.send();
  }
},

ShaderProgram_fetch_fetchVertexShader_closure: {"": "Closure;box_0,vertexShaderURL_7,compileShader_8,tryLink_9,requestVert_10",
  call$1: function(e) {
    var t1, response;
    t1 = this.requestVert_10;
    response = t1.responseText;
    if (t1.status !== 200) {
      $.print("vertexShader: error: [" + response + "]");
      return;
    }
    this.box_0.vertexShader_0 = this.compileShader_8.call$3(this.vertexShaderURL_7, response, 35633);
    this.tryLink_9.call$0();
  }
},

ShaderProgram_fetch_fetchVertexShader_closure0: {"": "Closure;",
  call$1: function(e) {
    $.print("vertexShader: error: [" + $.S(e) + "]");
  }
},

ShaderProgram_fetch_fetchFragmentShader: {"": "Closure;box_0,fragmentShaderURL_11,compileShader_12,tryLink_13",
  call$0: function() {
    var requestFrag, t1;
    requestFrag = $.HttpRequest_HttpRequest();
    t1 = this.fragmentShaderURL_11;
    $.HttpRequest_methods.open$2(requestFrag, "GET", t1);
    $.HttpRequest_methods.get$onLoad(requestFrag).listen$1(new $.ShaderProgram_fetch_fetchFragmentShader_closure(this.box_0, t1, this.compileShader_12, this.tryLink_13, requestFrag));
    $.HttpRequest_methods.get$onError(requestFrag).listen$1(new $.ShaderProgram_fetch_fetchFragmentShader_closure0());
    requestFrag.send();
  }
},

ShaderProgram_fetch_fetchFragmentShader_closure: {"": "Closure;box_0,fragmentShaderURL_14,compileShader_15,tryLink_16,requestFrag_17",
  call$1: function(e) {
    var t1, response;
    t1 = this.requestFrag_17;
    response = t1.responseText;
    if (t1.status !== 200) {
      $.print("fragmentShader: error: [" + response + "]");
      return;
    }
    this.box_0.fragmentShader_1 = this.compileShader_15.call$3(this.fragmentShaderURL_14, response, 35632);
    this.tryLink_16.call$0();
  }
},

ShaderProgram_fetch_fetchFragmentShader_closure0: {"": "Closure;",
  call$1: function(e) {
    $.print("fragmentShader: error: [" + $.S(e) + "]");
  }
},

ShaderProgram_drawModels_closure: {"": "Closure;this_0,gameLoop_1,cam_2",
  call$1: function(m) {
    return m.drawInstances$3(this.gameLoop_1, this.this_0, this.cam_2);
  }
},

ShaderProgram_update_closure: {"": "Closure;gameLoop_0",
  call$1: function(m) {
    return $.update$1$x(m, this.gameLoop_0);
  }
},

TexShaderProgram: {"": "ShaderProgram;a_TextureCoord,u_Sampler,program,gl,a_Position,u_MV,u_P,shaderReady,modelList",
  initContext$2: function(gl, textureTable) {
    $.JSArray_methods.forEach$1(this.modelList, new $.TexShaderProgram_initContext_closure(gl, textureTable));
  },
  getLocations$0: function() {
    var t1, t2;
    $.ShaderProgram.prototype.getLocations$0.call(this);
    t1 = this.gl;
    t2 = $.getInterceptor$x(t1);
    this.a_TextureCoord = t2.getAttribLocation$2(t1, this.program, "a_TextureCoord");
    this.u_Sampler = t2.getUniformLocation$2(t1, this.program, "u_Sampler");
    $.print("TexShaderProgram: locations ready");
  },
  drawModels$3: function(gameLoop, cam, pMatrix) {
    var t1, t2;
    if (!this.shaderReady)
      return;
    t1 = this.gl;
    t2 = $.getInterceptor$x(t1);
    t2.useProgram$1(t1, this.program);
    t2.enableVertexAttribArray$1(t1, this.a_Position);
    t2.enableVertexAttribArray$1(t1, this.a_TextureCoord);
    t2.uniformMatrix4fv$3(t1, this.u_P, false, pMatrix.storage);
    $.JSArray_methods.forEach$1(this.modelList, new $.TexShaderProgram_drawModels_closure(this, gameLoop, cam));
    t2.bindBuffer$2(t1, 34962, null);
    t2.bindBuffer$2(t1, 34963, null);
    t2.bindTexture$2(t1, 3553, null);
  },
  $isTexShaderProgram: true
},

TexShaderProgram_initContext_closure: {"": "Closure;gl_0,textureTable_1",
  call$1: function(m) {
    return m.initContext$2(this.gl_0, this.textureTable_1);
  }
},

TexShaderProgram_drawModels_closure: {"": "Closure;this_0,gameLoop_1,cam_2",
  call$1: function(m) {
    return m.drawInstances$3(this.gameLoop_1, this.this_0, this.cam_2);
  }
},

TexPiece: {"": "Piece;texInfo<,vertexIndexOffset,vertexIndexLength", $isTexPiece: true},

TexModel: {"": "Model;textureCoordBuffer,textureCoordBufferItemSize,asset<,textureTable<,vertexPositionBuffer,vertexIndexBuffer,vertexPositionBufferItemSize,vertexIndexBufferItemSize,pieceList,instanceList",
  initContext$2: function(gl, textureTable) {
    $.JSArray_methods.forEach$1(this.pieceList, new $.TexModel_initContext_closure(gl, textureTable));
  },
  _createBuffers$5: function(gl, indices, vertCoord, textCoord, normCoord) {
    var t1 = $.getInterceptor$x(gl);
    this.textureCoordBuffer = t1.createBuffer$0(gl);
    t1.bindBuffer$2(gl, 34962, this.textureCoordBuffer);
    t1.bufferDataTyped$3(gl, 34962, $.Float32List_Float32List$fromList(textCoord), 35044);
    $.Model.prototype._createBuffers$5.call(this, gl, indices, vertCoord, textCoord, normCoord);
  },
  loadObj$2: function(gl, obj) {
    var mtlURL = this.asset.get$mtl() + "/" + obj.mtllib;
    $.HttpRequest_getString(mtlURL, null, null).then$1(new $.TexModel_loadObj_onMtlLibLoaded(this, gl, obj, mtlURL)).catchError$1(new $.TexModel_loadObj_closure(mtlURL));
  },
  addPiece$2: function(offset, $length) {
    var pi = $.TexPiece$(offset, $length);
    this.pieceList.push(pi);
    return pi;
  },
  addTexture$3: function(indexOffset, indexLength, tex) {
    this.addPiece$2(indexOffset, indexLength).texInfo = tex;
  },
  drawInstances$3: function(gameLoop, program, cam) {
    var gl, t1;
    gl = program.gl;
    t1 = $.getInterceptor$x(gl);
    t1.bindBuffer$2(gl, 34962, this.vertexPositionBuffer);
    t1.vertexAttribPointer$6(gl, program.a_Position, this.vertexPositionBufferItemSize, 5126, false, 0, 0);
    t1.bindBuffer$2(gl, 34962, this.textureCoordBuffer);
    t1.vertexAttribPointer$6(gl, $.propertyTypeCast(program, "$isTexShaderProgram").a_TextureCoord, this.textureCoordBufferItemSize, 5126, false, 0, 0);
    t1.bindBuffer$2(gl, 34963, this.vertexIndexBuffer);
    $.JSArray_methods.forEach$1(this.instanceList, new $.TexModel_drawInstances_closure(gameLoop, program, cam));
  },
  $isTexModel: true
},

TexModel_initContext_closure: {"": "Closure;gl_0,textureTable_1",
  call$1: function(pi) {
    return pi.get$texInfo().loadTexture$2(this.gl_0, this.textureTable_1);
  }
},

TexModel_loadObj_onMtlLibLoaded: {"": "Closure;this_1,gl_2,obj_3,mtlURL_4",
  call$1: function(materialResponse) {
    var t1, t2, lib, t3, t4, t5;
    t1 = {};
    t2 = this.mtlURL_4;
    lib = $.mtllib_parse(materialResponse, t2);
    t1.i_0 = 0;
    t3 = this.obj_3;
    t4 = t3.get$partList();
    t5 = this.this_1;
    t4.forEach$1(t4, new $.TexModel_loadObj_onMtlLibLoaded_closure(t1, t5, this.gl_2, t2, lib));
    t3 = t3.get$partList();
    $.print("loadObj: " + $.S(t3.get$length(t3)) + " parts fed into " + t5.get$pieceList().length + " pieces");
  }
},

TexModel_loadObj_onMtlLibLoaded_closure: {"": "Closure;box_0,this_5,gl_6,mtlURL_7,lib_8",
  call$1: function(pa) {
    var usemtl, t1, mtl, r, g, b, texFile, textureURL, texInfo;
    usemtl = pa.get$usemtl();
    t1 = this.lib_8;
    mtl = t1.$index(t1, usemtl);
    if (mtl == null) {
      $.print("loadObj " + $.S(this.box_0.i_0) + ": material usemtl=" + usemtl + " NOT FOUND on mtllib=" + this.mtlURL_7);
      return;
    }
    t1 = mtl.get$Kd();
    if (0 >= t1.length)
      throw $.ioore(0);
    r = $.round$0$nx($.$mul$n(t1[0], 255));
    t1 = mtl.get$Kd();
    if (1 >= t1.length)
      throw $.ioore(1);
    g = $.round$0$nx($.$mul$n(t1[1], 255));
    t1 = mtl.get$Kd();
    if (2 >= t1.length)
      throw $.ioore(2);
    b = $.round$0$nx($.$mul$n(t1[2], 255));
    texFile = mtl.get$map_Kd();
    textureURL = texFile != null ? this.this_5.get$asset().get$texture() + "/" + $.S(texFile) : null;
    t1 = this.this_5;
    texInfo = $.TextureInfo$(this.gl_6, t1.get$textureTable(), textureURL, [r, g, b, 255]);
    t1.addTexture$3(pa.get$indexFirst(), pa.get$indexListSize(), texInfo);
    t1 = this.box_0;
    t1.i_0 = $.$add$ns(t1.i_0, 1);
  }
},

TexModel_loadObj_closure: {"": "Closure;mtlURL_9",
  call$1: function(err) {
    $.print("loadObj: failure fetching mtllib: " + this.mtlURL_9 + ": " + $.S(err));
  }
},

TexModel_drawInstances_closure: {"": "Closure;gameLoop_0,program_1,cam_2",
  call$1: function(i) {
    return i.draw$3(this.gameLoop_0, this.program_1, this.cam_2);
  }
},

TexInstance: {"": "Instance;model,center,scale,pickColor,MV",
  draw$3: function(gameLoop, prog, cam) {
    var t1, t2, t3, gl;
    t1 = this.MV;
    $.setViewMatrix(t1, cam.eye, cam.center, cam.up);
    t2 = this.center;
    t3 = $.getInterceptor$asx(t2);
    t1.translate$3(t1, t3.$index(t2, 0), t3.$index(t2, 1), t3.$index(t2, 2));
    t2 = this.scale;
    t1.scale$3(t1, t2, t2, t2);
    gl = prog.gl;
    $.uniformMatrix4fv$3$x(gl, prog.u_MV, false, t1.storage);
    $.JSArray_methods.forEach$1($.propertyTypeCast(this.model, "$isTexModel").pieceList, new $.TexInstance_draw_closure(this, prog, gl));
  }
},

TexInstance_draw_closure: {"": "Closure;this_0,prog_1,gl_2",
  call$1: function(pi) {
    var ti, t1, t2;
    $.propertyTypeCast(pi, "$isTexPiece");
    ti = pi.texInfo;
    t1 = this.gl_2;
    t2 = $.getInterceptor$x(t1);
    t2.activeTexture$1(t1, 33985);
    t2.bindTexture$2(t1, 3553, ti.texture);
    t2.uniform1i$2(t1, $.propertyTypeCast(this.prog_1, "$isTexShaderProgram").u_Sampler, 1);
    t2.drawElements$4(t1, 4, pi.vertexIndexLength, 5123, pi.vertexIndexOffset * $.get$model$x(this.this_0).get$vertexIndexBufferItemSize());
  }
},

Instance$: function(model, center, scale, pickColor) {
  return new $.Instance(model, center, scale, pickColor, $.Matrix4$identity());
},

Piece$: function(vertexIndexOffset, vertexIndexLength) {
  return new $.Piece(vertexIndexOffset, vertexIndexLength);
},

Model$fromJson: function(gl, URL) {
  var t1, t2;
  t1 = $.List_List(null, $.Piece);
  $.setRuntimeTypeInfo(t1, [$.Piece]);
  t2 = $.List_List(null, $.Instance);
  $.setRuntimeTypeInfo(t2, [$.Instance]);
  t2 = new $.Model(null, null, 3, 2, t1, t2);
  t2.Model$fromJson$2(gl, URL);
  return t2;
},

Model$fromOBJ: function(gl, URL) {
  var t1, t2;
  t1 = $.List_List(null, $.Piece);
  $.setRuntimeTypeInfo(t1, [$.Piece]);
  t2 = $.List_List(null, $.Instance);
  $.setRuntimeTypeInfo(t2, [$.Instance]);
  t2 = new $.Model(null, null, 3, 2, t1, t2);
  t2.Model$fromOBJ$2(gl, URL);
  return t2;
},

generatePickColor: function() {
  var i, t1, t2;
  for (i = 0; i < 3; ++i) {
    t1 = $.get$_currentPickColor();
    if (i >= t1.length)
      throw $.ioore(i);
    t2 = $.$add$ns(t1[i], 0.0625);
    if (i >= t1.length)
      throw $.ioore(i);
    t1[i] = t2;
    t1 = $.get$_currentPickColor();
    if (i >= t1.length)
      throw $.ioore(i);
    if ($.$le$n(t1[i], 1))
      break;
    t1 = $.get$_currentPickColor();
    if (i >= t1.length)
      throw $.ioore(i);
    t1[i] = 0;
  }
  if (i === 3)
    $.print("generatePickColor: overflow");
  return $.Float32List_Float32List$fromList($.get$_currentPickColor());
},

matchColor: function(i, f) {
  var t1, d0, d1, d2;
  if (0 >= f.length)
    throw $.ioore(0);
  t1 = f[0];
  if (0 >= i.length)
    throw $.ioore(0);
  d0 = $.JSNumber_methods.abs$0(255 * t1 - $.JSInt_methods.toDouble$0(i[0]));
  if (1 >= f.length)
    throw $.ioore(1);
  t1 = f[1];
  if (1 >= i.length)
    throw $.ioore(1);
  d1 = $.JSNumber_methods.abs$0(255 * t1 - $.JSInt_methods.toDouble$0(i[1]));
  if (2 >= f.length)
    throw $.ioore(2);
  t1 = f[2];
  if (2 >= i.length)
    throw $.ioore(2);
  d2 = $.JSNumber_methods.abs$0(255 * t1 - $.JSInt_methods.toDouble$0(i[2]));
  return d0 < 1 && d1 < 1 && d2 < 1;
},

mouseClickHit: function(list, color) {
  var match, pi, exception;
  match = new $.mouseClickHit_match(color);
  pi = null;
  try {
    pi = $.firstWhere$1$ax(list, match);
  } catch (exception) {
    $.unwrapException(exception);
    return;
  }

  return $.propertyTypeCast(pi, "$isPickerInstance");
},

PickerInstance$: function(i) {
  var t1 = $.getInterceptor$x(i);
  return new $.PickerInstance(t1.get$model(i), i.get$center(), t1.get$scale(i), i.get$pickColor(), $.Matrix4$identity());
},

PickerShader$: function(gl, programList, width, height) {
  var t1, t2;
  t1 = $.List_List(null, $.PickerInstance);
  $.setRuntimeTypeInfo(t1, [$.PickerInstance]);
  t2 = $.List_List(null, $.Model);
  $.setRuntimeTypeInfo(t2, [$.Model]);
  t2 = new $.PickerShader(null, programList, t1, null, null, null, gl, null, null, null, false, t2);
  t2.PickerShader$4(gl, programList, width, height);
  return t2;
},

ShaderProgram$: function(gl) {
  var t1 = $.List_List(null, $.Model);
  $.setRuntimeTypeInfo(t1, [$.Model]);
  return new $.ShaderProgram(null, gl, null, null, null, false, t1);
},

TexShaderProgram$: function(gl) {
  var t1 = $.List_List(null, $.Model);
  $.setRuntimeTypeInfo(t1, [$.Model]);
  return new $.TexShaderProgram(null, null, null, gl, null, null, null, false, t1);
},

TexPiece$: function(indexOffset, indexLength) {
  return new $.TexPiece(null, indexOffset, indexLength);
},

TexModel$fromOBJ: function(gl, URL, textureTable, asset) {
  var t1, t2;
  t1 = $.List_List(null, $.Piece);
  $.setRuntimeTypeInfo(t1, [$.Piece]);
  t2 = $.List_List(null, $.Instance);
  $.setRuntimeTypeInfo(t2, [$.Instance]);
  t2 = new $.TexModel(null, 2, asset, textureTable, null, null, 3, 2, t1, t2);
  t2.Model$fromOBJ$2(gl, URL);
  return t2;
},

TexInstance$: function(model, center, scale, pick) {
  return new $.TexInstance(model, center, scale, pick, $.Matrix4$identity());
}}],
["skybox", "skybox.dart", , {
SkyboxProgram: {"": "ShaderProgram;u_Skybox,program,gl,a_Position,u_MV,u_P,shaderReady,modelList",
  getLocations$0: function() {
    $.ShaderProgram.prototype.getLocations$0.call(this);
    this.u_Skybox = $.getUniformLocation$2$x(this.gl, this.program, "u_Skybox");
    $.print("SkyboxProgram: locations ready");
  },
  fetch$3: function(shaderCache, vertexShaderURL, fragmentShaderURL) {
    $.ShaderProgram.prototype.fetch$3.call(this, shaderCache, vertexShaderURL, fragmentShaderURL);
  },
  drawModels$3: function(gameLoop, cam, pMatrix) {
    var t1, t2;
    if (!this.shaderReady)
      return;
    t1 = this.gl;
    t2 = $.getInterceptor$x(t1);
    t2.useProgram$1(t1, this.program);
    t2.enableVertexAttribArray$1(t1, this.a_Position);
    t2.activeTexture$1(t1, 33984);
    t2.uniform1i$2(t1, this.u_Skybox, 0);
    t2.uniformMatrix4fv$3(t1, this.u_P, false, pMatrix.storage);
    $.JSArray_methods.forEach$1(this.modelList, new $.SkyboxProgram_drawModels_closure(this, gameLoop, cam));
    t2.bindBuffer$2(t1, 34962, null);
    t2.bindBuffer$2(t1, 34963, null);
  }
},

SkyboxProgram_drawModels_closure: {"": "Closure;this_0,gameLoop_1,cam_2",
  call$1: function(m) {
    return m.drawInstances$3(this.gameLoop_1, this.this_0, this.cam_2);
  }
},

SkyboxModel: {"": "Model;cubemapTexture<,vertexPositionBuffer,vertexIndexBuffer,vertexPositionBufferItemSize,vertexIndexBufferItemSize,pieceList,instanceList",
  addCubemapFace$3: function(gl, face, URL) {
    var image, t1;
    image = $.ImageElement_ImageElement(null, null, null);
    t1 = $.getInterceptor$x(image);
    t1.get$onLoad(image).listen$1(new $.SkyboxModel_addCubemapFace_handleDone(this, gl, face, URL, image));
    t1.get$onError(image).listen$1(new $.SkyboxModel_addCubemapFace_handleError(URL));
    t1.set$src(image, URL);
  },
  drawInstances$3: function(gameLoop, program, cam) {
    var gl, t1;
    gl = program.gl;
    t1 = $.getInterceptor$x(gl);
    t1.bindTexture$2(gl, 34067, this.cubemapTexture);
    $.JSArray_methods.forEach$1(this.instanceList, new $.SkyboxModel_drawInstances_closure(gameLoop, program, cam));
    t1.bindTexture$2(gl, 34067, null);
  },
  SkyboxModel$fromJson$4: function(gl, URL, reverse, rescale) {
    this.cubemapTexture = $.createTexture$0$x(gl);
  }
},

SkyboxModel_addCubemapFace_handleDone: {"": "Closure;this_0,gl_1,face_2,URL_3,image_4",
  call$1: function(e) {
    var t1, t2;
    $.print("addCubemapFace: handleDone: loaded image from URL: " + this.URL_3);
    t1 = this.gl_1;
    t2 = $.getInterceptor$x(t1);
    t2.bindTexture$2(t1, 34067, this.this_0.get$cubemapTexture());
    t2.texParameteri$3(t1, 34067, 10240, 9728);
    t2.texParameteri$3(t1, 34067, 10241, 9728);
    t2.texImage2DImage$6(t1, this.face_2, 0, 6408, 6408, 5121, this.image_4);
    t2.texParameteri$3(t1, 34067, 10242, 33071);
    t2.texParameteri$3(t1, 34067, 10243, 33071);
    t2.bindTexture$2(t1, 34067, null);
  }
},

SkyboxModel_addCubemapFace_handleError: {"": "Closure;URL_5",
  call$1: function(e) {
    $.print("addCubemapFace: handleError: failure loading image from URL: " + this.URL_5 + ": " + $.S(e));
  }
},

SkyboxModel_drawInstances_closure: {"": "Closure;gameLoop_0,program_1,cam_2",
  call$1: function(i) {
    return i.draw$3(this.gameLoop_0, this.program_1, this.cam_2);
  }
},

SkyboxInstance: {"": "Instance;model,center,scale,pickColor,MV",
  draw$3: function(gameLoop, prog, cam) {
    var t1, t2, t3, t4, s, gl;
    t1 = $.JSDouble_methods.abs$0($.sin(cam.getRad$1(gameLoop.get$renderInterpolationFactor())));
    t2 = this.MV;
    $.setViewMatrix(t2, cam.eye, cam.center, cam.up);
    t3 = this.center;
    t4 = $.getInterceptor$asx(t3);
    t2.translate$3(t2, t4.$index(t3, 0), t4.$index(t3, 1), t4.$index(t3, 2));
    s = $.$mul$n(this.scale, 15 * t1 + 1);
    t2.scale$3(t2, s, s, s);
    gl = prog.gl;
    t1 = $.getInterceptor$x(gl);
    t1.uniformMatrix4fv$3(gl, prog.u_MV, false, t2.storage);
    t2 = this.model;
    t1.bindBuffer$2(gl, 34962, t2.get$vertexPositionBuffer());
    t1.vertexAttribPointer$6(gl, prog.a_Position, t2.get$vertexPositionBufferItemSize(), 5126, false, 0, 0);
    t1.bindBuffer$2(gl, 34963, t2.get$vertexIndexBuffer());
    $.JSArray_methods.forEach$1(t2.get$pieceList(), new $.SkyboxInstance_draw_closure(this, gl));
  }
},

SkyboxInstance_draw_closure: {"": "Closure;this_0,gl_1",
  call$1: function(piece) {
    $.drawElements$4$x(this.gl_1, 4, piece.get$vertexIndexLength(), 5123, piece.get$vertexIndexOffset() * $.get$model$x(this.this_0).get$vertexIndexBufferItemSize());
  }
},

SkyboxProgram$: function(gl) {
  var t1 = $.List_List(null, $.Model);
  $.setRuntimeTypeInfo(t1, [$.Model]);
  return new $.SkyboxProgram(null, null, gl, null, null, null, false, t1);
},

SkyboxModel$fromJson: function(gl, URL, reverse, rescale) {
  var t1, t2;
  t1 = $.List_List(null, $.Piece);
  $.setRuntimeTypeInfo(t1, [$.Piece]);
  t2 = $.List_List(null, $.Instance);
  $.setRuntimeTypeInfo(t2, [$.Instance]);
  t2 = new $.SkyboxModel(null, null, null, 3, 2, t1, t2);
  t2.Model$fromJson$2(gl, URL);
  t2.SkyboxModel$fromJson$4(gl, URL, reverse, rescale);
  return t2;
},

SkyboxInstance$: function(model, center, scale) {
  return new $.SkyboxInstance(model, center, scale, null, $.Matrix4$identity());
}}],
["texture", "texture.dart", , {
TextureInfo: {"": "Object;textureName<,texture<,temporaryColor",
  loadSolidColor$1: function(gl) {
    var t1 = $.getInterceptor$x(gl);
    t1.bindTexture$2(gl, 3553, this.texture);
    t1.texImage2DTyped$9(gl, 3553, 0, 6408, 1, 1, 0, 6408, 5121, $.Uint8List_Uint8List$fromList(this.temporaryColor));
    t1.texParameteri$3(gl, 3553, 10240, 9728);
    t1.texParameteri$3(gl, 3553, 10241, 9728);
    t1.texParameteri$3(gl, 3553, 10242, 33071);
    t1.texParameteri$3(gl, 3553, 10243, 33071);
    t1.bindTexture$2(gl, 3553, null);
  },
  _loadTexture2D$2: function(gl, textureTable) {
    var image, t1, t2;
    image = $.ImageElement_ImageElement(null, null, null);
    t1 = this.textureName;
    if (t1 != null)
      textureTable.$indexSet(textureTable, t1, this.texture);
    this.loadSolidColor$1(gl);
    t2 = $.getInterceptor$x(image);
    t2.get$onLoad(image).listen$1(new $.TextureInfo__loadTexture2D_onDone(this, gl, image));
    t2.get$onError(image).listen$1(new $.TextureInfo__loadTexture2D_onError(this));
    t2.set$src(image, t1);
  },
  createTexture$2: function(_, gl, textureTable) {
    this.texture = $.createTexture$0$x(gl);
    if (this.texture == null) {
      $.print("TextureInfo: " + ("could not create texture for: " + this.textureName));
      return;
    }
    if (this.textureName == null) {
      this.loadSolidColor$1(gl);
      return;
    }
    this._loadTexture2D$2(gl, textureTable);
  },
  loadTexture$2: function(gl, textureTable) {
    var t1 = this.textureName;
    if (t1 != null) {
      this.texture = textureTable.$index(textureTable, t1);
      if (this.texture != null) {
        $.print("TextureInfo: texture table HIT: " + t1);
        return;
      }
    }
    this.createTexture$2(this, gl, textureTable);
  },
  TextureInfo$4: function(gl, textureTable, textureName, temporaryColor) {
    this.loadTexture$2(gl, textureTable);
  }
},

TextureInfo__loadTexture2D_onDone: {"": "Closure;this_0,gl_1,image_2",
  call$1: function(e) {
    var t1, t2;
    t1 = this.gl_1;
    t2 = $.getInterceptor$x(t1);
    t2.bindTexture$2(t1, 3553, this.this_0.get$texture());
    t2.pixelStorei$2(t1, 37440, 1);
    t2.texImage2DImage$6(t1, 3553, 0, 6408, 6408, 5121, this.image_2);
    t2.texParameteri$3(t1, 3553, 10240, 9728);
    t2.texParameteri$3(t1, 3553, 10241, 9728);
    t2.texParameteri$3(t1, 3553, 10242, 33071);
    t2.texParameteri$3(t1, 3553, 10243, 33071);
    t2.bindTexture$2(t1, 3553, null);
  }
},

TextureInfo__loadTexture2D_onError: {"": "Closure;this_3",
  call$1: function(e) {
    $.print("TextureInfo: handleError: failure loading image from URL: " + this.this_3.get$textureName() + ": " + $.S(e));
  }
},

TextureInfo_createTexture_handleDone: {"": "Closure;this_0",
  call$1: function(e) {
    $.print("TextureInfo: handleDone: loaded image from URL: " + this.this_0.get$textureName());
  }
},

TextureInfo_createTexture_handleError: {"": "Closure;this_1",
  call$1: function(e) {
    $.print("TextureInfo: handleError: failure loading image from URL: " + this.this_1.get$textureName() + ": " + $.S(e));
  }
},

TextureInfo$: function(gl, textureTable, textureName, temporaryColor) {
  var t1 = new $.TextureInfo(textureName, null, temporaryColor);
  t1.TextureInfo$4(gl, textureTable, textureName, temporaryColor);
  return t1;
}}],
["vector_math", "package:vector_math/vector_math.dart", , {
Matrix4: {"": "Object;storage<",
  index$2: function(_, row, col) {
    return $.$add$ns($.$mul$n(col, 4), row);
  },
  setEntry$3: function(row, col, v) {
    var t1, t2;
    t1 = this.storage;
    t2 = this.index$2(this, row, col);
    if (t2 >>> 0 !== t2 || t2 >= t1.length)
      throw $.ioore(t2);
    t1[t2] = v;
  },
  toString$0: function(_) {
    return "[0] " + $.S(this.getRow$1(0)) + "\n[1] " + $.S(this.getRow$1(1)) + "\n[2] " + $.S(this.getRow$1(2)) + "\n[3] " + $.S(this.getRow$1(3)) + "\n";
  },
  get$dimension: function() {
    return 4;
  },
  $index: function(_, i) {
    var t1 = this.storage;
    if (i >>> 0 !== i || i >= t1.length)
      throw $.ioore(i);
    return t1[i];
  },
  $indexSet: function(_, i, v) {
    var t1 = this.storage;
    if (i >>> 0 !== i || i >= t1.length)
      throw $.ioore(i);
    t1[i] = v;
  },
  getRow$1: function(row) {
    var r, t1, t2, t3;
    r = $.Vector4$zero();
    t1 = r.storage;
    t2 = this.storage;
    t3 = this.index$2(this, row, 0);
    if (t3 >>> 0 !== t3 || t3 >= t2.length)
      throw $.ioore(t3);
    t3 = t2[t3];
    if (0 >= t1.length)
      throw $.ioore(0);
    t1[0] = t3;
    t3 = this.index$2(this, row, 1);
    if (t3 >>> 0 !== t3 || t3 >= t2.length)
      throw $.ioore(t3);
    t3 = t2[t3];
    if (1 >= t1.length)
      throw $.ioore(1);
    t1[1] = t3;
    t3 = this.index$2(this, row, 2);
    if (t3 >>> 0 !== t3 || t3 >= t2.length)
      throw $.ioore(t3);
    t3 = t2[t3];
    if (2 >= t1.length)
      throw $.ioore(2);
    t1[2] = t3;
    t3 = this.index$2(this, row, 3);
    if (t3 >>> 0 !== t3 || t3 >= t2.length)
      throw $.ioore(t3);
    t3 = t2[t3];
    if (3 >= t1.length)
      throw $.ioore(3);
    t1[3] = t3;
    return r;
  },
  _mul_scale$1: function(arg) {
    var r, t1, t2, t3;
    r = $.Matrix4$zero();
    t1 = r.storage;
    t2 = this.storage;
    if (15 >= t2.length)
      throw $.ioore(15);
    t3 = t2[15];
    if (15 >= t1.length)
      throw $.ioore(15);
    t1[15] = t3 * arg;
    t1[14] = t2[14] * arg;
    t1[13] = t2[13] * arg;
    t1[12] = t2[12] * arg;
    t1[11] = t2[11] * arg;
    t1[10] = t2[10] * arg;
    t1[9] = t2[9] * arg;
    t1[8] = t2[8] * arg;
    t1[7] = t2[7] * arg;
    t1[6] = t2[6] * arg;
    t1[5] = t2[5] * arg;
    t1[4] = t2[4] * arg;
    t1[3] = t2[3] * arg;
    t1[2] = t2[2] * arg;
    t1[1] = t2[1] * arg;
    t1[0] = t2[0] * arg;
    return r;
  },
  _mul_matrix$1: function(arg) {
    var r, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13;
    r = $.Matrix4$zero();
    t1 = r.storage;
    t2 = this.storage;
    t3 = t2.length;
    if (0 >= t3)
      throw $.ioore(0);
    t4 = t2[0];
    t5 = arg.get$storage();
    t6 = t5.length;
    if (0 >= t6)
      throw $.ioore(0);
    t7 = t5[0];
    if (4 >= t3)
      throw $.ioore(4);
    t8 = t2[4];
    if (1 >= t6)
      throw $.ioore(1);
    t9 = t5[1];
    if (8 >= t3)
      throw $.ioore(8);
    t10 = t2[8];
    if (2 >= t6)
      throw $.ioore(2);
    t11 = t5[2];
    if (12 >= t3)
      throw $.ioore(12);
    t12 = t2[12];
    if (3 >= t6)
      throw $.ioore(3);
    t5 = t5[3];
    t6 = t1.length;
    if (0 >= t6)
      throw $.ioore(0);
    t1[0] = t4 * t7 + t8 * t9 + t10 * t11 + t12 * t5;
    t5 = t2[0];
    t12 = arg.get$storage();
    t11 = t12.length;
    if (4 >= t11)
      throw $.ioore(4);
    t10 = t12[4];
    t9 = t2[4];
    if (5 >= t11)
      throw $.ioore(5);
    t8 = t12[5];
    t7 = t2[8];
    if (6 >= t11)
      throw $.ioore(6);
    t4 = t12[6];
    t13 = t2[12];
    if (7 >= t11)
      throw $.ioore(7);
    t12 = t12[7];
    if (4 >= t6)
      throw $.ioore(4);
    t1[4] = t5 * t10 + t9 * t8 + t7 * t4 + t13 * t12;
    t12 = t2[0];
    t13 = arg.get$storage();
    t4 = t13.length;
    if (8 >= t4)
      throw $.ioore(8);
    t7 = t13[8];
    t8 = t2[4];
    if (9 >= t4)
      throw $.ioore(9);
    t9 = t13[9];
    t10 = t2[8];
    if (10 >= t4)
      throw $.ioore(10);
    t5 = t13[10];
    t11 = t2[12];
    if (11 >= t4)
      throw $.ioore(11);
    t13 = t13[11];
    if (8 >= t6)
      throw $.ioore(8);
    t1[8] = t12 * t7 + t8 * t9 + t10 * t5 + t11 * t13;
    t13 = t2[0];
    t11 = arg.get$storage();
    t5 = t11.length;
    if (12 >= t5)
      throw $.ioore(12);
    t10 = t11[12];
    t9 = t2[4];
    if (13 >= t5)
      throw $.ioore(13);
    t8 = t11[13];
    t7 = t2[8];
    if (14 >= t5)
      throw $.ioore(14);
    t12 = t11[14];
    t4 = t2[12];
    if (15 >= t5)
      throw $.ioore(15);
    t11 = t11[15];
    if (12 >= t6)
      throw $.ioore(12);
    t1[12] = t13 * t10 + t9 * t8 + t7 * t12 + t4 * t11;
    t11 = t2[1];
    t4 = arg.get$storage();
    t12 = t4.length;
    if (0 >= t12)
      throw $.ioore(0);
    t7 = t4[0];
    t8 = t2[5];
    if (1 >= t12)
      throw $.ioore(1);
    t9 = t4[1];
    t10 = t2[9];
    if (2 >= t12)
      throw $.ioore(2);
    t13 = t4[2];
    if (13 >= t3)
      throw $.ioore(13);
    t5 = t2[13];
    if (3 >= t12)
      throw $.ioore(3);
    t1[1] = t11 * t7 + t8 * t9 + t10 * t13 + t5 * t4[3];
    t4 = t2[1];
    t5 = arg.get$storage();
    t13 = t5.length;
    if (4 >= t13)
      throw $.ioore(4);
    t10 = t5[4];
    t9 = t2[5];
    if (5 >= t13)
      throw $.ioore(5);
    t8 = t5[5];
    t7 = t2[9];
    if (6 >= t13)
      throw $.ioore(6);
    t11 = t5[6];
    t12 = t2[13];
    if (7 >= t13)
      throw $.ioore(7);
    t1[5] = t4 * t10 + t9 * t8 + t7 * t11 + t12 * t5[7];
    t5 = t2[1];
    t12 = arg.get$storage();
    t11 = t12.length;
    if (8 >= t11)
      throw $.ioore(8);
    t7 = t12[8];
    t8 = t2[5];
    if (9 >= t11)
      throw $.ioore(9);
    t9 = t12[9];
    t10 = t2[9];
    if (10 >= t11)
      throw $.ioore(10);
    t4 = t12[10];
    t13 = t2[13];
    if (11 >= t11)
      throw $.ioore(11);
    t1[9] = t5 * t7 + t8 * t9 + t10 * t4 + t13 * t12[11];
    t12 = t2[1];
    t13 = arg.get$storage();
    t4 = t13.length;
    if (12 >= t4)
      throw $.ioore(12);
    t10 = t13[12];
    t9 = t2[5];
    if (13 >= t4)
      throw $.ioore(13);
    t8 = t13[13];
    t7 = t2[9];
    if (14 >= t4)
      throw $.ioore(14);
    t5 = t13[14];
    t11 = t2[13];
    if (15 >= t4)
      throw $.ioore(15);
    t13 = t13[15];
    if (13 >= t6)
      throw $.ioore(13);
    t1[13] = t12 * t10 + t9 * t8 + t7 * t5 + t11 * t13;
    t13 = t2[2];
    t11 = arg.get$storage();
    t5 = t11.length;
    if (0 >= t5)
      throw $.ioore(0);
    t7 = t11[0];
    t8 = t2[6];
    if (1 >= t5)
      throw $.ioore(1);
    t9 = t11[1];
    t10 = t2[10];
    if (2 >= t5)
      throw $.ioore(2);
    t12 = t11[2];
    if (14 >= t3)
      throw $.ioore(14);
    t4 = t2[14];
    if (3 >= t5)
      throw $.ioore(3);
    t1[2] = t13 * t7 + t8 * t9 + t10 * t12 + t4 * t11[3];
    t11 = t2[2];
    t4 = arg.get$storage();
    t12 = t4.length;
    if (4 >= t12)
      throw $.ioore(4);
    t10 = t4[4];
    t9 = t2[6];
    if (5 >= t12)
      throw $.ioore(5);
    t8 = t4[5];
    t7 = t2[10];
    if (6 >= t12)
      throw $.ioore(6);
    t13 = t4[6];
    t5 = t2[14];
    if (7 >= t12)
      throw $.ioore(7);
    t1[6] = t11 * t10 + t9 * t8 + t7 * t13 + t5 * t4[7];
    t4 = t2[2];
    t5 = arg.get$storage();
    t13 = t5.length;
    if (8 >= t13)
      throw $.ioore(8);
    t7 = t5[8];
    t8 = t2[6];
    if (9 >= t13)
      throw $.ioore(9);
    t9 = t5[9];
    t10 = t2[10];
    if (10 >= t13)
      throw $.ioore(10);
    t11 = t5[10];
    t12 = t2[14];
    if (11 >= t13)
      throw $.ioore(11);
    t1[10] = t4 * t7 + t8 * t9 + t10 * t11 + t12 * t5[11];
    t5 = t2[2];
    t12 = arg.get$storage();
    t11 = t12.length;
    if (12 >= t11)
      throw $.ioore(12);
    t10 = t12[12];
    t9 = t2[6];
    if (13 >= t11)
      throw $.ioore(13);
    t8 = t12[13];
    t7 = t2[10];
    if (14 >= t11)
      throw $.ioore(14);
    t4 = t12[14];
    t13 = t2[14];
    if (15 >= t11)
      throw $.ioore(15);
    t12 = t12[15];
    if (14 >= t6)
      throw $.ioore(14);
    t1[14] = t5 * t10 + t9 * t8 + t7 * t4 + t13 * t12;
    t12 = t2[3];
    t13 = arg.get$storage();
    t4 = t13.length;
    if (0 >= t4)
      throw $.ioore(0);
    t7 = t13[0];
    t8 = t2[7];
    if (1 >= t4)
      throw $.ioore(1);
    t9 = t13[1];
    t10 = t2[11];
    if (2 >= t4)
      throw $.ioore(2);
    t5 = t13[2];
    if (15 >= t3)
      throw $.ioore(15);
    t3 = t2[15];
    if (3 >= t4)
      throw $.ioore(3);
    t1[3] = t12 * t7 + t8 * t9 + t10 * t5 + t3 * t13[3];
    t13 = t2[3];
    t3 = arg.get$storage();
    t5 = t3.length;
    if (4 >= t5)
      throw $.ioore(4);
    t10 = t3[4];
    t9 = t2[7];
    if (5 >= t5)
      throw $.ioore(5);
    t8 = t3[5];
    t7 = t2[11];
    if (6 >= t5)
      throw $.ioore(6);
    t12 = t3[6];
    t4 = t2[15];
    if (7 >= t5)
      throw $.ioore(7);
    t1[7] = t13 * t10 + t9 * t8 + t7 * t12 + t4 * t3[7];
    t3 = t2[3];
    t4 = arg.get$storage();
    t12 = t4.length;
    if (8 >= t12)
      throw $.ioore(8);
    t7 = t4[8];
    t8 = t2[7];
    if (9 >= t12)
      throw $.ioore(9);
    t9 = t4[9];
    t10 = t2[11];
    if (10 >= t12)
      throw $.ioore(10);
    t13 = t4[10];
    t5 = t2[15];
    if (11 >= t12)
      throw $.ioore(11);
    t1[11] = t3 * t7 + t8 * t9 + t10 * t13 + t5 * t4[11];
    t4 = t2[3];
    t5 = arg.get$storage();
    t13 = t5.length;
    if (12 >= t13)
      throw $.ioore(12);
    t10 = t5[12];
    t9 = t2[7];
    if (13 >= t13)
      throw $.ioore(13);
    t8 = t5[13];
    t7 = t2[11];
    if (14 >= t13)
      throw $.ioore(14);
    t3 = t5[14];
    t2 = t2[15];
    if (15 >= t13)
      throw $.ioore(15);
    t5 = t5[15];
    if (15 >= t6)
      throw $.ioore(15);
    t1[15] = t4 * t10 + t9 * t8 + t7 * t3 + t2 * t5;
    return r;
  },
  _mul_vector$1: function(arg) {
    var r, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11;
    r = $.Vector4$zero();
    t1 = r.storage;
    t2 = this.storage;
    t3 = t2.length;
    if (3 >= t3)
      throw $.ioore(3);
    t4 = t2[3];
    t5 = arg.storage;
    t6 = t5.length;
    if (0 >= t6)
      throw $.ioore(0);
    t7 = t5[0];
    if (7 >= t3)
      throw $.ioore(7);
    t8 = t2[7];
    if (1 >= t6)
      throw $.ioore(1);
    t9 = t5[1];
    if (11 >= t3)
      throw $.ioore(11);
    t10 = t2[11];
    if (2 >= t6)
      throw $.ioore(2);
    t11 = t5[2];
    if (15 >= t3)
      throw $.ioore(15);
    t3 = t2[15];
    if (3 >= t6)
      throw $.ioore(3);
    t6 = t5[3];
    if (3 >= t1.length)
      throw $.ioore(3);
    t1[3] = t4 * t7 + t8 * t9 + t10 * t11 + t3 * t6;
    t1[2] = t2[2] * t5[0] + t2[6] * t5[1] + t2[10] * t5[2] + t2[14] * t5[3];
    t1[1] = t2[1] * t5[0] + t2[5] * t5[1] + t2[9] * t5[2] + t2[13] * t5[3];
    t1[0] = t2[0] * t5[0] + t2[4] * t5[1] + t2[8] * t5[2] + t2[12] * t5[3];
    return r;
  },
  _mul_vector3$1: function(arg) {
    var r, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12;
    r = $.Vector3$zero();
    t1 = r.storage;
    t2 = this.storage;
    t3 = t2.length;
    if (0 >= t3)
      throw $.ioore(0);
    t4 = t2[0];
    t5 = arg.storage;
    t6 = t5.length;
    if (0 >= t6)
      throw $.ioore(0);
    t7 = t5[0];
    if (4 >= t3)
      throw $.ioore(4);
    t8 = t2[4];
    if (1 >= t6)
      throw $.ioore(1);
    t9 = t5[1];
    if (8 >= t3)
      throw $.ioore(8);
    t10 = t2[8];
    if (2 >= t6)
      throw $.ioore(2);
    t6 = t5[2];
    if (12 >= t3)
      throw $.ioore(12);
    t11 = t2[12];
    t12 = t1.length;
    if (0 >= t12)
      throw $.ioore(0);
    t1[0] = t4 * t7 + t8 * t9 + t10 * t6 + t11;
    t11 = t2[1];
    t6 = t5[0];
    t10 = t2[5];
    t9 = t5[1];
    t8 = t2[9];
    t7 = t5[2];
    if (13 >= t3)
      throw $.ioore(13);
    t4 = t2[13];
    if (1 >= t12)
      throw $.ioore(1);
    t1[1] = t11 * t6 + t10 * t9 + t8 * t7 + t4;
    t4 = t2[2];
    t7 = t5[0];
    t8 = t2[6];
    t9 = t5[1];
    t10 = t2[10];
    t5 = t5[2];
    if (14 >= t3)
      throw $.ioore(14);
    t2 = t2[14];
    if (2 >= t12)
      throw $.ioore(2);
    t1[2] = t4 * t7 + t8 * t9 + t10 * t5 + t2;
    return r;
  },
  $mul: function(_, arg) {
    if (typeof arg === "number")
      return this._mul_scale$1(arg);
    if (typeof arg === "object" && arg !== null && !!$.getInterceptor(arg).$isVector4)
      return this._mul_vector$1(arg);
    if (typeof arg === "object" && arg !== null && !!$.getInterceptor(arg).$isVector3)
      return this._mul_vector3$1(arg);
    if (4 === arg.get$dimension())
      return this._mul_matrix$1(arg);
    throw $.wrapException($.ArgumentError$(arg));
  },
  $add: function(_, arg) {
    var r, t1, t2, t3, t4, t5, t6;
    r = new $.Matrix4($.Float32List_Float32List(16));
    t1 = r.storage;
    t2 = this.storage;
    t3 = t2.length;
    if (0 >= t3)
      throw $.ioore(0);
    t4 = t2[0];
    t5 = arg.get$storage();
    if (0 >= t5.length)
      throw $.ioore(0);
    t5 = t5[0];
    t6 = t1.length;
    if (0 >= t6)
      throw $.ioore(0);
    t1[0] = t4 + t5;
    if (1 >= t3)
      throw $.ioore(1);
    t5 = t2[1];
    t4 = arg.get$storage();
    if (1 >= t4.length)
      throw $.ioore(1);
    t4 = t4[1];
    if (1 >= t6)
      throw $.ioore(1);
    t1[1] = t5 + t4;
    if (2 >= t3)
      throw $.ioore(2);
    t4 = t2[2];
    t5 = arg.get$storage();
    if (2 >= t5.length)
      throw $.ioore(2);
    t5 = t5[2];
    if (2 >= t6)
      throw $.ioore(2);
    t1[2] = t4 + t5;
    if (3 >= t3)
      throw $.ioore(3);
    t5 = t2[3];
    t4 = arg.get$storage();
    if (3 >= t4.length)
      throw $.ioore(3);
    t4 = t4[3];
    if (3 >= t6)
      throw $.ioore(3);
    t1[3] = t5 + t4;
    if (4 >= t3)
      throw $.ioore(4);
    t4 = t2[4];
    t5 = arg.get$storage();
    if (4 >= t5.length)
      throw $.ioore(4);
    t5 = t5[4];
    if (4 >= t6)
      throw $.ioore(4);
    t1[4] = t4 + t5;
    if (5 >= t3)
      throw $.ioore(5);
    t5 = t2[5];
    t4 = arg.get$storage();
    if (5 >= t4.length)
      throw $.ioore(5);
    t4 = t4[5];
    if (5 >= t6)
      throw $.ioore(5);
    t1[5] = t5 + t4;
    if (6 >= t3)
      throw $.ioore(6);
    t4 = t2[6];
    t5 = arg.get$storage();
    if (6 >= t5.length)
      throw $.ioore(6);
    t5 = t5[6];
    if (6 >= t6)
      throw $.ioore(6);
    t1[6] = t4 + t5;
    if (7 >= t3)
      throw $.ioore(7);
    t5 = t2[7];
    t4 = arg.get$storage();
    if (7 >= t4.length)
      throw $.ioore(7);
    t4 = t4[7];
    if (7 >= t6)
      throw $.ioore(7);
    t1[7] = t5 + t4;
    if (8 >= t3)
      throw $.ioore(8);
    t4 = t2[8];
    t5 = arg.get$storage();
    if (8 >= t5.length)
      throw $.ioore(8);
    t5 = t5[8];
    if (8 >= t6)
      throw $.ioore(8);
    t1[8] = t4 + t5;
    if (9 >= t3)
      throw $.ioore(9);
    t5 = t2[9];
    t4 = arg.get$storage();
    if (9 >= t4.length)
      throw $.ioore(9);
    t4 = t4[9];
    if (9 >= t6)
      throw $.ioore(9);
    t1[9] = t5 + t4;
    if (10 >= t3)
      throw $.ioore(10);
    t4 = t2[10];
    t5 = arg.get$storage();
    if (10 >= t5.length)
      throw $.ioore(10);
    t5 = t5[10];
    if (10 >= t6)
      throw $.ioore(10);
    t1[10] = t4 + t5;
    if (11 >= t3)
      throw $.ioore(11);
    t5 = t2[11];
    t4 = arg.get$storage();
    if (11 >= t4.length)
      throw $.ioore(11);
    t4 = t4[11];
    if (11 >= t6)
      throw $.ioore(11);
    t1[11] = t5 + t4;
    if (12 >= t3)
      throw $.ioore(12);
    t4 = t2[12];
    t5 = arg.get$storage();
    if (12 >= t5.length)
      throw $.ioore(12);
    t5 = t5[12];
    if (12 >= t6)
      throw $.ioore(12);
    t1[12] = t4 + t5;
    if (13 >= t3)
      throw $.ioore(13);
    t5 = t2[13];
    t4 = arg.get$storage();
    if (13 >= t4.length)
      throw $.ioore(13);
    t4 = t4[13];
    if (13 >= t6)
      throw $.ioore(13);
    t1[13] = t5 + t4;
    if (14 >= t3)
      throw $.ioore(14);
    t4 = t2[14];
    t5 = arg.get$storage();
    if (14 >= t5.length)
      throw $.ioore(14);
    t5 = t5[14];
    if (14 >= t6)
      throw $.ioore(14);
    t1[14] = t4 + t5;
    if (15 >= t3)
      throw $.ioore(15);
    t2 = t2[15];
    t3 = arg.get$storage();
    if (15 >= t3.length)
      throw $.ioore(15);
    t3 = t3[15];
    if (15 >= t6)
      throw $.ioore(15);
    t1[15] = t2 + t3;
    return r;
  },
  $sub: function(_, arg) {
    var r, t1, t2, t3, t4, t5, t6;
    r = new $.Matrix4($.Float32List_Float32List(16));
    t1 = r.storage;
    t2 = this.storage;
    t3 = t2.length;
    if (0 >= t3)
      throw $.ioore(0);
    t4 = t2[0];
    t5 = arg.get$storage();
    if (0 >= t5.length)
      throw $.ioore(0);
    t5 = t5[0];
    t6 = t1.length;
    if (0 >= t6)
      throw $.ioore(0);
    t1[0] = t4 - t5;
    if (1 >= t3)
      throw $.ioore(1);
    t5 = t2[1];
    t4 = arg.get$storage();
    if (1 >= t4.length)
      throw $.ioore(1);
    t4 = t4[1];
    if (1 >= t6)
      throw $.ioore(1);
    t1[1] = t5 - t4;
    if (2 >= t3)
      throw $.ioore(2);
    t4 = t2[2];
    t5 = arg.get$storage();
    if (2 >= t5.length)
      throw $.ioore(2);
    t5 = t5[2];
    if (2 >= t6)
      throw $.ioore(2);
    t1[2] = t4 - t5;
    if (3 >= t3)
      throw $.ioore(3);
    t5 = t2[3];
    t4 = arg.get$storage();
    if (3 >= t4.length)
      throw $.ioore(3);
    t4 = t4[3];
    if (3 >= t6)
      throw $.ioore(3);
    t1[3] = t5 - t4;
    if (4 >= t3)
      throw $.ioore(4);
    t4 = t2[4];
    t5 = arg.get$storage();
    if (4 >= t5.length)
      throw $.ioore(4);
    t5 = t5[4];
    if (4 >= t6)
      throw $.ioore(4);
    t1[4] = t4 - t5;
    if (5 >= t3)
      throw $.ioore(5);
    t5 = t2[5];
    t4 = arg.get$storage();
    if (5 >= t4.length)
      throw $.ioore(5);
    t4 = t4[5];
    if (5 >= t6)
      throw $.ioore(5);
    t1[5] = t5 - t4;
    if (6 >= t3)
      throw $.ioore(6);
    t4 = t2[6];
    t5 = arg.get$storage();
    if (6 >= t5.length)
      throw $.ioore(6);
    t5 = t5[6];
    if (6 >= t6)
      throw $.ioore(6);
    t1[6] = t4 - t5;
    if (7 >= t3)
      throw $.ioore(7);
    t5 = t2[7];
    t4 = arg.get$storage();
    if (7 >= t4.length)
      throw $.ioore(7);
    t4 = t4[7];
    if (7 >= t6)
      throw $.ioore(7);
    t1[7] = t5 - t4;
    if (8 >= t3)
      throw $.ioore(8);
    t4 = t2[8];
    t5 = arg.get$storage();
    if (8 >= t5.length)
      throw $.ioore(8);
    t5 = t5[8];
    if (8 >= t6)
      throw $.ioore(8);
    t1[8] = t4 - t5;
    if (9 >= t3)
      throw $.ioore(9);
    t5 = t2[9];
    t4 = arg.get$storage();
    if (9 >= t4.length)
      throw $.ioore(9);
    t4 = t4[9];
    if (9 >= t6)
      throw $.ioore(9);
    t1[9] = t5 - t4;
    if (10 >= t3)
      throw $.ioore(10);
    t4 = t2[10];
    t5 = arg.get$storage();
    if (10 >= t5.length)
      throw $.ioore(10);
    t5 = t5[10];
    if (10 >= t6)
      throw $.ioore(10);
    t1[10] = t4 - t5;
    if (11 >= t3)
      throw $.ioore(11);
    t5 = t2[11];
    t4 = arg.get$storage();
    if (11 >= t4.length)
      throw $.ioore(11);
    t4 = t4[11];
    if (11 >= t6)
      throw $.ioore(11);
    t1[11] = t5 - t4;
    if (12 >= t3)
      throw $.ioore(12);
    t4 = t2[12];
    t5 = arg.get$storage();
    if (12 >= t5.length)
      throw $.ioore(12);
    t5 = t5[12];
    if (12 >= t6)
      throw $.ioore(12);
    t1[12] = t4 - t5;
    if (13 >= t3)
      throw $.ioore(13);
    t5 = t2[13];
    t4 = arg.get$storage();
    if (13 >= t4.length)
      throw $.ioore(13);
    t4 = t4[13];
    if (13 >= t6)
      throw $.ioore(13);
    t1[13] = t5 - t4;
    if (14 >= t3)
      throw $.ioore(14);
    t4 = t2[14];
    t5 = arg.get$storage();
    if (14 >= t5.length)
      throw $.ioore(14);
    t5 = t5[14];
    if (14 >= t6)
      throw $.ioore(14);
    t1[14] = t4 - t5;
    if (15 >= t3)
      throw $.ioore(15);
    t2 = t2[15];
    t3 = arg.get$storage();
    if (15 >= t3.length)
      throw $.ioore(15);
    t3 = t3[15];
    if (15 >= t6)
      throw $.ioore(15);
    t1[15] = t2 - t3;
    return r;
  },
  translate$3: function(_, x, y, z) {
    var t1, tw, tx, ty, tz, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17;
    t1 = typeof x === "object" && x !== null && !!$.getInterceptor(x).$isVector4;
    tw = t1 ? x.get$w() : 1;
    if (typeof x === "object" && x !== null && !!$.getInterceptor(x).$isVector3 || t1) {
      t1 = $.getInterceptor$x(x);
      tx = t1.get$x(x);
      ty = t1.get$y(x);
      tz = t1.get$z(x);
    } else {
      tz = z;
      ty = y;
      tx = x;
    }
    t1 = this.storage;
    t2 = t1.length;
    if (0 >= t2)
      throw $.ioore(0);
    t3 = t1[0];
    if (typeof tx !== "number")
      throw $.iae(tx);
    if (4 >= t2)
      throw $.ioore(4);
    t4 = t1[4];
    if (typeof ty !== "number")
      throw $.iae(ty);
    if (8 >= t2)
      throw $.ioore(8);
    t5 = t1[8];
    if (typeof tz !== "number")
      throw $.iae(tz);
    if (12 >= t2)
      throw $.ioore(12);
    t6 = t1[12];
    t7 = t1[1];
    t8 = t1[5];
    t9 = t1[9];
    if (13 >= t2)
      throw $.ioore(13);
    t10 = t1[13];
    t11 = t1[2];
    t12 = t1[6];
    t13 = t1[10];
    if (14 >= t2)
      throw $.ioore(14);
    t14 = t1[14];
    t15 = t1[3];
    t16 = t1[7];
    t17 = t1[11];
    if (15 >= t2)
      throw $.ioore(15);
    t2 = t1[15];
    t1[12] = t3 * tx + t4 * ty + t5 * tz + t6 * tw;
    t1[13] = t7 * tx + t8 * ty + t9 * tz + t10 * tw;
    t1[14] = t11 * tx + t12 * ty + t13 * tz + t14 * tw;
    t1[15] = t15 * tx + t16 * ty + t17 * tz + t2 * tw;
    return this;
  },
  scale$3: function(_, x, y, z) {
    var t1, sw, sx, sy, sz, t2, t3;
    t1 = typeof x === "object" && x !== null && !!$.getInterceptor(x).$isVector4;
    sw = t1 ? x.get$w() : 1;
    if (typeof x === "object" && x !== null && !!$.getInterceptor(x).$isVector3 || t1) {
      t1 = $.getInterceptor$x(x);
      sx = t1.get$x(x);
      sy = t1.get$y(x);
      sz = t1.get$z(x);
    } else {
      sy = y == null ? x : $.toDouble$0$n(y);
      sz = z == null ? x : $.toDouble$0$n(z);
      sx = x;
    }
    t1 = this.storage;
    t2 = t1.length;
    if (0 >= t2)
      throw $.ioore(0);
    t3 = t1[0];
    if (typeof sx !== "number")
      throw $.iae(sx);
    t1[0] = t3 * sx;
    if (1 >= t2)
      throw $.ioore(1);
    t1[1] = t1[1] * sx;
    if (2 >= t2)
      throw $.ioore(2);
    t1[2] = t1[2] * sx;
    if (3 >= t2)
      throw $.ioore(3);
    t1[3] = t1[3] * sx;
    if (4 >= t2)
      throw $.ioore(4);
    t3 = t1[4];
    if (typeof sy !== "number")
      throw $.iae(sy);
    t1[4] = t3 * sy;
    if (5 >= t2)
      throw $.ioore(5);
    t1[5] = t1[5] * sy;
    if (6 >= t2)
      throw $.ioore(6);
    t1[6] = t1[6] * sy;
    if (7 >= t2)
      throw $.ioore(7);
    t1[7] = t1[7] * sy;
    if (8 >= t2)
      throw $.ioore(8);
    t3 = t1[8];
    if (typeof sz !== "number")
      throw $.iae(sz);
    t1[8] = t3 * sz;
    if (9 >= t2)
      throw $.ioore(9);
    t1[9] = t1[9] * sz;
    if (10 >= t2)
      throw $.ioore(10);
    t1[10] = t1[10] * sz;
    if (11 >= t2)
      throw $.ioore(11);
    t1[11] = t1[11] * sz;
    if (12 >= t2)
      throw $.ioore(12);
    t1[12] = t1[12] * sw;
    if (13 >= t2)
      throw $.ioore(13);
    t1[13] = t1[13] * sw;
    if (14 >= t2)
      throw $.ioore(14);
    t1[14] = t1[14] * sw;
    if (15 >= t2)
      throw $.ioore(15);
    t1[15] = t1[15] * sw;
    return this;
  },
  get$scale: function(_receiver) {
    return new $.Bound_scale_Matrix4(this, "scale$3", _receiver);
  },
  setZero$0: function() {
    var t1, t2;
    t1 = this.storage;
    t2 = t1.length;
    if (0 >= t2)
      throw $.ioore(0);
    t1[0] = 0;
    if (1 >= t2)
      throw $.ioore(1);
    t1[1] = 0;
    if (2 >= t2)
      throw $.ioore(2);
    t1[2] = 0;
    if (3 >= t2)
      throw $.ioore(3);
    t1[3] = 0;
    if (4 >= t2)
      throw $.ioore(4);
    t1[4] = 0;
    if (5 >= t2)
      throw $.ioore(5);
    t1[5] = 0;
    if (6 >= t2)
      throw $.ioore(6);
    t1[6] = 0;
    if (7 >= t2)
      throw $.ioore(7);
    t1[7] = 0;
    if (8 >= t2)
      throw $.ioore(8);
    t1[8] = 0;
    if (9 >= t2)
      throw $.ioore(9);
    t1[9] = 0;
    if (10 >= t2)
      throw $.ioore(10);
    t1[10] = 0;
    if (11 >= t2)
      throw $.ioore(11);
    t1[11] = 0;
    if (12 >= t2)
      throw $.ioore(12);
    t1[12] = 0;
    if (13 >= t2)
      throw $.ioore(13);
    t1[13] = 0;
    if (14 >= t2)
      throw $.ioore(14);
    t1[14] = 0;
    if (15 >= t2)
      throw $.ioore(15);
    t1[15] = 0;
    return this;
  },
  setIdentity$0: function() {
    var t1, t2;
    t1 = this.storage;
    t2 = t1.length;
    if (0 >= t2)
      throw $.ioore(0);
    t1[0] = 1;
    if (1 >= t2)
      throw $.ioore(1);
    t1[1] = 0;
    if (2 >= t2)
      throw $.ioore(2);
    t1[2] = 0;
    if (3 >= t2)
      throw $.ioore(3);
    t1[3] = 0;
    if (4 >= t2)
      throw $.ioore(4);
    t1[4] = 0;
    if (5 >= t2)
      throw $.ioore(5);
    t1[5] = 1;
    if (6 >= t2)
      throw $.ioore(6);
    t1[6] = 0;
    if (7 >= t2)
      throw $.ioore(7);
    t1[7] = 0;
    if (8 >= t2)
      throw $.ioore(8);
    t1[8] = 0;
    if (9 >= t2)
      throw $.ioore(9);
    t1[9] = 0;
    if (10 >= t2)
      throw $.ioore(10);
    t1[10] = 1;
    if (11 >= t2)
      throw $.ioore(11);
    t1[11] = 0;
    if (12 >= t2)
      throw $.ioore(12);
    t1[12] = 0;
    if (13 >= t2)
      throw $.ioore(13);
    t1[13] = 0;
    if (14 >= t2)
      throw $.ioore(14);
    t1[14] = 0;
    if (15 >= t2)
      throw $.ioore(15);
    t1[15] = 1;
    return this;
  },
  transpose$0: function() {
    var t1, t2, temp;
    t1 = this.storage;
    t2 = t1.length;
    if (4 >= t2)
      throw $.ioore(4);
    temp = t1[4];
    t1[4] = t1[1];
    t1[1] = temp;
    if (8 >= t2)
      throw $.ioore(8);
    temp = t1[8];
    t1[8] = t1[2];
    t1[2] = temp;
    if (12 >= t2)
      throw $.ioore(12);
    temp = t1[12];
    t1[12] = t1[3];
    t1[3] = temp;
    temp = t1[9];
    t1[9] = t1[6];
    t1[6] = temp;
    if (13 >= t2)
      throw $.ioore(13);
    temp = t1[13];
    t1[13] = t1[7];
    t1[7] = temp;
    if (14 >= t2)
      throw $.ioore(14);
    temp = t1[14];
    t1[14] = t1[11];
    t1[11] = temp;
    return this;
  },
  add$1: function(_, o) {
    var t1, t2, t3;
    t1 = this.storage;
    if (0 >= t1.length)
      throw $.ioore(0);
    t2 = t1[0];
    t3 = o.get$storage();
    if (0 >= t3.length)
      throw $.ioore(0);
    t3 = t3[0];
    if (typeof t3 !== "number")
      throw $.iae(t3);
    t3 = $.JSNumber_methods.$add(t2, t3);
    t2 = t1.length;
    if (0 >= t2)
      throw $.ioore(0);
    t1[0] = t3;
    if (1 >= t2)
      throw $.ioore(1);
    t2 = t1[1];
    t3 = o.get$storage();
    if (1 >= t3.length)
      throw $.ioore(1);
    t3 = t3[1];
    if (typeof t3 !== "number")
      throw $.iae(t3);
    t3 = $.JSNumber_methods.$add(t2, t3);
    t2 = t1.length;
    if (1 >= t2)
      throw $.ioore(1);
    t1[1] = t3;
    if (2 >= t2)
      throw $.ioore(2);
    t2 = t1[2];
    t3 = o.get$storage();
    if (2 >= t3.length)
      throw $.ioore(2);
    t3 = t3[2];
    if (typeof t3 !== "number")
      throw $.iae(t3);
    t3 = $.JSNumber_methods.$add(t2, t3);
    t2 = t1.length;
    if (2 >= t2)
      throw $.ioore(2);
    t1[2] = t3;
    if (3 >= t2)
      throw $.ioore(3);
    t2 = t1[3];
    t3 = o.get$storage();
    if (3 >= t3.length)
      throw $.ioore(3);
    t3 = t3[3];
    if (typeof t3 !== "number")
      throw $.iae(t3);
    t3 = $.JSNumber_methods.$add(t2, t3);
    t2 = t1.length;
    if (3 >= t2)
      throw $.ioore(3);
    t1[3] = t3;
    if (4 >= t2)
      throw $.ioore(4);
    t2 = t1[4];
    t3 = o.get$storage();
    if (4 >= t3.length)
      throw $.ioore(4);
    t3 = t3[4];
    if (typeof t3 !== "number")
      throw $.iae(t3);
    t3 = $.JSNumber_methods.$add(t2, t3);
    t2 = t1.length;
    if (4 >= t2)
      throw $.ioore(4);
    t1[4] = t3;
    if (5 >= t2)
      throw $.ioore(5);
    t2 = t1[5];
    t3 = o.get$storage();
    if (5 >= t3.length)
      throw $.ioore(5);
    t3 = t3[5];
    if (typeof t3 !== "number")
      throw $.iae(t3);
    t3 = $.JSNumber_methods.$add(t2, t3);
    t2 = t1.length;
    if (5 >= t2)
      throw $.ioore(5);
    t1[5] = t3;
    if (6 >= t2)
      throw $.ioore(6);
    t2 = t1[6];
    t3 = o.get$storage();
    if (6 >= t3.length)
      throw $.ioore(6);
    t3 = t3[6];
    if (typeof t3 !== "number")
      throw $.iae(t3);
    t3 = $.JSNumber_methods.$add(t2, t3);
    t2 = t1.length;
    if (6 >= t2)
      throw $.ioore(6);
    t1[6] = t3;
    if (7 >= t2)
      throw $.ioore(7);
    t2 = t1[7];
    t3 = o.get$storage();
    if (7 >= t3.length)
      throw $.ioore(7);
    t3 = t3[7];
    if (typeof t3 !== "number")
      throw $.iae(t3);
    t3 = $.JSNumber_methods.$add(t2, t3);
    t2 = t1.length;
    if (7 >= t2)
      throw $.ioore(7);
    t1[7] = t3;
    if (8 >= t2)
      throw $.ioore(8);
    t2 = t1[8];
    t3 = o.get$storage();
    if (8 >= t3.length)
      throw $.ioore(8);
    t3 = t3[8];
    if (typeof t3 !== "number")
      throw $.iae(t3);
    t3 = $.JSNumber_methods.$add(t2, t3);
    t2 = t1.length;
    if (8 >= t2)
      throw $.ioore(8);
    t1[8] = t3;
    if (9 >= t2)
      throw $.ioore(9);
    t2 = t1[9];
    t3 = o.get$storage();
    if (9 >= t3.length)
      throw $.ioore(9);
    t3 = t3[9];
    if (typeof t3 !== "number")
      throw $.iae(t3);
    t3 = $.JSNumber_methods.$add(t2, t3);
    t2 = t1.length;
    if (9 >= t2)
      throw $.ioore(9);
    t1[9] = t3;
    if (10 >= t2)
      throw $.ioore(10);
    t2 = t1[10];
    t3 = o.get$storage();
    if (10 >= t3.length)
      throw $.ioore(10);
    t3 = t3[10];
    if (typeof t3 !== "number")
      throw $.iae(t3);
    t3 = $.JSNumber_methods.$add(t2, t3);
    t2 = t1.length;
    if (10 >= t2)
      throw $.ioore(10);
    t1[10] = t3;
    if (11 >= t2)
      throw $.ioore(11);
    t2 = t1[11];
    t3 = o.get$storage();
    if (11 >= t3.length)
      throw $.ioore(11);
    t3 = t3[11];
    if (typeof t3 !== "number")
      throw $.iae(t3);
    t3 = $.JSNumber_methods.$add(t2, t3);
    t2 = t1.length;
    if (11 >= t2)
      throw $.ioore(11);
    t1[11] = t3;
    if (12 >= t2)
      throw $.ioore(12);
    t2 = t1[12];
    t3 = o.get$storage();
    if (12 >= t3.length)
      throw $.ioore(12);
    t3 = t3[12];
    if (typeof t3 !== "number")
      throw $.iae(t3);
    t3 = $.JSNumber_methods.$add(t2, t3);
    t2 = t1.length;
    if (12 >= t2)
      throw $.ioore(12);
    t1[12] = t3;
    if (13 >= t2)
      throw $.ioore(13);
    t2 = t1[13];
    t3 = o.get$storage();
    if (13 >= t3.length)
      throw $.ioore(13);
    t3 = t3[13];
    if (typeof t3 !== "number")
      throw $.iae(t3);
    t3 = $.JSNumber_methods.$add(t2, t3);
    t2 = t1.length;
    if (13 >= t2)
      throw $.ioore(13);
    t1[13] = t3;
    if (14 >= t2)
      throw $.ioore(14);
    t2 = t1[14];
    t3 = o.get$storage();
    if (14 >= t3.length)
      throw $.ioore(14);
    t3 = t3[14];
    if (typeof t3 !== "number")
      throw $.iae(t3);
    t3 = $.JSNumber_methods.$add(t2, t3);
    t2 = t1.length;
    if (14 >= t2)
      throw $.ioore(14);
    t1[14] = t3;
    if (15 >= t2)
      throw $.ioore(15);
    t2 = t1[15];
    t3 = o.get$storage();
    if (15 >= t3.length)
      throw $.ioore(15);
    t3 = t3[15];
    if (typeof t3 !== "number")
      throw $.iae(t3);
    t3 = $.JSNumber_methods.$add(t2, t3);
    if (15 >= t1.length)
      throw $.ioore(15);
    t1[15] = t3;
    return this;
  },
  Matrix4$identity$0: function() {
    this.setIdentity$0();
  }
},

Vector3: {"": "Object;storage<",
  setValues$3: function(x_, y_, z_) {
    var t1, t2;
    t1 = this.storage;
    t2 = t1.length;
    if (0 >= t2)
      throw $.ioore(0);
    t1[0] = x_;
    if (1 >= t2)
      throw $.ioore(1);
    t1[1] = y_;
    if (2 >= t2)
      throw $.ioore(2);
    t1[2] = z_;
    return this;
  },
  toString$0: function(_) {
    var t1, t2;
    t1 = this.storage;
    if (0 >= t1.length)
      throw $.ioore(0);
    t2 = "[" + $.S(t1[0]) + ",";
    if (1 >= t1.length)
      throw $.ioore(1);
    t2 = t2 + $.S(t1[1]) + ",";
    if (2 >= t1.length)
      throw $.ioore(2);
    return t2 + $.S(t1[2]) + "]";
  },
  $negate: function(_) {
    var t1, t2, t3, t4;
    t1 = this.storage;
    t2 = t1.length;
    if (0 >= t2)
      throw $.ioore(0);
    t3 = t1[0];
    if (1 >= t2)
      throw $.ioore(1);
    t4 = t1[1];
    if (2 >= t2)
      throw $.ioore(2);
    return $.Vector3$(-t3, -t4, -t1[2]);
  },
  $sub: function(_, other) {
    var t1, t2, t3, t4, t5, t6, t7, t8;
    t1 = this.storage;
    t2 = t1.length;
    if (0 >= t2)
      throw $.ioore(0);
    t3 = t1[0];
    t4 = other.get$storage();
    t5 = t4.length;
    if (0 >= t5)
      throw $.ioore(0);
    t6 = t4[0];
    if (1 >= t2)
      throw $.ioore(1);
    t7 = t1[1];
    if (1 >= t5)
      throw $.ioore(1);
    t8 = t4[1];
    if (2 >= t2)
      throw $.ioore(2);
    t1 = t1[2];
    if (2 >= t5)
      throw $.ioore(2);
    t5 = new $.Vector3($.Float32List_Float32List(3));
    t5.Vector3$3(t3 - t6, t7 - t8, t1 - t4[2]);
    return t5;
  },
  $add: function(_, other) {
    var t1, t2, t3, t4, t5, t6, t7, t8;
    t1 = this.storage;
    t2 = t1.length;
    if (0 >= t2)
      throw $.ioore(0);
    t3 = t1[0];
    t4 = other.get$storage();
    t5 = t4.length;
    if (0 >= t5)
      throw $.ioore(0);
    t6 = t4[0];
    if (1 >= t2)
      throw $.ioore(1);
    t7 = t1[1];
    if (1 >= t5)
      throw $.ioore(1);
    t8 = t4[1];
    if (2 >= t2)
      throw $.ioore(2);
    t1 = t1[2];
    if (2 >= t5)
      throw $.ioore(2);
    t5 = new $.Vector3($.Float32List_Float32List(3));
    t5.Vector3$3(t3 + t6, t7 + t8, t1 + t4[2]);
    return t5;
  },
  $div: function(_, scale) {
    var o, t1, t2, t3, t4;
    if (typeof scale !== "number")
      throw $.iae(scale);
    o = 1 / scale;
    t1 = this.storage;
    t2 = t1.length;
    if (0 >= t2)
      throw $.ioore(0);
    t3 = t1[0];
    if (1 >= t2)
      throw $.ioore(1);
    t4 = t1[1];
    if (2 >= t2)
      throw $.ioore(2);
    return $.Vector3$(t3 * o, t4 * o, t1[2] * o);
  },
  $mul: function(_, scale) {
    var t1, t2, t3, t4;
    t1 = this.storage;
    t2 = t1.length;
    if (0 >= t2)
      throw $.ioore(0);
    t3 = t1[0];
    if (typeof scale !== "number")
      throw $.iae(scale);
    if (1 >= t2)
      throw $.ioore(1);
    t4 = t1[1];
    if (2 >= t2)
      throw $.ioore(2);
    return $.Vector3$(t3 * scale, t4 * scale, t1[2] * scale);
  },
  $index: function(_, i) {
    var t1 = this.storage;
    if (i >>> 0 !== i || i >= t1.length)
      throw $.ioore(i);
    return t1[i];
  },
  $indexSet: function(_, i, v) {
    var t1 = this.storage;
    if (i >>> 0 !== i || i >= t1.length)
      throw $.ioore(i);
    t1[i] = v;
  },
  get$length: function(_) {
    var t1, t2, t3, t4;
    t1 = this.storage;
    t2 = t1.length;
    if (0 >= t2)
      throw $.ioore(0);
    t3 = t1[0];
    if (1 >= t2)
      throw $.ioore(1);
    t4 = t1[1];
    if (2 >= t2)
      throw $.ioore(2);
    t1 = t1[2];
    return Math.sqrt($.checkNum(t3 * t3 + t4 * t4 + t1 * t1));
  },
  normalize$0: function(_) {
    var l, t1, t2;
    l = this.get$length(this);
    if (l === 0)
      return this;
    l = 1 / l;
    t1 = this.storage;
    t2 = t1.length;
    if (0 >= t2)
      throw $.ioore(0);
    t1[0] = t1[0] * l;
    if (1 >= t2)
      throw $.ioore(1);
    t1[1] = t1[1] * l;
    if (2 >= t2)
      throw $.ioore(2);
    t1[2] = t1[2] * l;
    return this;
  },
  cross$1: function(other) {
    var t1, t2, _x, _y, _z, ox, oy, oz;
    t1 = this.storage;
    t2 = t1.length;
    if (0 >= t2)
      throw $.ioore(0);
    _x = t1[0];
    if (1 >= t2)
      throw $.ioore(1);
    _y = t1[1];
    if (2 >= t2)
      throw $.ioore(2);
    _z = t1[2];
    t1 = other.storage;
    t2 = t1.length;
    if (0 >= t2)
      throw $.ioore(0);
    ox = t1[0];
    if (1 >= t2)
      throw $.ioore(1);
    oy = t1[1];
    if (2 >= t2)
      throw $.ioore(2);
    oz = t1[2];
    return $.Vector3$(_y * oz - _z * oy, _z * ox - _x * oz, _x * oy - _y * ox);
  },
  add$1: function(_, arg) {
    var t1, t2, t3;
    t1 = this.storage;
    if (0 >= t1.length)
      throw $.ioore(0);
    t2 = t1[0];
    t3 = arg.get$storage();
    if (0 >= t3.length)
      throw $.ioore(0);
    t3 = t3[0];
    if (typeof t3 !== "number")
      throw $.iae(t3);
    t3 = $.JSNumber_methods.$add(t2, t3);
    t2 = t1.length;
    if (0 >= t2)
      throw $.ioore(0);
    t1[0] = t3;
    if (1 >= t2)
      throw $.ioore(1);
    t2 = t1[1];
    t3 = arg.get$storage();
    if (1 >= t3.length)
      throw $.ioore(1);
    t3 = t3[1];
    if (typeof t3 !== "number")
      throw $.iae(t3);
    t3 = $.JSNumber_methods.$add(t2, t3);
    t2 = t1.length;
    if (1 >= t2)
      throw $.ioore(1);
    t1[1] = t3;
    if (2 >= t2)
      throw $.ioore(2);
    t2 = t1[2];
    t3 = arg.get$storage();
    if (2 >= t3.length)
      throw $.ioore(2);
    t3 = t3[2];
    if (typeof t3 !== "number")
      throw $.iae(t3);
    t3 = $.JSNumber_methods.$add(t2, t3);
    if (2 >= t1.length)
      throw $.ioore(2);
    t1[2] = t3;
    return this;
  },
  scale$1: function(_, arg) {
    var t1, t2;
    t1 = this.storage;
    if (2 >= t1.length)
      throw $.ioore(2);
    t2 = t1[2];
    if (typeof arg !== "number")
      throw $.iae(arg);
    t1[2] = t2 * arg;
    t1[1] = t1[1] * arg;
    t1[0] = t1[0] * arg;
    return this;
  },
  get$scale: function(_receiver) {
    return new $.BoundClosure$i1(this, "scale$1", _receiver);
  },
  get$x: function(_) {
    var t1 = this.storage;
    if (0 >= t1.length)
      throw $.ioore(0);
    return t1[0];
  },
  get$y: function(_) {
    var t1 = this.storage;
    if (1 >= t1.length)
      throw $.ioore(1);
    return t1[1];
  },
  get$z: function(_) {
    var t1 = this.storage;
    if (2 >= t1.length)
      throw $.ioore(2);
    return t1[2];
  },
  Vector3$3: function(x_, y_, z_) {
    this.setValues$3(x_, y_, z_);
  },
  $isVector3: true
},

Vector4: {"": "Object;storage<",
  setValues$4: function(x_, y_, z_, w_) {
    var t1 = this.storage;
    if (3 >= t1.length)
      throw $.ioore(3);
    t1[3] = w_;
    t1[2] = z_;
    t1[1] = y_;
    t1[0] = x_;
    return this;
  },
  toString$0: function(_) {
    var t1, t2;
    t1 = this.storage;
    if (0 >= t1.length)
      throw $.ioore(0);
    t2 = $.S(t1[0]) + ",";
    if (1 >= t1.length)
      throw $.ioore(1);
    t2 = t2 + $.S(t1[1]) + ",";
    if (2 >= t1.length)
      throw $.ioore(2);
    t2 = t2 + $.S(t1[2]) + ",";
    if (3 >= t1.length)
      throw $.ioore(3);
    return t2 + $.S(t1[3]);
  },
  $sub: function(_, other) {
    var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10;
    t1 = this.storage;
    t2 = t1.length;
    if (0 >= t2)
      throw $.ioore(0);
    t3 = t1[0];
    t4 = other.get$storage();
    t5 = t4.length;
    if (0 >= t5)
      throw $.ioore(0);
    t6 = t4[0];
    if (1 >= t2)
      throw $.ioore(1);
    t7 = t1[1];
    if (1 >= t5)
      throw $.ioore(1);
    t8 = t4[1];
    if (2 >= t2)
      throw $.ioore(2);
    t9 = t1[2];
    if (2 >= t5)
      throw $.ioore(2);
    t10 = t4[2];
    if (3 >= t2)
      throw $.ioore(3);
    t1 = t1[3];
    if (3 >= t5)
      throw $.ioore(3);
    t5 = new $.Vector4($.Float32List_Float32List(4));
    t5.Vector4$4(t3 - t6, t7 - t8, t9 - t10, t1 - t4[3]);
    return t5;
  },
  $add: function(_, other) {
    var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10;
    t1 = this.storage;
    t2 = t1.length;
    if (0 >= t2)
      throw $.ioore(0);
    t3 = t1[0];
    t4 = other.get$storage();
    t5 = t4.length;
    if (0 >= t5)
      throw $.ioore(0);
    t6 = t4[0];
    if (1 >= t2)
      throw $.ioore(1);
    t7 = t1[1];
    if (1 >= t5)
      throw $.ioore(1);
    t8 = t4[1];
    if (2 >= t2)
      throw $.ioore(2);
    t9 = t1[2];
    if (2 >= t5)
      throw $.ioore(2);
    t10 = t4[2];
    if (3 >= t2)
      throw $.ioore(3);
    t1 = t1[3];
    if (3 >= t5)
      throw $.ioore(3);
    t5 = new $.Vector4($.Float32List_Float32List(4));
    t5.Vector4$4(t3 + t6, t7 + t8, t9 + t10, t1 + t4[3]);
    return t5;
  },
  $div: function(_, scale) {
    var o, t1, t2, t3, t4, t5;
    if (typeof scale !== "number")
      throw $.iae(scale);
    o = 1 / scale;
    t1 = this.storage;
    t2 = t1.length;
    if (0 >= t2)
      throw $.ioore(0);
    t3 = t1[0];
    if (1 >= t2)
      throw $.ioore(1);
    t4 = t1[1];
    if (2 >= t2)
      throw $.ioore(2);
    t5 = t1[2];
    if (3 >= t2)
      throw $.ioore(3);
    return $.Vector4$(t3 * o, t4 * o, t5 * o, t1[3] * o);
  },
  $mul: function(_, scale) {
    var t1, t2, t3, t4, t5;
    t1 = this.storage;
    t2 = t1.length;
    if (0 >= t2)
      throw $.ioore(0);
    t3 = t1[0];
    if (typeof scale !== "number")
      throw $.iae(scale);
    if (1 >= t2)
      throw $.ioore(1);
    t4 = t1[1];
    if (2 >= t2)
      throw $.ioore(2);
    t5 = t1[2];
    if (3 >= t2)
      throw $.ioore(3);
    return $.Vector4$(t3 * scale, t4 * scale, t5 * scale, t1[3] * scale);
  },
  $index: function(_, i) {
    var t1 = this.storage;
    if (i >>> 0 !== i || i >= t1.length)
      throw $.ioore(i);
    return t1[i];
  },
  $indexSet: function(_, i, v) {
    var t1 = this.storage;
    if (i >>> 0 !== i || i >= t1.length)
      throw $.ioore(i);
    t1[i] = v;
  },
  get$length: function(_) {
    var t1, t2, t3, t4, t5;
    t1 = this.storage;
    t2 = t1.length;
    if (0 >= t2)
      throw $.ioore(0);
    t3 = t1[0];
    if (1 >= t2)
      throw $.ioore(1);
    t4 = t1[1];
    if (2 >= t2)
      throw $.ioore(2);
    t5 = t1[2];
    if (3 >= t2)
      throw $.ioore(3);
    t1 = t1[3];
    return Math.sqrt($.checkNum(t3 * t3 + t4 * t4 + t5 * t5 + t1 * t1));
  },
  add$1: function(_, arg) {
    var t1, t2, t3;
    t1 = this.storage;
    if (0 >= t1.length)
      throw $.ioore(0);
    t2 = t1[0];
    t3 = arg.get$storage();
    if (0 >= t3.length)
      throw $.ioore(0);
    t3 = t3[0];
    if (typeof t3 !== "number")
      throw $.iae(t3);
    t3 = $.JSNumber_methods.$add(t2, t3);
    t2 = t1.length;
    if (0 >= t2)
      throw $.ioore(0);
    t1[0] = t3;
    if (1 >= t2)
      throw $.ioore(1);
    t2 = t1[1];
    t3 = arg.get$storage();
    if (1 >= t3.length)
      throw $.ioore(1);
    t3 = t3[1];
    if (typeof t3 !== "number")
      throw $.iae(t3);
    t3 = $.JSNumber_methods.$add(t2, t3);
    t2 = t1.length;
    if (1 >= t2)
      throw $.ioore(1);
    t1[1] = t3;
    if (2 >= t2)
      throw $.ioore(2);
    t2 = t1[2];
    t3 = arg.get$storage();
    if (2 >= t3.length)
      throw $.ioore(2);
    t3 = t3[2];
    if (typeof t3 !== "number")
      throw $.iae(t3);
    t3 = $.JSNumber_methods.$add(t2, t3);
    t2 = t1.length;
    if (2 >= t2)
      throw $.ioore(2);
    t1[2] = t3;
    if (3 >= t2)
      throw $.ioore(3);
    t2 = t1[3];
    t3 = arg.get$storage();
    if (3 >= t3.length)
      throw $.ioore(3);
    t3 = t3[3];
    if (typeof t3 !== "number")
      throw $.iae(t3);
    t3 = $.JSNumber_methods.$add(t2, t3);
    if (3 >= t1.length)
      throw $.ioore(3);
    t1[3] = t3;
    return this;
  },
  scale$1: function(_, arg) {
    var t1, t2, t3;
    t1 = this.storage;
    t2 = t1.length;
    if (0 >= t2)
      throw $.ioore(0);
    t3 = t1[0];
    if (typeof arg !== "number")
      throw $.iae(arg);
    t1[0] = t3 * arg;
    if (1 >= t2)
      throw $.ioore(1);
    t1[1] = t1[1] * arg;
    if (2 >= t2)
      throw $.ioore(2);
    t1[2] = t1[2] * arg;
    if (3 >= t2)
      throw $.ioore(3);
    t1[3] = t1[3] * arg;
    return this;
  },
  get$scale: function(_receiver) {
    return new $.BoundClosure$i1(this, "scale$1", _receiver);
  },
  get$x: function(_) {
    var t1 = this.storage;
    if (0 >= t1.length)
      throw $.ioore(0);
    return t1[0];
  },
  get$y: function(_) {
    var t1 = this.storage;
    if (1 >= t1.length)
      throw $.ioore(1);
    return t1[1];
  },
  get$z: function(_) {
    var t1 = this.storage;
    if (2 >= t1.length)
      throw $.ioore(2);
    return t1[2];
  },
  get$w: function() {
    var t1 = this.storage;
    if (3 >= t1.length)
      throw $.ioore(3);
    return t1[3];
  },
  Vector4$4: function(x_, y_, z_, w_) {
    this.setValues$4(x_, y_, z_, w_);
  },
  $isVector4: true
},

Matrix4$zero: function() {
  return new $.Matrix4($.Float32List_Float32List(16));
},

Matrix4$identity: function() {
  var t1 = new $.Matrix4($.Float32List_Float32List(16));
  t1.Matrix4$identity$0();
  return t1;
},

setViewMatrix: function(viewMatrix, cameraPosition, cameraFocusPosition, upDirection) {
  var z, x, y, rotatedEye;
  z = cameraPosition.$sub(cameraPosition, cameraFocusPosition);
  z.normalize$0(z);
  x = upDirection.cross$1(z);
  x.normalize$0(x);
  y = z.cross$1(x);
  y.normalize$0(y);
  viewMatrix.setZero$0();
  viewMatrix.setEntry$3(3, 3, 1);
  viewMatrix.setEntry$3(0, 0, x.get$x(x));
  viewMatrix.setEntry$3(1, 0, x.get$y(x));
  viewMatrix.setEntry$3(2, 0, x.get$z(x));
  viewMatrix.setEntry$3(0, 1, y.get$x(y));
  viewMatrix.setEntry$3(1, 1, y.get$y(y));
  viewMatrix.setEntry$3(2, 1, y.get$z(y));
  viewMatrix.setEntry$3(0, 2, z.get$x(z));
  viewMatrix.setEntry$3(1, 2, z.get$y(z));
  viewMatrix.setEntry$3(2, 2, z.get$z(z));
  viewMatrix.transpose$0();
  rotatedEye = viewMatrix.$mul(viewMatrix, cameraPosition.$negate(cameraPosition));
  viewMatrix.setEntry$3(0, 3, rotatedEye.get$x(rotatedEye));
  viewMatrix.setEntry$3(1, 3, rotatedEye.get$y(rotatedEye));
  viewMatrix.setEntry$3(2, 3, rotatedEye.get$z(rotatedEye));
},

setPerspectiveMatrix: function(perspectiveMatrix, fovYRadians, aspectRatio, zNear, zFar) {
  var height, width;
  height = $.tan($.JSNumber_methods.toDouble$0(fovYRadians) * 0.5) * $.JSDouble_methods.toDouble$0(zNear);
  width = height * $.toDouble$0$n(aspectRatio);
  $.setFrustumMatrix(perspectiveMatrix, -width, width, -height, height, zNear, zFar);
},

setFrustumMatrix: function(perspectiveMatrix, left, right, bottom, $top, near, far) {
  var two_near, right_minus_left, top_minus_bottom, far_minus_near, view;
  left = $.JSNumber_methods.toDouble$0(left);
  right = $.JSNumber_methods.toDouble$0(right);
  bottom = $.JSNumber_methods.toDouble$0(bottom);
  $top = $.JSNumber_methods.toDouble$0($top);
  near = $.JSDouble_methods.toDouble$0(near);
  far = $.JSDouble_methods.toDouble$0(far);
  two_near = 2 * near;
  right_minus_left = right - left;
  top_minus_bottom = $top - bottom;
  far_minus_near = far - near;
  view = perspectiveMatrix.setZero$0();
  view.setEntry$3(0, 0, two_near / right_minus_left);
  view.setEntry$3(1, 1, two_near / top_minus_bottom);
  view.setEntry$3(0, 2, (right + left) / right_minus_left);
  view.setEntry$3(1, 2, ($top + bottom) / top_minus_bottom);
  view.setEntry$3(2, 2, -(far + near) / far_minus_near);
  view.setEntry$3(3, 2, -1);
  view.setEntry$3(2, 3, -(two_near * far) / far_minus_near);
},

Vector3$: function(x_, y_, z_) {
  var t1 = new $.Vector3($.Float32List_Float32List(3));
  t1.Vector3$3(x_, y_, z_);
  return t1;
},

Vector3$zero: function() {
  return new $.Vector3($.Float32List_Float32List(3));
},

Vector4$: function(x_, y_, z_, w_) {
  var t1 = new $.Vector4($.Float32List_Float32List(4));
  t1.Vector4$4(x_, y_, z_, w_);
  return t1;
},

Vector4$zero: function() {
  return new $.Vector4($.Float32List_Float32List(4));
}}],
["ws", "ws.dart", , {
initWebSocket_scheduleReconnect: {"": "Closure;box_0,wsUri_1,sid_2,status_3",
  call$0: function() {
    var t1 = this.box_0;
    if (t1.reconnectScheduled_5)
      return;
    $.print("websocket: retrying in " + $.S(t1.retrySeconds_0) + " seconds");
    $.Timer_Timer($.Duration$(0, 0, 0, 0, 0, t1.retrySeconds_0), new $.initWebSocket_scheduleReconnect_closure(t1, this.wsUri_1, this.sid_2, this.status_3));
    t1.reconnectScheduled_5 = true;
  }
},

initWebSocket_scheduleReconnect_closure: {"": "Closure;box_0,wsUri_4,sid_5,status_6",
  call$0: function() {
    return $.initWebSocket(this.wsUri_4, this.sid_5, 2 * this.box_0.retrySeconds_0, this.status_6);
  }
},

initWebSocket_closure: {"": "Closure;wsUri_7,sid_8,status_9,scheduleReconnect_10",
  call$1: function(e) {
    var jsonMsg, e0, msg, exception, t1;
    this.status_9.textContent = "connected to " + this.wsUri_7;
    $.print("websocket: CONNECTED");
    msg = $.Map_Map(null, null);
    msg.$indexSet(msg, "Code", 2);
    msg.$indexSet(msg, "Data", this.sid_8);
    jsonMsg = $.stringify(msg);
    try {
      $._write(jsonMsg);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      e0 = t1;
      $.print("websocket auth: send failure: " + $.S(e0));
      this.scheduleReconnect_10.call$0();
    }

  }
},

initWebSocket_closure0: {"": "Closure;wsUri_11,status_12,scheduleReconnect_13",
  call$1: function(e) {
    this.status_12.textContent = "disconnected from " + this.wsUri_11;
    $.print("websocket: DISCONNECTED");
    this.scheduleReconnect_13.call$0();
  }
},

initWebSocket_closure1: {"": "Closure;scheduleReconnect_14",
  call$1: function(e) {
    $.print("websocket: error: [" + $.S(e) + "]");
    this.scheduleReconnect_14.call$0();
  }
},

initWebSocket_closure2: {"": "Closure;box_0,status_15",
  call$1: function(e) {
    var t1, msg, m, t2;
    t1 = $.getInterceptor$x(e);
    $.print("websocket: received: [" + $.S(t1.get$data(e)) + "]");
    msg = $.parse(t1.get$data(e), null);
    t1 = $.getInterceptor$asx(msg);
    if ($.$eq(t1.$index(msg, "Code"), 1) && $.startsWith$1$s(t1.$index(msg, "Data"), "welcome")) {
      m = $.Map_Map(null, null);
      m.$indexSet(m, "Code", 3);
      m.$indexSet(m, "Data", "hi there");
      $.wsSend($.stringify(m));
      return;
    }
    if ($.$eq(t1.$index(msg, "Code"), 4)) {
      m = "server killed our session: " + $.S(t1.$index(msg, "Data"));
      $.print(m);
      this.status_15.textContent = m;
      t1 = this.box_0;
      t2 = t1.subOpen_1;
      t2.cancel$0(t2);
      t2 = t1.subClose_2;
      t2.cancel$0(t2);
      t2 = t1.subMessage_4;
      t2.cancel$0(t2);
      t1 = t1.subError_3;
      t1.cancel$0(t1);
      $._ws.close();
      $._ws = null;
      return;
    }
  }
},

requestZone: function() {
  var msg = $.Map_Map(null, null);
  msg.$indexSet(msg, "Code", 5);
  msg.$indexSet(msg, "Data", "");
  $.wsSend($.stringify(msg));
},

_write: function(msg) {
  $.Primitives_printString("websocket: writing: [" + $.S(msg) + "]");
  $._ws.send(msg);
},

wsSend: function(msg) {
  var t1 = $.get$_wsQueue();
  t1.add$1(t1, msg);
  $.wsFlush();
},

wsFlush: function() {
  var e, t1, t2, exception;
  while (true) {
    t1 = $._ws;
    if (t1 != null)
      if (t1.readyState === 1) {
        t1 = $.get$_wsQueue();
        t1 = t1._head !== t1._tail;
      } else
        t1 = false;
    else
      t1 = false;
    if (!t1)
      break;
    try {
      t1 = $.get$_wsQueue();
      t2 = t1._head;
      if (t2 === t1._tail)
        $.throwExpression(new $.StateError("No elements"));
      t1 = t1._table;
      if (t2 < 0 || t2 >= t1.length)
        throw $.ioore(t2);
      t2 = t1[t2];
      $.Primitives_printString("websocket: writing: [" + $.S(t2) + "]");
      $._ws.send(t2);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      e = t1;
      $.Primitives_printString("websocket flush: send failure: " + $.S(e));
      return;
    }

    $.get$_wsQueue().removeFirst$0();
  }
},

initWebSocket: function(wsUri, sid, retrySeconds, $status) {
  var t1, t2;
  t1 = {};
  t1.retrySeconds_0 = retrySeconds;
  $status.textContent = "opening " + wsUri;
  t2 = t1.retrySeconds_0;
  if (t2 < 1)
    t1.retrySeconds_0 = 1;
  else if (t2 > 120)
    t1.retrySeconds_0 = 120;
  $.print("websocket: opening: " + wsUri + " (retry=" + $.S(t1.retrySeconds_0) + ")");
  $._ws = $.WebSocket_WebSocket(wsUri, null);
  t1.subOpen_1 = null;
  t1.subClose_2 = null;
  t1.subError_3 = null;
  t1.subMessage_4 = null;
  t1.reconnectScheduled_5 = false;
  t2 = new $.initWebSocket_scheduleReconnect(t1, wsUri, sid, $status);
  t1.subOpen_1 = $.get$onOpen$x($._ws).listen$1(new $.initWebSocket_closure(wsUri, sid, $status, t2));
  t1.subClose_2 = $.get$onClose$x($._ws).listen$1(new $.initWebSocket_closure0(wsUri, $status, t2));
  t1.subError_3 = $.get$onError$x($._ws).listen$1(new $.initWebSocket_closure1(t2));
  t1.subMessage_4 = $.get$onMessage$x($._ws).listen$1(new $.initWebSocket_closure2(t1, $status));
}}],
]);
Isolate.$finishClasses($$, $, null);
$$ = null;

$.IsolateNatives__processWorkerMessage$closure = new $.Closure$_processWorkerMessage($.IsolateNatives__processWorkerMessage, "IsolateNatives__processWorkerMessage$closure");
$.Primitives__throwFormatException$closure = new $.Closure$_throwFormatException($.Primitives__throwFormatException, "Primitives__throwFormatException$closure");
$.wrapException$closure = new $.Closure$wrapException($.wrapException, "wrapException$closure");
$.DartError_toStringWrapper$closure = new $.Closure$toStringWrapper($.DartError_toStringWrapper, "DartError_toStringWrapper$closure");
$.invokeClosure$closure = new $.Closure$invokeClosure($.invokeClosure, "invokeClosure$closure");
$.isAssignable$closure = new $.Closure$isAssignable($.isAssignable, "isAssignable$closure");
$.typeNameInChrome$closure = new $.Closure$typeNameInChrome($.typeNameInChrome, "typeNameInChrome$closure");
$.typeNameInSafari$closure = new $.Closure$typeNameInSafari($.typeNameInSafari, "typeNameInSafari$closure");
$.typeNameInOpera$closure = new $.Closure$typeNameInOpera($.typeNameInOpera, "typeNameInOpera$closure");
$.typeNameInFirefox$closure = new $.Closure$typeNameInFirefox($.typeNameInFirefox, "typeNameInFirefox$closure");
$.typeNameInIE$closure = new $.Closure$typeNameInIE($.typeNameInIE, "typeNameInIE$closure");
$.constructorNameFallback$closure = new $.Closure$constructorNameFallback($.constructorNameFallback, "constructorNameFallback$closure");
$._asyncRunCallback$closure = new $.Closure$_asyncRunCallback($._asyncRunCallback, "_asyncRunCallback$closure");
$.Element__determineMouseWheelEventType$closure = new $.Closure$_determineMouseWheelEventType($.Element__determineMouseWheelEventType, "Element__determineMouseWheelEventType$closure");
$.decodeUtf8$closure = new $.Closure$decodeUtf8($.decodeUtf8, "decodeUtf8$closure");
$.initContext$closure = new $.Closure$initContext($.initContext, "initContext$closure");
$.main$closure = new $.Closure$main($.main, "main$closure");
$.JSString.$isString = true;
$.getInterceptor = function(receiver) {
  if (typeof receiver == "number") {
    if (Math.floor(receiver) == receiver)
      return $.JSInt.prototype;
    return $.JSDouble.prototype;
  }
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return $.JSNull.prototype;
  if (typeof receiver == "boolean")
    return $.JSBool.prototype;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof $.Object)
    return receiver;
  return $.getNativeInterceptor(receiver);
};
$.getInterceptor$asx = function(receiver) {
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return receiver;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof $.Object)
    return receiver;
  return $.getNativeInterceptor(receiver);
};
$.getInterceptor$ax = function(receiver) {
  if (receiver == null)
    return receiver;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof $.Object)
    return receiver;
  return $.getNativeInterceptor(receiver);
};
$.getInterceptor$n = function(receiver) {
  if (typeof receiver == "number")
    return $.JSNumber.prototype;
  if (receiver == null)
    return receiver;
  if (!(receiver instanceof $.Object))
    return $.JSUnknown.prototype;
  return receiver;
};
$.getInterceptor$ns = function(receiver) {
  if (typeof receiver == "number")
    return $.JSNumber.prototype;
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return receiver;
  if (!(receiver instanceof $.Object))
    return $.JSUnknown.prototype;
  return receiver;
};
$.getInterceptor$nx = function(receiver) {
  if (typeof receiver == "number")
    return $.JSNumber.prototype;
  if (receiver == null)
    return receiver;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof $.Object)
    return receiver;
  return $.getNativeInterceptor(receiver);
};
$.getInterceptor$s = function(receiver) {
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return receiver;
  if (!(receiver instanceof $.Object))
    return $.JSUnknown.prototype;
  return receiver;
};
$.getInterceptor$x = function(receiver) {
  if (receiver == null)
    return receiver;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof $.Object)
    return receiver;
  return $.getNativeInterceptor(receiver);
};
$.EventStreamProvider_webglcontextrestored = new $.EventStreamProvider("webglcontextrestored");
$.HttpRequest_methods = $.HttpRequest.prototype;
$.Window_methods = $.Window.prototype;
$.EventStreamProvider_open = new $.EventStreamProvider("open");
Isolate.makeConstantList = function(list) {
  list.immutable$list = true;
  list.fixed$length = true;
  return list;
};
$.List_empty = Isolate.makeConstantList([]);
$.JSNull_methods = $.JSNull.prototype;
$.EventStreamProvider_error = new $.EventStreamProvider("error");
$.JSInt_methods = $.JSInt.prototype;
$.EventStreamProvider_error0 = new $.EventStreamProvider("error");
$.EventStreamProvider_keydown = new $.EventStreamProvider("keydown");
$.EventStreamProvider_message = new $.EventStreamProvider("message");
$.EventStreamProvider_touchcancel = new $.EventStreamProvider("touchcancel");
$.HtmlDocument_methods = $.HtmlDocument.prototype;
$.EventStreamProvider_mousedown = new $.EventStreamProvider("mousedown");
$.EventStreamProvider_touchmove = new $.EventStreamProvider("touchmove");
$.EventStreamProvider_touchend = new $.EventStreamProvider("touchend");
$.EventStreamProvider_keyup = new $.EventStreamProvider("keyup");
$.C_JSUnknown = new $.JSUnknown();
$.Duration_0 = new $.Duration(0);
$.JSNumber_methods = $.JSNumber.prototype;
$.JSString_methods = $.JSString.prototype;
$.EventStreamProvider_click = new $.EventStreamProvider("click");
$.EventStreamProvider_webkitpointerlockchange = new $.EventStreamProvider("webkitpointerlockchange");
$.EventStreamProvider_webkitfullscreenchange = new $.EventStreamProvider("webkitfullscreenchange");
$.EventStreamProvider_webkitfullscreenerror = new $.EventStreamProvider("webkitfullscreenerror");
$.EventStreamProvider_load0 = new $.EventStreamProvider("load");
$.EventStreamProvider_touchstart = new $.EventStreamProvider("touchstart");
$.EventStreamProvider_webglcontextlost = new $.EventStreamProvider("webglcontextlost");
$.EventStreamProvider_load = new $.EventStreamProvider("load");
$.C_CloseToken = new $.CloseToken();
$.NodeList_methods = $.NodeList.prototype;
$.EventStreamProvider_close = new $.EventStreamProvider("close");
$.EventStreamProvider_success = new $.EventStreamProvider("success");
$.EventStreamProvider_mouseup = new $.EventStreamProvider("mouseup");
$.JSArray_methods = $.JSArray.prototype;
$.EventStreamProvider_mousemove = new $.EventStreamProvider("mousemove");
$.JSDouble_methods = $.JSDouble.prototype;
$._CustomEventStreamProvider__determineMouseWheelEventType = new $._CustomEventStreamProvider($.Element__determineMouseWheelEventType$closure);
$.EventStreamProvider_resize = new $.EventStreamProvider("resize");
$.dispatchPropertyName = null;
$.lazyPort = null;
$.ReceivePortImpl__nextFreeId = 1;
$._getTypeNameOf = null;
$.interceptorsByTag = null;
$.leafTags = null;
$._callbacksAreEnqueued = false;
$.Expando__keyCount = 0;
$.Device__isOpera = null;
$.Device__isWebKit = null;
$.canvas = null;
$.canvasAspect = null;
$.debugLostContext = true;
$.programList = null;
$.shaderCache = null;
$.textureTable = null;
$.fieldOfViewYRadians = 0.7853981633974483;
$.backfaceCulling = false;
$.showPicking = false;
$.picker = null;
$.fullRateFrames = 0;
$.stats = null;
$._ws = null;
$.$$dom_addEventListener$3$x = function(receiver, a0, a1, a2) {
  return $.getInterceptor$x(receiver).$$dom_addEventListener$3(receiver, a0, a1, a2);
};
$.$$dom_removeEventListener$3$x = function(receiver, a0, a1, a2) {
  return $.getInterceptor$x(receiver).$$dom_removeEventListener$3(receiver, a0, a1, a2);
};
$.$$dom_replaceChild$2$x = function(receiver, a0, a1) {
  return $.getInterceptor$x(receiver).$$dom_replaceChild$2(receiver, a0, a1);
};
$.$add$ns = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver + a0;
  return $.getInterceptor$ns(receiver).$add(receiver, a0);
};
$.$div$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver / a0;
  return $.getInterceptor$n(receiver).$div(receiver, a0);
};
$.$eq = function(receiver, a0) {
  if (receiver == null)
    return a0 == null;
  if (typeof receiver != "object")
    return a0 != null && receiver === a0;
  return $.getInterceptor(receiver).$eq(receiver, a0);
};
$.$ge$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver >= a0;
  return $.getInterceptor$n(receiver).$ge(receiver, a0);
};
$.$gt$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver > a0;
  return $.getInterceptor$n(receiver).$gt(receiver, a0);
};
$.$index$asx = function(receiver, a0) {
  if (receiver.constructor == Array || typeof receiver == "string")
    if (a0 >>> 0 === a0 && a0 < receiver.length)
      return receiver[a0];
  return $.getInterceptor$asx(receiver).$index(receiver, a0);
};
$.$indexSet$ax = function(receiver, a0, a1) {
  if (receiver.constructor == Array && !receiver.immutable$list && a0 >>> 0 === a0 && a0 < receiver.length)
    return receiver[a0] = a1;
  return $.getInterceptor$ax(receiver).$indexSet(receiver, a0, a1);
};
$.$le$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver <= a0;
  return $.getInterceptor$n(receiver).$le(receiver, a0);
};
$.$lt$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver < a0;
  return $.getInterceptor$n(receiver).$lt(receiver, a0);
};
$.$mul$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver * a0;
  return $.getInterceptor$n(receiver).$mul(receiver, a0);
};
$.$sub$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver - a0;
  return $.getInterceptor$n(receiver).$sub(receiver, a0);
};
$.abs$0$n = function(receiver) {
  return $.getInterceptor$n(receiver).abs$0(receiver);
};
$.add$1$ax = function(receiver, a0) {
  return $.getInterceptor$ax(receiver).add$1(receiver, a0);
};
$.append$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).append$1(receiver, a0);
};
$.attachShader$2$x = function(receiver, a0, a1) {
  return $.getInterceptor$x(receiver).attachShader$2(receiver, a0, a1);
};
$.bindFramebuffer$2$x = function(receiver, a0, a1) {
  return $.getInterceptor$x(receiver).bindFramebuffer$2(receiver, a0, a1);
};
$.bindRenderbuffer$2$x = function(receiver, a0, a1) {
  return $.getInterceptor$x(receiver).bindRenderbuffer$2(receiver, a0, a1);
};
$.bindTexture$2$x = function(receiver, a0, a1) {
  return $.getInterceptor$x(receiver).bindTexture$2(receiver, a0, a1);
};
$.compileShader$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).compileShader$1(receiver, a0);
};
$.contains$2$asx = function(receiver, a0, a1) {
  return $.getInterceptor$asx(receiver).contains$2(receiver, a0, a1);
};
$.createFramebuffer$0$x = function(receiver) {
  return $.getInterceptor$x(receiver).createFramebuffer$0(receiver);
};
$.createProgram$0$x = function(receiver) {
  return $.getInterceptor$x(receiver).createProgram$0(receiver);
};
$.createRenderbuffer$0$x = function(receiver) {
  return $.getInterceptor$x(receiver).createRenderbuffer$0(receiver);
};
$.createShader$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).createShader$1(receiver, a0);
};
$.createTexture$0$x = function(receiver) {
  return $.getInterceptor$x(receiver).createTexture$0(receiver);
};
$.drawElements$4$x = function(receiver, a0, a1, a2, a3) {
  return $.getInterceptor$x(receiver).drawElements$4(receiver, a0, a1, a2, a3);
};
$.firstWhere$1$ax = function(receiver, a0) {
  return $.getInterceptor$ax(receiver).firstWhere$1(receiver, a0);
};
$.floor$0$nx = function(receiver) {
  return $.getInterceptor$nx(receiver).floor$0(receiver);
};
$.forEach$1$ax = function(receiver, a0) {
  return $.getInterceptor$ax(receiver).forEach$1(receiver, a0);
};
$.framebufferRenderbuffer$4$x = function(receiver, a0, a1, a2, a3) {
  return $.getInterceptor$x(receiver).framebufferRenderbuffer$4(receiver, a0, a1, a2, a3);
};
$.framebufferTexture2D$5$x = function(receiver, a0, a1, a2, a3, a4) {
  return $.getInterceptor$x(receiver).framebufferTexture2D$5(receiver, a0, a1, a2, a3, a4);
};
$.get$checked$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$checked(receiver);
};
$.get$children$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$children(receiver);
};
$.get$first$ax = function(receiver) {
  return $.getInterceptor$ax(receiver).get$first(receiver);
};
$.get$hashCode$ = function(receiver) {
  return $.getInterceptor(receiver).get$hashCode(receiver);
};
$.get$height$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$height(receiver);
};
$.get$id$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$id(receiver);
};
$.get$identifier$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$identifier(receiver);
};
$.get$isEmpty$asx = function(receiver) {
  return $.getInterceptor$asx(receiver).get$isEmpty(receiver);
};
$.get$iterator$ax = function(receiver) {
  return $.getInterceptor$ax(receiver).get$iterator(receiver);
};
$.get$length$asx = function(receiver) {
  return $.getInterceptor$asx(receiver).get$length(receiver);
};
$.get$model$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$model(receiver);
};
$.get$name$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$name(receiver);
};
$.get$onClick$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$onClick(receiver);
};
$.get$onClose$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$onClose(receiver);
};
$.get$onError$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$onError(receiver);
};
$.get$onMessage$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$onMessage(receiver);
};
$.get$onOpen$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$onOpen(receiver);
};
$.get$responseText$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$responseText(receiver);
};
$.get$result$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$result(receiver);
};
$.get$style$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$style(receiver);
};
$.get$values$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$values(receiver);
};
$.get$width$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$width(receiver);
};
$.get$x$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$x(receiver);
};
$.get$y$x = function(receiver) {
  return $.getInterceptor$x(receiver).get$y(receiver);
};
$.getContext3d$1$preserveDrawingBuffer$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).getContext3d$1$preserveDrawingBuffer(receiver, a0);
};
$.getExtension$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).getExtension$1(receiver, a0);
};
$.getProgramInfoLog$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).getProgramInfoLog$1(receiver, a0);
};
$.getProgramParameter$2$x = function(receiver, a0, a1) {
  return $.getInterceptor$x(receiver).getProgramParameter$2(receiver, a0, a1);
};
$.getShaderInfoLog$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).getShaderInfoLog$1(receiver, a0);
};
$.getShaderParameter$2$x = function(receiver, a0, a1) {
  return $.getInterceptor$x(receiver).getShaderParameter$2(receiver, a0, a1);
};
$.getUniformLocation$2$x = function(receiver, a0, a1) {
  return $.getInterceptor$x(receiver).getUniformLocation$2(receiver, a0, a1);
};
$.isContextLost$0$x = function(receiver) {
  return $.getInterceptor$x(receiver).isContextLost$0(receiver);
};
$.linkProgram$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).linkProgram$1(receiver, a0);
};
$.loseContext$0$x = function(receiver) {
  return $.getInterceptor$x(receiver).loseContext$0(receiver);
};
$.preventDefault$0$x = function(receiver) {
  return $.getInterceptor$x(receiver).preventDefault$0(receiver);
};
$.remove$0$ax = function(receiver) {
  return $.getInterceptor$ax(receiver).remove$0(receiver);
};
$.renderbufferStorage$4$x = function(receiver, a0, a1, a2, a3) {
  return $.getInterceptor$x(receiver).renderbufferStorage$4(receiver, a0, a1, a2, a3);
};
$.replaceWith$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).replaceWith$1(receiver, a0);
};
$.restoreContext$0$x = function(receiver) {
  return $.getInterceptor$x(receiver).restoreContext$0(receiver);
};
$.round$0$nx = function(receiver) {
  return $.getInterceptor$nx(receiver).round$0(receiver);
};
$.send$2$x = function(receiver, a0, a1) {
  return $.getInterceptor$x(receiver).send$2(receiver, a0, a1);
};
$.set$backgroundColor$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$backgroundColor(receiver, value);
};
$.set$display$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$display(receiver, value);
};
$.set$height$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$height(receiver, value);
};
$.set$href$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$href(receiver, value);
};
$.set$id$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$id(receiver, value);
};
$.set$text$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$text(receiver, value);
};
$.set$type$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$type(receiver, value);
};
$.set$width$x = function(receiver, value) {
  return $.getInterceptor$x(receiver).set$width(receiver, value);
};
$.shaderSource$2$x = function(receiver, a0, a1) {
  return $.getInterceptor$x(receiver).shaderSource$2(receiver, a0, a1);
};
$.split$1$s = function(receiver, a0) {
  return $.getInterceptor$s(receiver).split$1(receiver, a0);
};
$.start$0$x = function(receiver) {
  return $.getInterceptor$x(receiver).start$0(receiver);
};
$.startsWith$1$s = function(receiver, a0) {
  return $.getInterceptor$s(receiver).startsWith$1(receiver, a0);
};
$.texImage2DTyped$9$x = function(receiver, a0, a1, a2, a3, a4, a5, a6, a7, a8) {
  return $.getInterceptor$x(receiver).texImage2DTyped$9(receiver, a0, a1, a2, a3, a4, a5, a6, a7, a8);
};
$.toDouble$0$n = function(receiver) {
  return $.getInterceptor$n(receiver).toDouble$0(receiver);
};
$.toList$0$ax = function(receiver) {
  return $.getInterceptor$ax(receiver).toList$0(receiver);
};
$.toString$0 = function(receiver) {
  return $.getInterceptor(receiver).toString$0(receiver);
};
$.trim$0$s = function(receiver) {
  return $.getInterceptor$s(receiver).trim$0(receiver);
};
$.uniform4fv$2$x = function(receiver, a0, a1) {
  return $.getInterceptor$x(receiver).uniform4fv$2(receiver, a0, a1);
};
$.uniformMatrix4fv$3$x = function(receiver, a0, a1, a2) {
  return $.getInterceptor$x(receiver).uniformMatrix4fv$3(receiver, a0, a1, a2);
};
$.update$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).update$1(receiver, a0);
};
$.write$1$x = function(receiver, a0) {
  return $.getInterceptor$x(receiver).write$1(receiver, a0);
};
Isolate.$lazy($, "globalThis", "globalThis", "get$globalThis", function() {
  return $.IsolateNatives_computeGlobalThis();
});
Isolate.$lazy($, "globalWindow", "globalWindow", "get$globalWindow", function() {
  return $.get$globalThis().window;
});
Isolate.$lazy($, "globalWorker", "globalWorker", "get$globalWorker", function() {
  return $.get$globalThis().Worker;
});
Isolate.$lazy($, "globalPostMessageDefined", "globalPostMessageDefined", "get$globalPostMessageDefined", function() {
  return $.get$globalThis().postMessage !== void 0;
});
Isolate.$lazy($, "thisScript", "IsolateNatives_thisScript", "get$IsolateNatives_thisScript", function() {
  return $.IsolateNatives_computeThisScript();
});
Isolate.$lazy($, "workerIds", "IsolateNatives_workerIds", "get$IsolateNatives_workerIds", function() {
  return $.Expando$(null);
});
Isolate.$lazy($, "_stackTraceExpando", "_stackTraceExpando", "get$_stackTraceExpando", function() {
  return $.Expando$("asynchronous error");
});
Isolate.$lazy($, "_asyncCallbacks", "_asyncCallbacks", "get$_asyncCallbacks", function() {
  return $.Queue_Queue({func: "void_", void: true});
});
Isolate.$lazy($, "_current", "_Zone__current", "get$_Zone__current", function() {
  return $._DefaultZone$();
});
Isolate.$lazy($, "mdvPackage", "TemplateElement_mdvPackage", "get$TemplateElement_mdvPackage", function() {
  return new $.closure();
});
Isolate.$lazy($, "_buttonIds", "Keyboard__buttonIds", "get$Keyboard__buttonIds", function() {
  return [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 16, 17, 18, 32, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 192, 13, 38, 40, 37, 39, 27];
});
Isolate.$lazy($, "_buttonIds", "Mouse__buttonIds", "get$Mouse__buttonIds", function() {
  return [0, 1, 2];
});
Isolate.$lazy($, "pMatrix", "pMatrix", "get$pMatrix", function() {
  return $.Matrix4$zero();
});
Isolate.$lazy($, "cam", "cam", "get$cam", function() {
  return $.Camera$($.Vector3$(0, 0, 15), $.Vector3$(0, 0, -1), $.Vector3$(0, 1, 0));
});
Isolate.$lazy($, "asset", "asset", "get$asset", function() {
  return $.Asset$("/");
});
Isolate.$lazy($, "prefix_mtllib_len", "Obj_prefix_mtllib_len", "get$Obj_prefix_mtllib_len", function() {
  return 7;
});
Isolate.$lazy($, "prefix_usemtl_len", "Obj_prefix_usemtl_len", "get$Obj_prefix_usemtl_len", function() {
  return 7;
});
Isolate.$lazy($, "_currentPickColor", "_currentPickColor", "get$_currentPickColor", function() {
  return [0, 0, 0, 1];
});
Isolate.$lazy($, "_wsQueue", "_wsQueue", "get$_wsQueue", function() {
  return $.ListQueue$(null, $.JSString);
});
// Native classes
$.defineNativeMethodsNonleaf("HTMLElement", $._HTMLElement);

$.defineNativeMethodsNonleaf("AbstractWorker", $.AbstractWorker);

$.defineNativeMethods("HTMLAnchorElement", $.AnchorElement);

$.defineNativeMethods("WebKitAnimationEvent", $.AnimationEvent);

$.defineNativeMethods("ApplicationCache|DOMApplicationCache|OfflineResourceList", $.ApplicationCache);

$.defineNativeMethods("HTMLAreaElement", $.AreaElement);

$.defineNativeMethods("HTMLAudioElement", $.AudioElement);

$.defineNativeMethods("AutocompleteErrorEvent", $.AutocompleteErrorEvent);

$.defineNativeMethods("HTMLBRElement", $.BRElement);

$.defineNativeMethods("BarProp", $.BarProp);

$.defineNativeMethods("HTMLBaseElement", $.BaseElement);

$.defineNativeMethods("BeforeLoadEvent", $.BeforeLoadEvent);

$.defineNativeMethodsNonleaf("Blob", $.Blob);

$.defineNativeMethods("HTMLBodyElement", $.BodyElement);

$.defineNativeMethods("HTMLButtonElement", $.ButtonElement);

$.defineNativeMethods("CDATASection", $.CDataSection);

$.defineNativeMethods("Canvas2DContextAttributes", $.Canvas2DContextAttributes);

$.defineNativeMethods("HTMLCanvasElement", $.CanvasElement);

$.defineNativeMethods("CanvasGradient", $.CanvasGradient);

$.defineNativeMethods("CanvasPattern", $.CanvasPattern);

$.defineNativeMethodsNonleaf("CanvasRenderingContext", $.CanvasRenderingContext);

$.defineNativeMethods("CanvasRenderingContext2D", $.CanvasRenderingContext2D);

$.defineNativeMethodsNonleaf("CharacterData", $.CharacterData);

$.defineNativeMethods("CloseEvent", $.CloseEvent);

$.defineNativeMethods("Comment", $.Comment);

$.defineNativeMethods("Composition", $.Composition);

$.defineNativeMethods("CompositionEvent", $.CompositionEvent);

$.defineNativeMethods("HTMLContentElement", $.ContentElement);

$.defineNativeMethods("Coordinates", $.Coordinates);

$.defineNativeMethods("Crypto", $.Crypto);

$.defineNativeMethods("CSS", $.Css);

$.defineNativeMethods("CSSCharsetRule", $.CssCharsetRule);

$.defineNativeMethods("WebKitCSSFilterRule", $.CssFilterRule);

$.defineNativeMethods("WebKitCSSFilterValue", $.CssFilterValue);

$.defineNativeMethods("CSSFontFaceLoadEvent", $.CssFontFaceLoadEvent);

$.defineNativeMethods("CSSFontFaceRule", $.CssFontFaceRule);

$.defineNativeMethods("CSSHostRule", $.CssHostRule);

$.defineNativeMethods("CSSImportRule", $.CssImportRule);

$.defineNativeMethods("CSSKeyframeRule|MozCSSKeyframeRule|WebKitCSSKeyframeRule", $.CssKeyframeRule);

$.defineNativeMethods("CSSKeyframesRule|MozCSSKeyframesRule|WebKitCSSKeyframesRule", $.CssKeyframesRule);

$.defineNativeMethods("WebKitCSSMatrix", $.CssMatrix);

$.defineNativeMethods("CSSMediaRule", $.CssMediaRule);

$.defineNativeMethods("WebKitCSSMixFunctionValue", $.CssMixFunctionValue);

$.defineNativeMethods("CSSPageRule", $.CssPageRule);

$.defineNativeMethods("WebKitCSSRegionRule", $.CssRegionRule);

$.defineNativeMethodsNonleaf("CSSRule", $.CssRule);

$.defineNativeMethods("CSS2Properties|CSSStyleDeclaration|MSStyleCSSProperties", $.CssStyleDeclaration);

$.defineNativeMethods("CSSStyleRule", $.CssStyleRule);

$.defineNativeMethods("CSSStyleSheet", $.CssStyleSheet);

$.defineNativeMethods("CSSSupportsRule", $.CssSupportsRule);

$.defineNativeMethods("WebKitCSSTransformValue", $.CssTransformValue);

$.defineNativeMethods("CSSUnknownRule", $.CssUnknownRule);

$.defineNativeMethods("CustomElementConstructor", $.CustomElementConstructor);

$.defineNativeMethods("CustomEvent", $.CustomEvent);

$.defineNativeMethods("HTMLDListElement", $.DListElement);

$.defineNativeMethods("HTMLDataListElement", $.DataListElement);

$.defineNativeMethods("Clipboard", $.DataTransfer);

$.defineNativeMethods("DataTransferItem", $.DataTransferItem);

$.defineNativeMethods("DataTransferItemList", $.DataTransferItemList);

$.defineNativeMethods("HTMLDetailsElement", $.DetailsElement);

$.defineNativeMethods("DeviceAcceleration", $.DeviceAcceleration);

$.defineNativeMethods("DeviceMotionEvent", $.DeviceMotionEvent);

$.defineNativeMethods("DeviceOrientationEvent", $.DeviceOrientationEvent);

$.defineNativeMethods("DeviceRotationRate", $.DeviceRotationRate);

$.defineNativeMethods("HTMLDialogElement", $.DialogElement);

$.defineNativeMethods("DirectoryEntry", $.DirectoryEntry);

$.defineNativeMethods("DirectoryReader", $.DirectoryReader);

$.defineNativeMethods("HTMLDivElement", $.DivElement);

$.defineNativeMethodsNonleaf("Document", $.Document);

$.defineNativeMethodsNonleaf("DocumentFragment", $.DocumentFragment);

$.defineNativeMethods("DocumentType", $.DocumentType);

$.defineNativeMethods("DOMError", $.DomError);

$.defineNativeMethods("DOMException", $.DomException);

$.defineNativeMethods("DOMImplementation", $.DomImplementation);

$.defineNativeMethods("DOMParser", $.DomParser);

$.defineNativeMethods("DOMSettableTokenList", $.DomSettableTokenList);

$.defineNativeMethods("DOMStringList", $.DomStringList);

$.defineNativeMethodsNonleaf("DOMTokenList", $.DomTokenList);

$.defineNativeMethodsNonleaf("Element", $.Element);

$.defineNativeMethods("HTMLEmbedElement", $.EmbedElement);

$.defineNativeMethodsNonleaf("Entry", $.Entry);

$.defineNativeMethods("ErrorEvent", $.ErrorEvent);

$.defineNativeMethodsNonleaf("Event", $.Event);

$.defineNativeMethods("EventException", $.EventException);

$.defineNativeMethods("EventSource", $.EventSource);

$.defineNativeMethodsNonleaf("EventTarget", $.EventTarget);

$.defineNativeMethods("HTMLFieldSetElement", $.FieldSetElement);

$.defineNativeMethods("File", $.File);

$.defineNativeMethods("FileEntry", $.FileEntry);

$.defineNativeMethods("FileError", $.FileError);

$.defineNativeMethods("FileException", $.FileException);

$.defineNativeMethods("FileList", $.FileList);

$.defineNativeMethods("FileReader", $.FileReader);

$.defineNativeMethods("DOMFileSystem", $.FileSystem);

$.defineNativeMethods("FileWriter", $.FileWriter);

$.defineNativeMethods("FocusEvent", $.FocusEvent);

$.defineNativeMethods("FontLoader", $.FontLoader);

$.defineNativeMethods("FormData", $.FormData);

$.defineNativeMethods("HTMLFormElement", $.FormElement);

$.defineNativeMethods("Gamepad", $.Gamepad);

$.defineNativeMethods("Geolocation", $.Geolocation);

$.defineNativeMethods("Geoposition", $.Geoposition);

$.defineNativeMethods("HTMLHRElement", $.HRElement);

$.defineNativeMethods("HashChangeEvent", $.HashChangeEvent);

$.defineNativeMethods("HTMLHeadElement", $.HeadElement);

$.defineNativeMethods("HTMLHeadingElement", $.HeadingElement);

$.defineNativeMethods("History", $.History);

$.defineNativeMethods("HTMLAllCollection", $.HtmlAllCollection);

$.defineNativeMethodsNonleaf("HTMLCollection", $.HtmlCollection);

$.defineNativeMethods("HTMLDocument", $.HtmlDocument);

$.defineNativeMethods("HTMLHtmlElement", $.HtmlElement);

$.defineNativeMethods("HTMLFormControlsCollection", $.HtmlFormControlsCollection);

$.defineNativeMethods("HTMLOptionsCollection", $.HtmlOptionsCollection);

$.defineNativeMethods("XMLHttpRequest", $.HttpRequest);

$.defineNativeMethods("XMLHttpRequestProgressEvent", $.HttpRequestProgressEvent);

$.defineNativeMethods("XMLHttpRequestEventTarget|XMLHttpRequestUpload", $.HttpRequestUpload);

$.defineNativeMethods("HTMLIFrameElement", $.IFrameElement);

$.defineNativeMethods("ImageData", $.ImageData);

$.defineNativeMethods("HTMLImageElement", $.ImageElement);

$.defineNativeMethods("HTMLInputElement", $.InputElement);

$.defineNativeMethods("InputMethodContext", $.InputMethodContext);

$.defineNativeMethods("KeyboardEvent", $.KeyboardEvent);

$.defineNativeMethods("HTMLKeygenElement", $.KeygenElement);

$.defineNativeMethods("HTMLLIElement", $.LIElement);

$.defineNativeMethods("HTMLLabelElement", $.LabelElement);

$.defineNativeMethods("HTMLLegendElement", $.LegendElement);

$.defineNativeMethods("HTMLLinkElement", $.LinkElement);

$.defineNativeMethods("Location", $.Location);

$.defineNativeMethods("HTMLMapElement", $.MapElement);

$.defineNativeMethods("MediaController", $.MediaController);

$.defineNativeMethodsNonleaf("HTMLMediaElement", $.MediaElement);

$.defineNativeMethods("MediaError", $.MediaError);

$.defineNativeMethods("MediaKeyError", $.MediaKeyError);

$.defineNativeMethods("MediaKeyEvent", $.MediaKeyEvent);

$.defineNativeMethods("MediaKeyMessageEvent", $.MediaKeyMessageEvent);

$.defineNativeMethods("MediaKeyNeededEvent", $.MediaKeyNeededEvent);

$.defineNativeMethods("MediaKeySession", $.MediaKeySession);

$.defineNativeMethods("MediaKeys", $.MediaKeys);

$.defineNativeMethods("MediaList", $.MediaList);

$.defineNativeMethods("MediaQueryList", $.MediaQueryList);

$.defineNativeMethods("WebKitMediaSource", $.MediaSource);

$.defineNativeMethods("MediaStream", $.MediaStream);

$.defineNativeMethods("MediaStreamEvent", $.MediaStreamEvent);

$.defineNativeMethods("MediaStreamTrack", $.MediaStreamTrack);

$.defineNativeMethods("MediaStreamTrackEvent", $.MediaStreamTrackEvent);

$.defineNativeMethods("MemoryInfo", $.MemoryInfo);

$.defineNativeMethods("HTMLMenuElement", $.MenuElement);

$.defineNativeMethods("MessageChannel", $.MessageChannel);

$.defineNativeMethods("MessageEvent", $.MessageEvent);

$.defineNativeMethods("MessagePort", $.MessagePort);

$.defineNativeMethods("HTMLMetaElement", $.MetaElement);

$.defineNativeMethods("Metadata", $.Metadata);

$.defineNativeMethods("HTMLMeterElement", $.MeterElement);

$.defineNativeMethods("MIDIAccess", $.MidiAccess);

$.defineNativeMethods("MIDIConnectionEvent", $.MidiConnectionEvent);

$.defineNativeMethods("MIDIInput", $.MidiInput);

$.defineNativeMethods("MIDIMessageEvent", $.MidiMessageEvent);

$.defineNativeMethods("MIDIOutput", $.MidiOutput);

$.defineNativeMethodsNonleaf("MIDIPort", $.MidiPort);

$.defineNativeMethods("MimeType", $.MimeType);

$.defineNativeMethods("MimeTypeArray", $.MimeTypeArray);

$.defineNativeMethods("HTMLModElement", $.ModElement);

$.defineNativeMethodsNonleaf("DragEvent|MouseEvent", $.MouseEvent);

$.defineNativeMethods("MutationEvent", $.MutationEvent);

$.defineNativeMethods("MutationObserver|WebKitMutationObserver", $.MutationObserver);

$.defineNativeMethods("MutationRecord", $.MutationRecord);

$.defineNativeMethods("WebKitNamedFlow", $.NamedFlow);

$.defineNativeMethods("WebKitNamedFlowCollection", $.NamedFlowCollection);

$.defineNativeMethods("Navigator", $.Navigator);

$.defineNativeMethods("NavigatorUserMediaError", $.NavigatorUserMediaError);

$.defineNativeMethodsNonleaf("Node", $.Node);

$.defineNativeMethods("NodeFilter", $.NodeFilter);

$.defineNativeMethods("NodeIterator", $.NodeIterator);

$.defineNativeMethods("NodeList|RadioNodeList", $.NodeList);

$.defineNativeMethods("Notation", $.Notation);

$.defineNativeMethods("Notification", $.Notification);

$.defineNativeMethods("NotificationCenter", $.NotificationCenter);

$.defineNativeMethods("HTMLOListElement", $.OListElement);

$.defineNativeMethods("HTMLObjectElement", $.ObjectElement);

$.defineNativeMethods("HTMLOptGroupElement", $.OptGroupElement);

$.defineNativeMethods("HTMLOptionElement", $.OptionElement);

$.defineNativeMethods("HTMLOutputElement", $.OutputElement);

$.defineNativeMethods("OverflowEvent", $.OverflowEvent);

$.defineNativeMethods("PageTransitionEvent", $.PageTransitionEvent);

$.defineNativeMethods("HTMLParagraphElement", $.ParagraphElement);

$.defineNativeMethods("HTMLParamElement", $.ParamElement);

$.defineNativeMethods("Path", $.Path);

$.defineNativeMethods("Performance", $.Performance);

$.defineNativeMethodsNonleaf("PerformanceEntry", $.PerformanceEntry);

$.defineNativeMethods("PerformanceMark", $.PerformanceMark);

$.defineNativeMethods("PerformanceMeasure", $.PerformanceMeasure);

$.defineNativeMethods("PerformanceNavigation", $.PerformanceNavigation);

$.defineNativeMethods("PerformanceResourceTiming", $.PerformanceResourceTiming);

$.defineNativeMethods("PerformanceTiming", $.PerformanceTiming);

$.defineNativeMethods("Plugin", $.Plugin);

$.defineNativeMethods("PluginArray", $.PluginArray);

$.defineNativeMethods("PopStateEvent", $.PopStateEvent);

$.defineNativeMethods("PositionError", $.PositionError);

$.defineNativeMethods("HTMLPreElement", $.PreElement);

$.defineNativeMethods("ProcessingInstruction", $.ProcessingInstruction);

$.defineNativeMethods("HTMLProgressElement", $.ProgressElement);

$.defineNativeMethodsNonleaf("ProgressEvent", $.ProgressEvent);

$.defineNativeMethods("HTMLQuoteElement", $.QuoteElement);

$.defineNativeMethods("Range", $.Range);

$.defineNativeMethods("ResourceProgressEvent", $.ResourceProgressEvent);

$.defineNativeMethods("DataChannel|RTCDataChannel", $.RtcDataChannel);

$.defineNativeMethods("RTCDataChannelEvent", $.RtcDataChannelEvent);

$.defineNativeMethods("RTCDTMFSender", $.RtcDtmfSender);

$.defineNativeMethods("RTCDTMFToneChangeEvent", $.RtcDtmfToneChangeEvent);

$.defineNativeMethods("RTCIceCandidate|mozRTCIceCandidate", $.RtcIceCandidate);

$.defineNativeMethods("RTCIceCandidateEvent", $.RtcIceCandidateEvent);

$.defineNativeMethods("RTCPeerConnection|mozRTCPeerConnection", $.RtcPeerConnection);

$.defineNativeMethods("RTCSessionDescription|mozRTCSessionDescription", $.RtcSessionDescription);

$.defineNativeMethods("RTCStatsReport", $.RtcStatsReport);

$.defineNativeMethods("RTCStatsResponse", $.RtcStatsResponse);

$.defineNativeMethods("Screen", $.Screen);

$.defineNativeMethods("HTMLScriptElement", $.ScriptElement);

$.defineNativeMethods("SecurityPolicy", $.SecurityPolicy);

$.defineNativeMethods("SecurityPolicyViolationEvent", $.SecurityPolicyViolationEvent);

$.defineNativeMethods("HTMLSelectElement", $.SelectElement);

$.defineNativeMethods("Selection", $.Selection);

$.defineNativeMethods("HTMLShadowElement", $.ShadowElement);

$.defineNativeMethods("ShadowRoot", $.ShadowRoot);

$.defineNativeMethods("WebKitSourceBuffer", $.SourceBuffer);

$.defineNativeMethods("WebKitSourceBufferList", $.SourceBufferList);

$.defineNativeMethods("HTMLSourceElement", $.SourceElement);

$.defineNativeMethods("HTMLSpanElement", $.SpanElement);

$.defineNativeMethods("SpeechGrammar", $.SpeechGrammar);

$.defineNativeMethods("SpeechGrammarList", $.SpeechGrammarList);

$.defineNativeMethods("SpeechInputEvent", $.SpeechInputEvent);

$.defineNativeMethods("SpeechInputResult", $.SpeechInputResult);

$.defineNativeMethods("SpeechRecognition", $.SpeechRecognition);

$.defineNativeMethods("SpeechRecognitionAlternative", $.SpeechRecognitionAlternative);

$.defineNativeMethods("SpeechRecognitionError", $.SpeechRecognitionError);

$.defineNativeMethods("SpeechRecognitionEvent", $.SpeechRecognitionEvent);

$.defineNativeMethods("SpeechRecognitionResult", $.SpeechRecognitionResult);

$.defineNativeMethods("SpeechSynthesis", $.SpeechSynthesis);

$.defineNativeMethods("SpeechSynthesisEvent", $.SpeechSynthesisEvent);

$.defineNativeMethods("SpeechSynthesisUtterance", $.SpeechSynthesisUtterance);

$.defineNativeMethods("SpeechSynthesisVoice", $.SpeechSynthesisVoice);

$.defineNativeMethods("Storage", $.Storage);

$.defineNativeMethods("StorageEvent", $.StorageEvent);

$.defineNativeMethods("StorageInfo", $.StorageInfo);

$.defineNativeMethods("StorageQuota", $.StorageQuota);

$.defineNativeMethods("HTMLStyleElement", $.StyleElement);

$.defineNativeMethods("StyleMedia", $.StyleMedia);

$.defineNativeMethodsNonleaf("StyleSheet", $.StyleSheet);

$.defineNativeMethods("HTMLTableCaptionElement", $.TableCaptionElement);

$.defineNativeMethods("HTMLTableCellElement|HTMLTableDataCellElement|HTMLTableHeaderCellElement", $.TableCellElement);

$.defineNativeMethods("HTMLTableColElement", $.TableColElement);

$.defineNativeMethods("HTMLTableElement", $.TableElement);

$.defineNativeMethods("HTMLTableRowElement", $.TableRowElement);

$.defineNativeMethods("HTMLTableSectionElement", $.TableSectionElement);

$.defineNativeMethods("HTMLTemplateElement", $.TemplateElement);

$.defineNativeMethodsNonleaf("Text", $.Text);

$.defineNativeMethods("HTMLTextAreaElement", $.TextAreaElement);

$.defineNativeMethods("TextEvent", $.TextEvent);

$.defineNativeMethods("TextMetrics", $.TextMetrics);

$.defineNativeMethods("TextTrack", $.TextTrack);

$.defineNativeMethods("TextTrackCue", $.TextTrackCue);

$.defineNativeMethods("TextTrackCueList", $.TextTrackCueList);

$.defineNativeMethods("TextTrackList", $.TextTrackList);

$.defineNativeMethods("TimeRanges", $.TimeRanges);

$.defineNativeMethods("HTMLTitleElement", $.TitleElement);

$.defineNativeMethods("Touch", $.Touch);

$.defineNativeMethods("TouchEvent", $.TouchEvent);

$.defineNativeMethods("TouchList", $.TouchList);

$.defineNativeMethods("HTMLTrackElement", $.TrackElement);

$.defineNativeMethods("TrackEvent", $.TrackEvent);

$.defineNativeMethods("TransitionEvent|WebKitTransitionEvent", $.TransitionEvent);

$.defineNativeMethods("TreeWalker", $.TreeWalker);

$.defineNativeMethodsNonleaf("UIEvent", $.UIEvent);

$.defineNativeMethods("HTMLUListElement", $.UListElement);

$.defineNativeMethods("HTMLUnknownElement", $.UnknownElement);

$.defineNativeMethods("URL", $.Url);

$.defineNativeMethods("ValidityState", $.ValidityState);

$.defineNativeMethods("HTMLVideoElement", $.VideoElement);

$.defineNativeMethods("WebSocket", $.WebSocket);

$.defineNativeMethods("MouseScrollEvent|MouseWheelEvent|WheelEvent", $.WheelEvent);

$.defineNativeMethods("DOMWindow|Window", $.Window);

$.defineNativeMethods("Worker", $.Worker);

$.defineNativeMethods("XPathEvaluator", $.XPathEvaluator);

$.defineNativeMethods("XPathException", $.XPathException);

$.defineNativeMethods("XPathExpression", $.XPathExpression);

$.defineNativeMethods("XPathNSResolver", $.XPathNSResolver);

$.defineNativeMethods("XPathResult", $.XPathResult);

$.defineNativeMethods("XMLSerializer", $.XmlSerializer);

$.defineNativeMethods("XSLTProcessor", $.XsltProcessor);

$.defineNativeMethods("Attr", $._Attr);

$.defineNativeMethodsNonleaf("CSSValue", $._CSSValue);

$.defineNativeMethods("ClientRect", $._ClientRect);

$.defineNativeMethods("ClientRectList", $._ClientRectList);

$.defineNativeMethods("CSSRuleList", $._CssRuleList);

$.defineNativeMethodsNonleaf("CSSValueList", $._CssValueList);

$.defineNativeMethods("WebKitPoint", $._DomPoint);

$.defineNativeMethods("Entity", $._Entity);

$.defineNativeMethods("EntryArray", $._EntryArray);

$.defineNativeMethods("EntryArraySync", $._EntryArraySync);

$.defineNativeMethods("EntrySync", $._EntrySync);

$.defineNativeMethods("GamepadList", $._GamepadList);

$.defineNativeMethods("NamedNodeMap", $._NamedNodeMap);

$.defineNativeMethods("SpeechInputResultList", $._SpeechInputResultList);

$.defineNativeMethods("SpeechRecognitionResultList", $._SpeechRecognitionResultList);

$.defineNativeMethods("StyleSheetList", $._StyleSheetList);

$.defineNativeMethodsNonleaf("IDBCursor", $.Cursor);

$.defineNativeMethods("IDBCursorWithValue", $.CursorWithValue);

$.defineNativeMethods("IDBDatabase", $.Database);

$.defineNativeMethods("IDBFactory", $.IdbFactory);

$.defineNativeMethods("IDBIndex", $.Index);

$.defineNativeMethods("IDBKeyRange", $.KeyRange);

$.defineNativeMethods("IDBObjectStore", $.ObjectStore);

$.defineNativeMethods("IDBOpenDBRequest|IDBVersionChangeRequest", $.OpenDBRequest);

$.defineNativeMethodsNonleaf("IDBRequest", $.Request);

$.defineNativeMethods("IDBTransaction", $.Transaction);

$.defineNativeMethods("IDBVersionChangeEvent", $.VersionChangeEvent);

$.defineNativeMethods("SVGAElement", $.AElement);

$.defineNativeMethods("SVGAltGlyphElement", $.AltGlyphElement);

$.defineNativeMethods("SVGAngle", $.Angle);

$.defineNativeMethods("SVGAnimateElement", $.AnimateElement);

$.defineNativeMethods("SVGAnimateMotionElement", $.AnimateMotionElement);

$.defineNativeMethods("SVGAnimateTransformElement", $.AnimateTransformElement);

$.defineNativeMethods("SVGAnimatedAngle", $.AnimatedAngle);

$.defineNativeMethods("SVGAnimatedBoolean", $.AnimatedBoolean);

$.defineNativeMethods("SVGAnimatedEnumeration", $.AnimatedEnumeration);

$.defineNativeMethods("SVGAnimatedInteger", $.AnimatedInteger);

$.defineNativeMethods("SVGAnimatedLength", $.AnimatedLength);

$.defineNativeMethods("SVGAnimatedLengthList", $.AnimatedLengthList);

$.defineNativeMethods("SVGAnimatedNumber", $.AnimatedNumber);

$.defineNativeMethods("SVGAnimatedNumberList", $.AnimatedNumberList);

$.defineNativeMethods("SVGAnimatedPreserveAspectRatio", $.AnimatedPreserveAspectRatio);

$.defineNativeMethods("SVGAnimatedRect", $.AnimatedRect);

$.defineNativeMethods("SVGAnimatedString", $.AnimatedString);

$.defineNativeMethods("SVGAnimatedTransformList", $.AnimatedTransformList);

$.defineNativeMethodsNonleaf("SVGAnimationElement", $.AnimationElement);

$.defineNativeMethods("SVGCircleElement", $.CircleElement);

$.defineNativeMethods("SVGClipPathElement", $.ClipPathElement);

$.defineNativeMethods("SVGDefsElement", $.DefsElement);

$.defineNativeMethods("SVGDescElement", $.DescElement);

$.defineNativeMethods("SVGElementInstance", $.ElementInstance);

$.defineNativeMethods("SVGEllipseElement", $.EllipseElement);

$.defineNativeMethods("SVGFEBlendElement", $.FEBlendElement);

$.defineNativeMethods("SVGFEColorMatrixElement", $.FEColorMatrixElement);

$.defineNativeMethods("SVGFEComponentTransferElement", $.FEComponentTransferElement);

$.defineNativeMethods("SVGFECompositeElement", $.FECompositeElement);

$.defineNativeMethods("SVGFEConvolveMatrixElement", $.FEConvolveMatrixElement);

$.defineNativeMethods("SVGFEDiffuseLightingElement", $.FEDiffuseLightingElement);

$.defineNativeMethods("SVGFEDisplacementMapElement", $.FEDisplacementMapElement);

$.defineNativeMethods("SVGFEDistantLightElement", $.FEDistantLightElement);

$.defineNativeMethods("SVGFEFloodElement", $.FEFloodElement);

$.defineNativeMethods("SVGFEFuncAElement", $.FEFuncAElement);

$.defineNativeMethods("SVGFEFuncBElement", $.FEFuncBElement);

$.defineNativeMethods("SVGFEFuncGElement", $.FEFuncGElement);

$.defineNativeMethods("SVGFEFuncRElement", $.FEFuncRElement);

$.defineNativeMethods("SVGFEGaussianBlurElement", $.FEGaussianBlurElement);

$.defineNativeMethods("SVGFEImageElement", $.FEImageElement);

$.defineNativeMethods("SVGFEMergeElement", $.FEMergeElement);

$.defineNativeMethods("SVGFEMergeNodeElement", $.FEMergeNodeElement);

$.defineNativeMethods("SVGFEMorphologyElement", $.FEMorphologyElement);

$.defineNativeMethods("SVGFEOffsetElement", $.FEOffsetElement);

$.defineNativeMethods("SVGFEPointLightElement", $.FEPointLightElement);

$.defineNativeMethods("SVGFESpecularLightingElement", $.FESpecularLightingElement);

$.defineNativeMethods("SVGFESpotLightElement", $.FESpotLightElement);

$.defineNativeMethods("SVGFETileElement", $.FETileElement);

$.defineNativeMethods("SVGFETurbulenceElement", $.FETurbulenceElement);

$.defineNativeMethods("SVGFilterElement", $.FilterElement);

$.defineNativeMethods("SVGForeignObjectElement", $.ForeignObjectElement);

$.defineNativeMethods("SVGGElement", $.GElement);

$.defineNativeMethods("SVGImageElement", $.ImageElement0);

$.defineNativeMethods("SVGLength", $.Length);

$.defineNativeMethods("SVGLengthList", $.LengthList);

$.defineNativeMethods("SVGLineElement", $.LineElement);

$.defineNativeMethods("SVGLinearGradientElement", $.LinearGradientElement);

$.defineNativeMethods("SVGMarkerElement", $.MarkerElement);

$.defineNativeMethods("SVGMaskElement", $.MaskElement);

$.defineNativeMethods("SVGMatrix", $.Matrix);

$.defineNativeMethods("SVGMetadataElement", $.MetadataElement);

$.defineNativeMethods("SVGNumber", $.Number);

$.defineNativeMethods("SVGNumberList", $.NumberList);

$.defineNativeMethods("SVGPathElement", $.PathElement);

$.defineNativeMethodsNonleaf("SVGPathSeg", $.PathSeg);

$.defineNativeMethods("SVGPathSegArcAbs", $.PathSegArcAbs);

$.defineNativeMethods("SVGPathSegArcRel", $.PathSegArcRel);

$.defineNativeMethods("SVGPathSegClosePath", $.PathSegClosePath);

$.defineNativeMethods("SVGPathSegCurvetoCubicAbs", $.PathSegCurvetoCubicAbs);

$.defineNativeMethods("SVGPathSegCurvetoCubicRel", $.PathSegCurvetoCubicRel);

$.defineNativeMethods("SVGPathSegCurvetoCubicSmoothAbs", $.PathSegCurvetoCubicSmoothAbs);

$.defineNativeMethods("SVGPathSegCurvetoCubicSmoothRel", $.PathSegCurvetoCubicSmoothRel);

$.defineNativeMethods("SVGPathSegCurvetoQuadraticAbs", $.PathSegCurvetoQuadraticAbs);

$.defineNativeMethods("SVGPathSegCurvetoQuadraticRel", $.PathSegCurvetoQuadraticRel);

$.defineNativeMethods("SVGPathSegCurvetoQuadraticSmoothAbs", $.PathSegCurvetoQuadraticSmoothAbs);

$.defineNativeMethods("SVGPathSegCurvetoQuadraticSmoothRel", $.PathSegCurvetoQuadraticSmoothRel);

$.defineNativeMethods("SVGPathSegLinetoAbs", $.PathSegLinetoAbs);

$.defineNativeMethods("SVGPathSegLinetoHorizontalAbs", $.PathSegLinetoHorizontalAbs);

$.defineNativeMethods("SVGPathSegLinetoHorizontalRel", $.PathSegLinetoHorizontalRel);

$.defineNativeMethods("SVGPathSegLinetoRel", $.PathSegLinetoRel);

$.defineNativeMethods("SVGPathSegLinetoVerticalAbs", $.PathSegLinetoVerticalAbs);

$.defineNativeMethods("SVGPathSegLinetoVerticalRel", $.PathSegLinetoVerticalRel);

$.defineNativeMethods("SVGPathSegList", $.PathSegList);

$.defineNativeMethods("SVGPathSegMovetoAbs", $.PathSegMovetoAbs);

$.defineNativeMethods("SVGPathSegMovetoRel", $.PathSegMovetoRel);

$.defineNativeMethods("SVGPatternElement", $.PatternElement);

$.defineNativeMethods("SVGPoint", $.Point0);

$.defineNativeMethods("SVGPointList", $.PointList);

$.defineNativeMethods("SVGPolygonElement", $.PolygonElement);

$.defineNativeMethods("SVGPolylineElement", $.PolylineElement);

$.defineNativeMethods("SVGPreserveAspectRatio", $.PreserveAspectRatio);

$.defineNativeMethods("SVGRadialGradientElement", $.RadialGradientElement);

$.defineNativeMethods("SVGRect", $.Rect0);

$.defineNativeMethods("SVGRectElement", $.RectElement);

$.defineNativeMethods("SVGRenderingIntent", $.RenderingIntent);

$.defineNativeMethods("SVGScriptElement", $.ScriptElement0);

$.defineNativeMethods("SVGSetElement", $.SetElement);

$.defineNativeMethods("SVGStopElement", $.StopElement);

$.defineNativeMethods("SVGStringList", $.StringList);

$.defineNativeMethods("SVGStyleElement", $.StyleElement0);

$.defineNativeMethodsNonleaf("SVGStyledElement", $.StyledElement);

$.defineNativeMethods("SVGDocument", $.SvgDocument);

$.defineNativeMethodsNonleaf("SVGElement", $.SvgElement);

$.defineNativeMethods("SVGException", $.SvgException);

$.defineNativeMethods("SVGSVGElement", $.SvgSvgElement);

$.defineNativeMethods("SVGSwitchElement", $.SwitchElement);

$.defineNativeMethods("SVGSymbolElement", $.SymbolElement);

$.defineNativeMethods("SVGTSpanElement", $.TSpanElement);

$.defineNativeMethodsNonleaf("SVGTextContentElement", $.TextContentElement);

$.defineNativeMethods("SVGTextElement", $.TextElement);

$.defineNativeMethods("SVGTextPathElement", $.TextPathElement);

$.defineNativeMethodsNonleaf("SVGTextPositioningElement", $.TextPositioningElement);

$.defineNativeMethods("SVGTitleElement", $.TitleElement0);

$.defineNativeMethods("SVGTransform", $.Transform);

$.defineNativeMethods("SVGTransformList", $.TransformList);

$.defineNativeMethods("SVGUnitTypes", $.UnitTypes);

$.defineNativeMethods("SVGUseElement", $.UseElement);

$.defineNativeMethods("SVGViewElement", $.ViewElement);

$.defineNativeMethods("SVGViewSpec", $.ViewSpec);

$.defineNativeMethods("SVGZoomEvent", $.ZoomEvent);

$.defineNativeMethods("SVGElementInstanceList", $._ElementInstanceList);

$.defineNativeMethodsNonleaf("SVGGradientElement", $._GradientElement);

$.defineNativeMethodsNonleaf("SVGComponentTransferFunctionElement", $._SVGComponentTransferFunctionElement);

$.defineNativeMethods("AnalyserNode|RealtimeAnalyserNode", $.AnalyserNode);

$.defineNativeMethods("AudioBuffer", $.AudioBuffer);

$.defineNativeMethods("AudioBufferSourceNode", $.AudioBufferSourceNode);

$.defineNativeMethodsNonleaf("AudioContext", $.AudioContext);

$.defineNativeMethods("AudioDestinationNode", $.AudioDestinationNode);

$.defineNativeMethods("AudioListener", $.AudioListener);

$.defineNativeMethodsNonleaf("AudioNode", $.AudioNode);

$.defineNativeMethods("AudioParam", $.AudioParam);

$.defineNativeMethods("AudioProcessingEvent", $.AudioProcessingEvent);

$.defineNativeMethodsNonleaf("AudioSourceNode", $.AudioSourceNode);

$.defineNativeMethods("BiquadFilterNode", $.BiquadFilterNode);

$.defineNativeMethods("AudioChannelMerger|ChannelMergerNode", $.ChannelMergerNode);

$.defineNativeMethods("AudioChannelSplitter|ChannelSplitterNode", $.ChannelSplitterNode);

$.defineNativeMethods("ConvolverNode", $.ConvolverNode);

$.defineNativeMethods("DelayNode", $.DelayNode);

$.defineNativeMethods("DynamicsCompressorNode", $.DynamicsCompressorNode);

$.defineNativeMethods("AudioGainNode|GainNode", $.GainNode);

$.defineNativeMethods("MediaElementAudioSourceNode", $.MediaElementAudioSourceNode);

$.defineNativeMethods("MediaStreamAudioDestinationNode", $.MediaStreamAudioDestinationNode);

$.defineNativeMethods("MediaStreamAudioSourceNode", $.MediaStreamAudioSourceNode);

$.defineNativeMethods("OfflineAudioCompletionEvent", $.OfflineAudioCompletionEvent);

$.defineNativeMethods("OfflineAudioContext", $.OfflineAudioContext);

$.defineNativeMethods("Oscillator|OscillatorNode", $.OscillatorNode);

$.defineNativeMethods("AudioPannerNode|PannerNode", $.PannerNode);

$.defineNativeMethods("JavaScriptAudioNode|ScriptProcessorNode", $.ScriptProcessorNode);

$.defineNativeMethods("WaveShaperNode", $.WaveShaperNode);

$.defineNativeMethods("WaveTable", $.WaveTable);

$.defineNativeMethods("WebGLActiveInfo", $.ActiveInfo);

$.defineNativeMethods("WebGLBuffer", $.Buffer);

$.defineNativeMethods("WebGLCompressedTextureATC", $.CompressedTextureAtc);

$.defineNativeMethods("WebGLCompressedTexturePVRTC", $.CompressedTexturePvrtc);

$.defineNativeMethods("WebGLCompressedTextureS3TC", $.CompressedTextureS3TC);

$.defineNativeMethods("WebGLContextAttributes", $.ContextAttributes);

$.defineNativeMethods("WebGLContextEvent", $.ContextEvent);

$.defineNativeMethods("WebGLDebugRendererInfo", $.DebugRendererInfo);

$.defineNativeMethods("WebGLDebugShaders", $.DebugShaders);

$.defineNativeMethods("WebGLDepthTexture", $.DepthTexture);

$.defineNativeMethods("EXTDrawBuffers", $.ExtDrawBuffers);

$.defineNativeMethods("EXTFragDepth", $.ExtFragDepth);

$.defineNativeMethods("EXTTextureFilterAnisotropic", $.ExtTextureFilterAnisotropic);

$.defineNativeMethods("WebGLFramebuffer", $.Framebuffer);

$.defineNativeMethods("WebGLLoseContext", $.LoseContext);

$.defineNativeMethods("OESElementIndexUint", $.OesElementIndexUint);

$.defineNativeMethods("OESStandardDerivatives", $.OesStandardDerivatives);

$.defineNativeMethods("OESTextureFloat", $.OesTextureFloat);

$.defineNativeMethods("OESTextureFloatLinear", $.OesTextureFloatLinear);

$.defineNativeMethods("OESTextureHalfFloat", $.OesTextureHalfFloat);

$.defineNativeMethods("OESTextureHalfFloatLinear", $.OesTextureHalfFloatLinear);

$.defineNativeMethods("OESVertexArrayObject", $.OesVertexArrayObject);

$.defineNativeMethods("WebGLProgram", $.Program);

$.defineNativeMethods("WebGLRenderbuffer", $.Renderbuffer);

$.defineNativeMethods("WebGLRenderingContext", $.RenderingContext);

$.defineNativeMethods("WebGLShader", $.Shader);

$.defineNativeMethods("WebGLShaderPrecisionFormat", $.ShaderPrecisionFormat);

$.defineNativeMethods("WebGLTexture", $.Texture);

$.defineNativeMethods("WebGLUniformLocation", $.UniformLocation);

$.defineNativeMethods("WebGLVertexArrayObjectOES", $.VertexArrayObject);

$.defineNativeMethods("Database", $.SqlDatabase);

$.defineNativeMethods("SQLError", $.SqlError);

$.defineNativeMethods("SQLException", $.SqlException);

$.defineNativeMethods("SQLResultSet", $.SqlResultSet);

$.defineNativeMethods("SQLResultSetRowList", $.SqlResultSetRowList);

$.defineNativeMethods("SQLTransaction", $.SqlTransaction);

$.defineNativeMethods("ArrayBuffer", $.ByteBuffer);

$.defineNativeMethodsNonleaf("ArrayBufferView", $.TypedData);

$.defineNativeMethods("DataView", $.ByteData);

$.defineNativeMethods("Float32Array", $.Float32List);

$.defineNativeMethods("Float64Array", $.Float64List);

$.defineNativeMethods("Int16Array", $.Int16List);

$.defineNativeMethods("Int32Array", $.Int32List);

$.defineNativeMethods("Int8Array", $.Int8List);

$.defineNativeMethods("Uint16Array", $.Uint16List);

$.defineNativeMethods("Uint32Array", $.Uint32List);

$.defineNativeMethods("CanvasPixelArray|Uint8ClampedArray", $.Uint8ClampedList);

$.defineNativeMethodsNonleaf("Uint8Array", $.Uint8List);


init.metadata = [];
var $ = null;
Isolate = Isolate.$finishIsolateConstructor(Isolate);
var $ = new Isolate();
$.initializeDispatchProperty(function(a) {
  $.getDispatchProperty = a;
}, "___dart_dispatch_record_ZxYxX_0_", $.Interceptor.prototype);
// BEGIN invoke [main].
if (typeof document !== "undefined" && document.readyState !== "complete") {
  document.addEventListener("readystatechange", function () {
    if (document.readyState == "complete") {
      if (typeof dartMainRunner === "function") {
        dartMainRunner(function() { $.startRootIsolate($.main$closure); });
      } else {
        $.startRootIsolate($.main$closure);
      }
    }
  }, false);
} else {
  if (typeof dartMainRunner === "function") {
    dartMainRunner(function() { $.startRootIsolate($.main$closure); });
  } else {
    $.startRootIsolate($.main$closure);
  }
}
// END invoke [main].
function init() {
  Isolate.$isolateProperties = {};
  function generateAccessor(field, prototype) {
    var len = field.length;
    var code = field.charCodeAt(len - 1);
    code = code >= 60 && code <= 64 ? code - 59 : code >= 123 && code <= 126 ? code - 117 : code >= 37 && code <= 43 ? code - 27 : 0;
    if (code) {
      var getterCode = code & 3;
      var setterCode = code >> 2;
      var accessorName = field = field.substring(0, len - 1);
      var divider = field.indexOf(":");
      if (divider > 0) {
        accessorName = field.substring(0, divider);
        field = field.substring(divider + 1);
      }
      if (getterCode) {
        var args = getterCode & 2 ? "receiver" : "";
        var receiver = getterCode & 1 ? "this" : "receiver";
        var body = "return " + receiver + "." + field;
        prototype["get$" + accessorName] = new Function(args, body);
      }
      if (setterCode) {
        var args = setterCode & 2 ? "receiver, value" : "value";
        var receiver = setterCode & 1 ? "this" : "receiver";
        var body = receiver + "." + field + " = value";
        prototype["set$" + accessorName] = new Function(args, body);
      }
    }
    return field;
  }
  Isolate.$isolateProperties.$generateAccessor = generateAccessor;
  function defineClass(name, cls, fields, prototype) {
    var constructor;
    if (typeof fields == "function") {
      constructor = fields;
    } else {
      var str = "function " + cls + "(";
      var body = "";
      for (var i = 0; i < fields.length; i++) {
        if (i != 0)
          str += ", ";
        var field = generateAccessor(fields[i], prototype);
        var parameter = "parameter_" + field;
        str += parameter;
        body += "this." + field + " = " + parameter + ";\n";
      }
      str += ") {" + body + "}\nreturn " + cls;
      constructor = new Function(str)();
    }
    constructor.prototype = prototype;
    constructor.builtin$cls = name;
    return constructor;
  }
  var supportsProto = false;
  var tmp = defineClass("c", "c", ["f<"], {}).prototype;
  if (tmp.__proto__) {
    tmp.__proto__ = {};
    if (typeof tmp.get$f != "undefined")
      supportsProto = true;
  }
  Isolate.$finishClasses = function(collectedClasses, isolateProperties, existingIsolateProperties) {
    var pendingClasses = {};
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    for (var cls in collectedClasses) {
      if (hasOwnProperty.call(collectedClasses, cls)) {
        var desc = collectedClasses[cls];
        var classData = desc[""], supr, name = cls, fields = classData;
        if (typeof classData == "string") {
          var split = classData.split("/");
          if (split.length == 2) {
            name = split[0];
            fields = split[1];
          }
        }
        if (typeof fields == "string") {
          var s = fields.split(";");
          fields = s[1] == "" ? [] : s[1].split(",");
          supr = s[0];
        } else {
          supr = desc.super;
          if (!!desc.$name)
            name = desc.$name;
        }
        if (supr && supr.indexOf("+") > 0) {
          s = supr.split("+");
          supr = s[0];
          var mixin = collectedClasses[s[1]];
          for (var d in mixin) {
            if (hasOwnProperty.call(mixin, d) && !hasOwnProperty.call(desc, d))
              desc[d] = mixin[d];
          }
        }
        var constructor = defineClass(name, cls, fields, desc);
        isolateProperties[cls] = constructor;
        if (supr)
          pendingClasses[cls] = supr;
      }
    }
    var finishedClasses = {};
    function finishClass(cls) {
      var hasOwnProperty = Object.prototype.hasOwnProperty;
      if (hasOwnProperty.call(finishedClasses, cls))
        return;
      finishedClasses[cls] = true;
      var superclass = pendingClasses[cls];
      if (!superclass || typeof superclass != "string")
        return;
      finishClass(superclass);
      var constructor = isolateProperties[cls];
      var superConstructor = isolateProperties[superclass];
      if (!superConstructor)
        superConstructor = existingIsolateProperties[superclass];
      var prototype = constructor.prototype;
      if (supportsProto) {
        prototype.__proto__ = superConstructor.prototype;
        prototype.constructor = constructor;
      } else {
        function tmp() {
        }
        tmp.prototype = superConstructor.prototype;
        var newPrototype = new tmp();
        constructor.prototype = newPrototype;
        newPrototype.constructor = constructor;
        for (var member in prototype) {
          if (!member)
            continue;
          if (hasOwnProperty.call(prototype, member)) {
            newPrototype[member] = prototype[member];
          }
        }
      }
    }
    for (var cls in pendingClasses)
      finishClass(cls);
  };
  Isolate.$lazy = function(prototype, staticName, fieldName, getterName, lazyValue) {
    var getter = new Function("{ return $." + fieldName + ";}");
    var sentinelUndefined = {};
    var sentinelInProgress = {};
    prototype[fieldName] = sentinelUndefined;
    prototype[getterName] = function() {
      var result = $[fieldName];
      try {
        if (result === sentinelUndefined) {
          $[fieldName] = sentinelInProgress;
          try {
            result = $[fieldName] = lazyValue();
          } finally {
            if (result === sentinelUndefined) {
              if ($[fieldName] === sentinelInProgress) {
                $[fieldName] = null;
              }
            }
          }
        } else {
          if (result === sentinelInProgress)
            $.throwCyclicInit(staticName);
        }
        return result;
      } finally {
        $[getterName] = getter;
      }
    };
  };
  Isolate.$finishIsolateConstructor = function(oldIsolate) {
    var isolateProperties = oldIsolate.$isolateProperties;
    isolateProperties.$currentScript = typeof document == "object" ? document.currentScript || document.scripts[document.scripts.length - 1] : null;
    var isolatePrototype = oldIsolate.prototype;
    var str = "{\n";
    str += "var properties = Isolate.$isolateProperties;\n";
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    for (var staticName in isolateProperties) {
      if (hasOwnProperty.call(isolateProperties, staticName)) {
        str += "this." + staticName + "= properties." + staticName + ";\n";
      }
    }
    str += "}\n";
    var newIsolate = new Function(str);
    newIsolate.prototype = isolatePrototype;
    isolatePrototype.constructor = newIsolate;
    newIsolate.$isolateProperties = isolateProperties;
    newIsolate.makeConstantList = oldIsolate.makeConstantList;
    newIsolate.$finishClasses = oldIsolate.$finishClasses;
    return newIsolate;
  };
}
//@ sourceMappingURL=negentropia_home.dart.js.map
